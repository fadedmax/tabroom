<%args>
	$entry
	$person
	$dont_notify => undef
</%args>
<%init>

	my $tourn = $entry->event->tourn;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $now = DateTime->now(time_zone => $tz);

	$entry->waitlist(0);
	$entry->update;

	eval {
		$entry->setting("off_waitlist", "date", $now);
	};

	my $double_warning;

	my @students;

	my $waitlist_message = $tourn->setting("waitlist_message");

	my $strip = HTML::Strip->new();

	$waitlist_message =~ s/\<li\>/*/g;
	$waitlist_message =~ s/\<\/li\>/\n/g;
	$waitlist_message =~ s/\n/\n\n/g;
	$waitlist_message =~ s/\&nbsp;/ /g;
	$waitlist_message = $strip->parse( $waitlist_message );

	foreach my $student ($entry->students) {

		my @entries = $m->comp("/funclib/student_entries.mas",
			student => $student,
			tourn   => $tourn
		);

		$double_warning++ if scalar @entries > 1;
	}

	unless ($dont_notify) {

		my $subject = $entry->event->abbr." entry accepted from waitlist: ". $tourn->name;
		my $message = "

		The ".$tourn->name." is pleased to notify you that\n\n

		".$entry->name." (".$entry->code.")\n\n

		has been taken from the waitlist and added to the
		tournament in ".$entry->event->name."\n\n";

		if ($waitlist_message) {
			$message .= "\n";
			$message .= $waitlist_message;
			$message .= "\n";
		}

		if ($double_warning) {
			$message .= "\n\n******WARNING:******\n";
			$message .= "Students in this entry are now double-entered.  Please make sure \nn";
			$message .= "that their double-entry is not in conflict with tournament \n";
			$message .= "rules as the result of getting off the waitlist in this event. \n";
		}

		unless ($double_warning || $waitlist_message) {
			$message .= "\n\n";
			$message .= "You do not have to take further action; this student \n";
			$message .= "is now fully entered and has been added to your invoice.\n";
		}

		$message .= "\n\n";
		$message .= "   ".$person->first." ".$person->last."\n\n";
		$message .= "   ".$tourn->name."\n ";

		my $contacts = $m->comp("/funclib/contacts.mas", school => $entry->school, return => 1);
		my %ids = map{$_->{person_id} => $_} @{$contacts};
		my @mail = keys %ids;

		my $numberwang = substr($now->epoch, -6, 6);
		my $from_string = $tourn->name." <".$tourn->webname.'_'.$numberwang.'@www.tabroom.com>';

		$m->comp("/funclib/send_notify.mas",
			from_string => $from_string,
			reply_to    => $person->email,
			sender      => $person->id,
			tourn       => $tourn->id,
			ids         => \@mail,
			subject     => $subject,
			noWeb       => 'true',
			body        => $message
		);

	}

	return;

</%init>
