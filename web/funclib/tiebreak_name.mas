<%args>
	$tiebreak => undef
</%args>
<%init>

	return unless $tiebreak;

	my $highlow;
	my $highlow_count = $tiebreak->highlow_count;
	my $highlow_threshold = $tiebreak->highlow_threshold;
	my $highlow_target = $tiebreak->highlow_target;

	$highlow_count = 1 unless $highlow_count;

	if ($highlow_target > 0) {

		if ($tiebreak->highlow == 1) {
			$highlow = ", dropping the best &amp; worst ";
		} elsif ($tiebreak->highlow == 3) {
			$highlow = ", dropping the best ";
		} elsif ($tiebreak->highlow == 4) {
			$highlow = ", dropping the worst";
		}

		$highlow .= " until there are $highlow_target scores";

	} else {
		if ($tiebreak->highlow == 1) {
			$highlow = ", except the ".$highlow_count." best &amp; worst";
		} elsif ($tiebreak->highlow == 3) {
			$highlow = ", except the ".$highlow_count." best";
		} elsif ($tiebreak->highlow == 4) {
			$highlow = ", except the ".$highlow_count." worst";
		} elsif ($tiebreak->highlow == 5) {
			$highlow = ", including only the ".$highlow_count." best";
		}

		if ($highlow_threshold) {
			$highlow .= " if there are at least $highlow_threshold scores";
		}
	}

	my $name = $tiebreak->name;
	$name =~ s/diff/differential/g;
	$name =~ s/judgepref/Judges Preference on Ranks (if tied)/g;
	$name =~ s/headtohead/Head to Head wins (if tied)/g;
	$name =~ s/opp/Opponents' avg/g;
	$name =~ s/judgevar2/JVar based on Population - Z2/g;
	$name =~ s/judgevar/Judge Variance Points - Z/g;

	if ($name eq "seed") {
		$name = "Prelim Seed";
	} elsif ($name eq "3way_pts_worst") {
		$name = "Break three-way tie; remove worst points ";
	} elsif ($name eq "entry_vote_one") {
		$name = "Entry vote (count as one)";
	} elsif ($name eq "entry_vote_all") {
		$name = "Entry vote (count all)";
	} elsif ($name eq "3way_rcp_worst") {
		$name = "Break three-way tie; remove worst recips ";
	} elsif ($name eq "three_way_recip") {
		$name = "Break three-way tie; remove best recips ";
	} elsif ($name eq "three_way_point") {
		$name = "Break three-way tie; remove best points ";
	} elsif ($name eq "best_po") {
		$name = "Best Presiding Officer on Parliamentarian ballot";
	} else {
		$name =~ s/_/ /g;
		$name = ucfirst($name);
	}

	if ($tiebreak->result eq "win") {
		$name .= " in wins";
	} elsif ($tiebreak->result eq "loss") {
		$name .= " in losses";
	} elsif ($tiebreak->result eq "split") {
		$name .= " in splits";
	}

</%init>

%		if ($name eq "Rounds") {
			Last round competed in
%		} elsif ($name eq "NSDA Points") {
			<% $name %>
%		} elsif ($name eq "Prelim Seed") {
			<% $name %>
%		} else {
%		    if ($name eq "Reciprocals") {
				Reciprocal ranks (# of 1s, # of 2s)
%			} else {
				<% $name %>
%			}
%			if ($tiebreak->count eq 'specific') {
				 from Round #<% $tiebreak->count_round %>
%			} else {
				 from <% $tiebreak->count %> round(s)
%			}
<%perl>
			if ($tiebreak->truncate && $tiebreak->truncate_smallest) {
				$m->print(", truncated to ".$tiebreak->truncate." or smallest");
			} elsif ($tiebreak->truncate) {
   				$m->print(", truncated to ".$tiebreak->truncate);
			} elsif ($tiebreak->truncate_smallest) {
   				$m->print(", truncated to smallest section");
			}

			if ($tiebreak->chair eq "nonchair") {
				$m->print(", scorers only ");
			}
			if ($tiebreak->chair eq "chair") {
				$m->print(", chair/parli only ");
			}
</%perl>
			<%
				$highlow
			%> <%
				($tiebreak->multiplier > 1)
			 		? ", multiplied by ".$tiebreak->multiplier
					: ""
			%> <%
				$tiebreak->child > 0
				 	? ", composite on ".$tiebreak->child->name
					: ""
			%> <%
				$tiebreak->violation > 0
					? ", +".$tiebreak->violation." for violation"
					: ""
			%>
%		}

