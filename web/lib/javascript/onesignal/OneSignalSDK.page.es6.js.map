{"version":3,"file":"OneSignalSDK.page.es6.js","mappings":"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","sources":["webpack://onesignal-web-sdk/./node_modules/bowser/src/bowser.js","webpack://onesignal-web-sdk/./node_modules/jsonp/index.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/models/SupportedModels.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/Browser.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/helpers/EnvironmentInfoHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/models/SubscriptionModels.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/SubscriptionStateKind.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/DeliveryPlatformKind.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/userModel/FuturePushSubscriptionRecord.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/requestService/AliasPair.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/OneSignalApiError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/utils/AwaitableTimeout.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/api/RetryBackoff.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/api/OneSignalApiBase.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/utils/Encoding.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/SdkInitError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/Outcomes.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/requestService/RequestService.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/api/OneSignalApiShared.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/api/OneSignalApiSW.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/api/OneSignalApi.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/Prompts.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/config/constants.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/utils/TagUtils.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/PromptsHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/ConverterHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/AppConfig.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/ConfigHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/managers/ConfigManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/libraries/WorkerMessenger.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/sw/helpers/ServiceWorkerUtilHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/services/DynamicResourceLoader.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/utils/LocalStorage.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/managers/PageViewManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/managers/PermissionManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/Path.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/ServiceWorkerRegistrationError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/sw/libraries/Log.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/sw/helpers/CancelableTimeout.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/OutcomesHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/ServiceWorkerHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/slidedown/constants.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/managers/CustomLinkManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/services/LimitStore.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/utils/BrowserUtils.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/PermissionPromptType.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/InvalidStateError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/NotSubscribedError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/models/CoreChangeType.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/utils/ValidatorUtils.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/MainHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/modelRepo/OSModelUpdatedArgs.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/Subscribable.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/models/ModelStoreChange.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/modelRepo/OSModel.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/utils/typePredicates.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/UserDirector.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/User.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/userModel/EventListenerBase.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/PushSubscriptionNamespace.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/NotificationPermission.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/PushPermissionNotGrantedError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/SubscriptionError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/UserNamespace.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/EventHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/managers/ServiceWorkerManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/NotImplementedError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/RawPushSubscription.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/managers/SubscriptionManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/ContextHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/managers/UpdateManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/managers/sessionManager/SessionManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/managers/tagManager/TagManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/slidedown/LoadingIndicator.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/slidedown/TaggingContainer.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/slidedown/InternationalTelephoneInput.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/errors/ChannelCaptureError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/models/Dismiss.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/slidedown/ChannelCaptureContainer.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/slidedown/Slidedown.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/slidedown/SlidedownElement.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/slidedown/RetryIndicator.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/errors/PermissionMessageDismissedError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/slidedown/ConfirmationToast.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/errors/AlreadySubscribedError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/errors/ExistingChannelError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/modules/TimedLocalStorage.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/DismissHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/SubscriptionHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/bell/AnimatedElement.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/bell/ActiveAnimatedElement.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/bell/Badge.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/bell/Message.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/bell/Button.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/bell/Dialog.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/bell/Launcher.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/bell/Bell.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/InitHelper.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/managers/slidedownManager/SlidedownManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/managers/PromptsManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/models/Context.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/utils/ProcessOneSignalPushCalls.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/NotificationsNamespace.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/caching/ModelCache.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/modelRepo/ModelRepo.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/executors/ExecutorResult.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/requestService/helpers.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/requestService/IdentityRequests.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/requestService/SubscriptionRequests.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/requestService/UserPropertyRequests.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/executors/ExecutorConfigMap.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/operationRepo/Operation.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/caching/OperationCache.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/executors/ExecutorBase.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/executors/IdentityExecutor.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/executors/PropertiesExecutor.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/executors/SubscriptionExecutor.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/executors/ExecutorFactory.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/executors/ExecutorStore.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/operationRepo/OperationRepo.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/modelRepo/OSModelStore.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/modelRepo/OSModelStoreFactory.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/NewRecordsState.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/CoreModule.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/core/CoreModuleDirector.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/managers/LoginManager.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/OneSignal.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/OneSignalEvents.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/SlidedownNamespace.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/SessionNamespace.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/DebugNamesapce.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/onesignal/OneSignalDeferred.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/TimeoutError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/context/Utils.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/InvalidArgumentError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/errors/OneSignalError.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/utils/BrowserSupportsPush.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/Environment.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/libraries/Emitter.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/libraries/Log.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/EnvironmentKind.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/managers/SdkEnvironment.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/Session.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/WindowEnvironmentKind.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/services/IndexedDb.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/AppState.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/UserState.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/models/Subscription.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/services/Database.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/helpers/OSNotificationDatabaseSerializer.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/services/OneSignalEvent.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/utils/OneSignalUtils.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/utils/PermissionUtils.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/utils/bowserCastle.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/shared/utils/utils.js","webpack://onesignal-web-sdk/./node_modules/tslib/tslib.es6.js","webpack://onesignal-web-sdk/webpack/bootstrap","webpack://onesignal-web-sdk/webpack/runtime/amd define","webpack://onesignal-web-sdk/webpack/runtime/compat get default export","webpack://onesignal-web-sdk/webpack/runtime/define property getters","webpack://onesignal-web-sdk/webpack/runtime/global","webpack://onesignal-web-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/page/utils/ReplayCallsOnOneSignal.js","webpack://onesignal-web-sdk/../../home/runner/work/OneSignal-Website-SDK/OneSignal-Website-SDK/build/ts-to-es6/src/entries/pageSdkInit.js"],"sourcesContent":["/*!\n * Bowser - a browser detector\n * https://github.com/ded/bowser\n * MIT License | (c) Dustin Diaz 2015\n */\n\n!function (root, name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(name, definition)\n  else root[name] = definition()\n}(this, 'bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\n      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\n      , chromeos = /CrOS/.test(ua)\n      , silk = /silk/i.test(ua)\n      , sailfish = /sailfish/i.test(ua)\n      , tizen = /tizen/i.test(ua)\n      , webos = /(web|hpw)os/i.test(ua)\n      , windowsphone = /windows phone/i.test(ua)\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\n      , windows = !windowsphone && /windows/i.test(ua)\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\n      , edgeVersion = getFirstMatch(/edge\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , xbox = /xbox/i.test(ua)\n      , result\n\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/opr\\/|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera'\n        , opera: t\n        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android'\n        , samsungBrowser: t\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast'\n        , coast: t\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser'\n      , yandexbrowser: t\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/ucbrowser/i.test(ua)) {\n      result = {\n          name: 'UC Browser'\n        , ucbrowser: t\n        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon'\n        , maxthon: t\n        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany'\n        , epiphany: t\n        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin'\n        , puffin: t\n        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      }\n    }\n    else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir'\n        , sleipnir: t\n        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon'\n        , kMeleon: t\n        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (windowsphone) {\n      result = {\n        name: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome'\n      , chromeos: t\n      , chromeBook: t\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/chrome.+? edge/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi'\n        , vivaldi: t\n        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (sailfish) {\n      result = {\n        name: 'Sailfish'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n      }\n    }\n    else if (silk) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS'\n        , slimer: t\n        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (webos) {\n      result = {\n        name: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (tizen) {\n      result = {\n        name: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla'\n        , qupzilla: t\n        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      }\n    }\n    else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium'\n        , chromium: t\n        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n        , chrome: t\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n        , version: versionIdentifier\n      }\n    }\n    else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      }\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if(/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot'\n      , googlebot: t\n      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\"\n        result.blink = t\n      } else {\n        result.name = result.name || \"Webkit\"\n        result.webkit = t\n      }\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.windowsphone && !result.msedge && (android || result.silk)) {\n      result.android = t\n    } else if (!result.windowsphone && !result.msedge && iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n    } else if (mac) {\n      result.mac = t\n    } else if (xbox) {\n      result.xbox = t\n    } else if (windows) {\n      result.windows = t\n    } else if (linux) {\n      result.linux = t\n    }\n\n    function getWindowsVersion (s) {\n      switch (s) {\n        case 'NT': return 'NT'\n        case 'XP': return 'XP'\n        case 'NT 5.0': return '2000'\n        case 'NT 5.1': return 'XP'\n        case 'NT 5.2': return '2003'\n        case 'NT 6.0': return 'Vista'\n        case 'NT 6.1': return '7'\n        case 'NT 6.2': return '8'\n        case 'NT 6.3': return '8.1'\n        case 'NT 10.0': return '10'\n        default: return undefined\n      }\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windows) {\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i))\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.mac) {\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n    if (\n         tablet\n      || nexusTablet\n      || iosdevice == 'ipad'\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\n      || result.silk\n    ) {\n      result.tablet = t\n    } else if (\n         mobile\n      || iosdevice == 'iphone'\n      || iosdevice == 'ipod'\n      || android\n      || nexusMobile\n      || result.blackberry\n      || result.webos\n      || result.bada\n    ) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.yandexbrowser && result.version >= 15) ||\n\t\t    (result.vivaldi && result.version >= 1.0) ||\n        (result.chrome && result.version >= 20) ||\n        (result.samsungBrowser && result.version >= 4) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        || (result.chromium && result.version >= 20)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        || (result.chromium && result.version < 20)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  function map(arr, iterator) {\n    var result = [], i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n   *\n   * @param  {Array<String>} versions versions to compare\n   * @return {Number} comparison result\n   */\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      version = version + new Array(delta + 1).join(\".0\");\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    });\n\n    // iterate in reverse order by reversed chunks array\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n      else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      }\n      else {\n        return -1;\n      }\n    }\n  }\n\n  /**\n   * Check if browser is unsupported\n   *\n   * @example\n   *   bowser.isUnsupportedBrowser({\n   *     msie: \"10\",\n   *     firefox: \"23\",\n   *     chrome: \"29\",\n   *     safari: \"5.1\",\n   *     opera: \"16\",\n   *     phantom: \"534\"\n   *   });\n   *\n   * @param  {Object}  minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser;\n\n    // make strictMode param optional with ua param usage\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void(0);\n    }\n\n    if (strictMode === void(0)) {\n      strictMode = false;\n    }\n    if (ua) {\n      _bowser = detect(ua);\n    }\n\n    var version = \"\" + _bowser.version;\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          if (typeof minVersions[browser] !== 'string') {\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n          }\n\n          // browser version and min supported version.\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n\n    return strictMode; // not found\n  }\n\n  /**\n   * Check if browser is supported\n   *\n   * @param  {Object} minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  return bowser\n});\n","/**\n * Module exports.\n */\n\nmodule.exports = jsonp;\n\n/**\n * Callback index.\n */\n\nvar count = 0;\n\n/**\n * Noop function.\n */\n\nfunction noop(){}\n\n/**\n * JSONP handler\n *\n * Options:\n *  - param {String} qs parameter (`callback`)\n *  - prefix {String} qs parameter (`__jp`)\n *  - name {String} qs parameter (`prefix` + incr)\n *  - timeout {Number} how long after a timeout error is emitted (`60000`)\n *\n * @param {String} url\n * @param {Object|Function} optional options / callback\n * @param {Function} optional callback\n */\n\nfunction jsonp(url, opts, fn){\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n  if (!opts) opts = {};\n\n  var prefix = opts.prefix || '__jp';\n\n  // use the callback name that was passed if one was provided.\n  // otherwise generate a unique name by incrementing our counter.\n  var id = opts.name || (prefix + (count++));\n\n  var param = opts.param || 'callback';\n  var timeout = null != opts.timeout ? opts.timeout : 60000;\n  var enc = encodeURIComponent;\n  var target = document.getElementsByTagName('script')[0] || document.head;\n  var script;\n  var timer;\n\n\n  if (timeout) {\n    timer = setTimeout(function(){\n      cleanup();\n      if (fn) fn(new Error('Timeout'));\n    }, timeout);\n  }\n\n  function cleanup(){\n    if (script.parentNode) script.parentNode.removeChild(script);\n    window[id] = noop;\n    if (timer) clearTimeout(timer);\n  }\n\n  function cancel(){\n    if (window[id]) {\n      cleanup();\n    }\n  }\n\n  window[id] = function(data){\n    cleanup();\n    if (fn) fn(null, data);\n  };\n\n  // add qs component\n  url += (~url.indexOf('?') ? '&' : '?') + param + '=' + enc(id);\n  url = url.replace('?&', '?');\n\n  // create script\n  script = document.createElement('script');\n  script.src = url;\n  target.parentNode.insertBefore(script, target);\n\n  return cancel;\n}\n","export var ModelName;\n(function (ModelName) {\n    ModelName[\"Identity\"] = \"identity\";\n    ModelName[\"Properties\"] = \"properties\";\n    ModelName[\"Subscriptions\"] = \"subscriptions\";\n})(ModelName || (ModelName = {}));\nexport var LegacyModelName;\n(function (LegacyModelName) {\n    LegacyModelName[\"PushSubscriptions\"] = \"pushSubscriptions\";\n    LegacyModelName[\"EmailSubscriptions\"] = \"emailSubscriptions\";\n    LegacyModelName[\"SmsSubscriptions\"] = \"smsSubscriptions\";\n})(LegacyModelName || (LegacyModelName = {}));\n//# sourceMappingURL=SupportedModels.js.map","export var Browser;\n(function (Browser) {\n    Browser[\"Safari\"] = \"safari\";\n    Browser[\"Firefox\"] = \"firefox\";\n    Browser[\"Chrome\"] = \"chrome\";\n    Browser[\"Opera\"] = \"opera\";\n    Browser[\"Edge\"] = \"edge\";\n    Browser[\"Other\"] = \"other\";\n})(Browser || (Browser = {}));\n//# sourceMappingURL=Browser.js.map","import bowser from 'bowser';\nimport { Browser } from '../../shared/models/Browser';\nimport Utils from '../../shared/context/Utils';\nimport { bowserCastle } from '../../shared/utils/bowserCastle';\n/**\n * EnvironmentInfoHelper is used to save page (\"browser\") context environment information to\n * the OneSignal object upon initialization\n */\nexport class EnvironmentInfoHelper {\n    static getEnvironmentInfo() {\n        return {\n            browserType: this.getBrowser(),\n            browserVersion: this.getBrowserVersion(),\n            isBrowserAndSupportsServiceWorkers: this.supportsServiceWorkers(),\n            requiresUserInteraction: this.requiresUserInteraction(),\n            osVersion: this.getOsVersion(),\n        };\n    }\n    static getBrowser() {\n        if (bowserCastle().name === 'chrome') {\n            return Browser.Chrome;\n        }\n        if (bowserCastle().name === 'msedge') {\n            return Browser.Edge;\n        }\n        if (bowserCastle().name === 'opera') {\n            return Browser.Opera;\n        }\n        if (bowserCastle().name === 'firefox') {\n            return Browser.Firefox;\n        }\n        // use existing safari detection to be consistent\n        if (this.isMacOSSafari()) {\n            return Browser.Safari;\n        }\n        return Browser.Other;\n    }\n    // NOTE: Returns false in a ServiceWorker context\n    static isMacOSSafari() {\n        return typeof window.safari !== 'undefined';\n    }\n    static getBrowserVersion() {\n        return Utils.parseVersionString(bowserCastle().version);\n    }\n    static supportsServiceWorkers() {\n        return window.navigator && 'serviceWorker' in window.navigator;\n    }\n    static requiresUserInteraction() {\n        // Firefox 72+ requires user-interaction\n        if (this.getBrowser() === 'firefox' && this.getBrowserVersion() >= 72) {\n            return true;\n        }\n        // Safari 12.1+ requires user-interaction\n        if (this.getBrowser() === 'safari' && this.getBrowserVersion() >= 12.1) {\n            return true;\n        }\n        return false;\n    }\n    static getOsVersion() {\n        return bowser.osversion;\n    }\n}\n//# sourceMappingURL=EnvironmentInfoHelper.js.map","export var SubscriptionType;\n(function (SubscriptionType) {\n    SubscriptionType[\"ChromePush\"] = \"ChromePush\";\n    SubscriptionType[\"SafariPush\"] = \"SafariPush\";\n    SubscriptionType[\"SafariLegacyPush\"] = \"SafariLegacyPush\";\n    SubscriptionType[\"FirefoxPush\"] = \"FirefoxPush\";\n    SubscriptionType[\"Email\"] = \"Email\";\n    SubscriptionType[\"SMS\"] = \"SMS\";\n    // There are other OneSignal types, but only including ones used here.\n})(SubscriptionType || (SubscriptionType = {}));\nexport var SubscriptionChannel;\n(function (SubscriptionChannel) {\n    SubscriptionChannel[\"Email\"] = \"Email\";\n    SubscriptionChannel[\"SMS\"] = \"SMS\";\n    SubscriptionChannel[\"Push\"] = \"Push\";\n})(SubscriptionChannel || (SubscriptionChannel = {}));\n//# sourceMappingURL=SubscriptionModels.js.map","export var SubscriptionStateKind;\n(function (SubscriptionStateKind) {\n    // Notification permission is not granted at the browser level.\n    // Used if the native notification permission is 'default' or 'declined'\n    SubscriptionStateKind[SubscriptionStateKind[\"NoNativePermission\"] = 0] = \"NoNativePermission\";\n    // Everything is available for the subscription to be enabled;\n    // not opted out, has token, and notification permission is granted.\n    SubscriptionStateKind[SubscriptionStateKind[\"Subscribed\"] = 1] = \"Subscribed\";\n    // OneSignal.User.PushSubscription.optOut() called or end-user opted out from SDK bell widget\n    // UserOptedOut takes priority over NoNativePermission\n    SubscriptionStateKind[SubscriptionStateKind[\"UserOptedOut\"] = -2] = \"UserOptedOut\";\n    SubscriptionStateKind[SubscriptionStateKind[\"NotSubscribed\"] = -10] = \"NotSubscribed\";\n    SubscriptionStateKind[SubscriptionStateKind[\"TemporaryWebRecord\"] = -20] = \"TemporaryWebRecord\";\n    SubscriptionStateKind[SubscriptionStateKind[\"PermissionRevoked\"] = -21] = \"PermissionRevoked\";\n    SubscriptionStateKind[SubscriptionStateKind[\"PushSubscriptionRevoked\"] = -22] = \"PushSubscriptionRevoked\";\n    SubscriptionStateKind[SubscriptionStateKind[\"ServiceWorkerStatus403\"] = -23] = \"ServiceWorkerStatus403\";\n    SubscriptionStateKind[SubscriptionStateKind[\"ServiceWorkerStatus404\"] = -24] = \"ServiceWorkerStatus404\";\n})(SubscriptionStateKind || (SubscriptionStateKind = {}));\n//# sourceMappingURL=SubscriptionStateKind.js.map","export var DeliveryPlatformKind;\n(function (DeliveryPlatformKind) {\n    DeliveryPlatformKind[DeliveryPlatformKind[\"ChromeLike\"] = 5] = \"ChromeLike\";\n    DeliveryPlatformKind[DeliveryPlatformKind[\"SafariLegacy\"] = 7] = \"SafariLegacy\";\n    DeliveryPlatformKind[DeliveryPlatformKind[\"Firefox\"] = 8] = \"Firefox\";\n    DeliveryPlatformKind[DeliveryPlatformKind[\"Email\"] = 11] = \"Email\";\n    DeliveryPlatformKind[DeliveryPlatformKind[\"Edge\"] = 12] = \"Edge\";\n    DeliveryPlatformKind[DeliveryPlatformKind[\"SMS\"] = 14] = \"SMS\";\n    DeliveryPlatformKind[DeliveryPlatformKind[\"SafariVapid\"] = 17] = \"SafariVapid\";\n})(DeliveryPlatformKind || (DeliveryPlatformKind = {}));\n//# sourceMappingURL=DeliveryPlatformKind.js.map","import { SubscriptionType, } from '../../core/models/SubscriptionModels';\nimport { EnvironmentInfoHelper } from '../helpers/EnvironmentInfoHelper';\nimport OneSignalUtils from '../../shared/utils/OneSignalUtils';\nimport { SubscriptionStateKind } from '../../shared/models/SubscriptionStateKind';\nimport Environment from '../../shared/helpers/Environment';\nimport { DeliveryPlatformKind } from '../../shared/models/DeliveryPlatformKind';\nexport default class FuturePushSubscriptionRecord {\n    constructor(rawPushSubscription) {\n        const environment = EnvironmentInfoHelper.getEnvironmentInfo();\n        this.token = this._getToken(rawPushSubscription);\n        this.type = FuturePushSubscriptionRecord.getSubscriptionType();\n        // TO DO: enabled\n        // this.enabled = true;\n        this.notificationTypes = SubscriptionStateKind.Subscribed;\n        // TO DO: fix VERSION type discrepancies throughout codebase\n        this.sdk = String(__VERSION__);\n        this.deviceModel = navigator.platform;\n        this.deviceOs = isNaN(environment.browserVersion)\n            ? -1\n            : environment.browserVersion;\n        this.webAuth = rawPushSubscription.w3cAuth;\n        this.webp256 = rawPushSubscription.w3cP256dh;\n    }\n    _getToken(subscription) {\n        if (subscription.w3cEndpoint) {\n            return subscription.w3cEndpoint.toString();\n        }\n        return subscription.safariDeviceToken;\n    }\n    serialize() {\n        return {\n            type: this.type,\n            token: this.token,\n            enabled: this.enabled,\n            notification_types: this.notificationTypes,\n            sdk: this.sdk,\n            device_model: this.deviceModel,\n            device_os: this.deviceOs,\n            web_auth: this.webAuth,\n            web_p256: this.webp256,\n        };\n    }\n    /* S T A T I C */\n    /**\n     * Get the User Model Subscription type based on browser detection.\n     */\n    static getSubscriptionType() {\n        const browser = OneSignalUtils.redetectBrowserUserAgent();\n        if (browser.firefox) {\n            return SubscriptionType.FirefoxPush;\n        }\n        if (Environment.useSafariVapidPush()) {\n            return SubscriptionType.SafariPush;\n        }\n        if (Environment.useSafariLegacyPush()) {\n            return SubscriptionType.SafariLegacyPush;\n        }\n        // Other browsers, like Edge, are Chromium based so we consider them \"Chrome\".\n        return SubscriptionType.ChromePush;\n    }\n    /**\n     * Get the legacy player.device_type\n     * NOTE: Use getSubscriptionType() instead when possible.\n     */\n    static getDeviceType() {\n        switch (this.getSubscriptionType()) {\n            case SubscriptionType.FirefoxPush:\n                return DeliveryPlatformKind.Firefox;\n            case SubscriptionType.SafariLegacyPush:\n                return DeliveryPlatformKind.SafariLegacy;\n            case SubscriptionType.SafariPush:\n                return DeliveryPlatformKind.SafariVapid;\n        }\n        return DeliveryPlatformKind.ChromeLike;\n    }\n}\n//# sourceMappingURL=FuturePushSubscriptionRecord.js.map","export default class AliasPair {\n    constructor(label, id) {\n        this.label = label;\n        this.id = id;\n    }\n}\nAliasPair.ONESIGNAL_ID = 'onesignal_id';\nAliasPair.EXTERNAL_ID = 'external_id';\n//# sourceMappingURL=AliasPair.js.map","import OneSignalError from './OneSignalError';\nexport var OneSignalApiErrorKind;\n(function (OneSignalApiErrorKind) {\n    OneSignalApiErrorKind[OneSignalApiErrorKind[\"MissingAppId\"] = 0] = \"MissingAppId\";\n    OneSignalApiErrorKind[OneSignalApiErrorKind[\"RetryLimitReached\"] = 1] = \"RetryLimitReached\";\n})(OneSignalApiErrorKind || (OneSignalApiErrorKind = {}));\nexport class OneSignalApiError extends OneSignalError {\n    constructor(reason) {\n        let errorMessage;\n        switch (reason) {\n            case OneSignalApiErrorKind.MissingAppId:\n                errorMessage = 'The API call is missing an app ID.';\n                break;\n            case OneSignalApiErrorKind.RetryLimitReached:\n                errorMessage = 'The API call has reached the retry limit.';\n                break;\n        }\n        super(errorMessage);\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n         * #extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, OneSignalApiError.prototype);\n    }\n}\n//# sourceMappingURL=OneSignalApiError.js.map","// timeout with option to await on it\nexport function awaitableTimeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n//# sourceMappingURL=AwaitableTimeout.js.map","export const RETRY_BACKOFF = {\n    5: 10000,\n    4: 20000,\n    3: 30000,\n    2: 30000,\n    1: 30000,\n};\n//# sourceMappingURL=RetryBackoff.js.map","import { OneSignalApiError, OneSignalApiErrorKind, } from '../errors/OneSignalApiError';\nimport OneSignalError from '../errors/OneSignalError';\nimport Environment from '../helpers/Environment';\nimport Log from '../libraries/Log';\nimport SdkEnvironment from '../managers/SdkEnvironment';\nimport { awaitableTimeout } from '../utils/AwaitableTimeout';\nimport { isValidUuid } from '../utils/utils';\nimport { RETRY_BACKOFF } from './RetryBackoff';\nexport class OneSignalApiBase {\n    static get(action, data, headers) {\n        return OneSignalApiBase.call('GET', action, data, headers);\n    }\n    static post(action, data, headers) {\n        return OneSignalApiBase.call('POST', action, data, headers);\n    }\n    static put(action, data, headers) {\n        return OneSignalApiBase.call('PUT', action, data, headers);\n    }\n    static delete(action, data, headers) {\n        return OneSignalApiBase.call('DELETE', action, data, headers);\n    }\n    static patch(action, data, headers) {\n        return OneSignalApiBase.call('PATCH', action, data, headers);\n    }\n    static call(method, action, data, headers) {\n        if (!this.requestHasAppId(action, data)) {\n            return Promise.reject(new OneSignalApiError(OneSignalApiErrorKind.MissingAppId));\n        }\n        const callHeaders = new Headers();\n        callHeaders.append('Origin', SdkEnvironment.getOrigin());\n        callHeaders.append('SDK-Version', `onesignal/web/${Environment.version()}`);\n        callHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n        if (headers) {\n            for (const key of Object.keys(headers)) {\n                callHeaders.append(key, headers[key]);\n            }\n        }\n        const contents = {\n            method: method || 'NO_METHOD_SPECIFIED',\n            headers: callHeaders,\n            cache: 'no-cache',\n        };\n        if (data)\n            contents.body = JSON.stringify(data);\n        const url = `${SdkEnvironment.getOneSignalApiUrl(undefined, action).toString()}/${action}`;\n        return OneSignalApiBase.executeFetch(url, contents);\n    }\n    static async executeFetch(url, contents, retry = 5) {\n        if (retry === 0) {\n            return Promise.reject(new OneSignalApiError(OneSignalApiErrorKind.RetryLimitReached));\n        }\n        try {\n            const response = await fetch(url, contents);\n            const { status } = response;\n            const json = await response.json();\n            return {\n                result: json,\n                status,\n            };\n        }\n        catch (e) {\n            if (e.name === 'TypeError') {\n                await awaitableTimeout(RETRY_BACKOFF[retry]);\n                Log.error(`OneSignal: Network timed out while calling ${url}. Retrying...`);\n                return OneSignalApiBase.executeFetch(url, contents, retry - 1);\n            }\n            throw new OneSignalError(`OneSignalApiBase: failed to execute HTTP call: ${e}`);\n        }\n    }\n    // OneSignal's backend requires that all request have a\n    // have a app_id in the UUID format in the request\n    static requestHasAppId(url, body) {\n        if (url.startsWith('apps/')) {\n            const parts = url.split('/');\n            return isValidUuid(parts[1]);\n        }\n        if (body && typeof body['app_id'] === 'string') {\n            return isValidUuid(body['app_id']);\n        }\n        return false;\n    }\n}\nexport default OneSignalApiBase;\n//# sourceMappingURL=OneSignalApiBase.js.map","/**\n * Used for VAPID, converts the VAPID public key into a byte format the browser accepts.\n */\nexport function base64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    const rawData = atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n}\n/**\n * Used for VAPID, converts a browser-provided ArrayBuffer of the applicationServerKey back to its string form.\n */\nexport function arrayBufferToBase64(arrayBuffer) {\n    let base64 = '';\n    const encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    const bytes = new Uint8Array(arrayBuffer);\n    const byteLength = bytes.byteLength;\n    const byteRemainder = byteLength % 3;\n    const mainLength = byteLength - byteRemainder;\n    let a, b, c, d;\n    let chunk;\n    // Main loop deals with bytes in chunks of 3\n    for (let i = 0; i < mainLength; i = i + 3) {\n        // Combine the three bytes into a single integer\n        chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        // Use bitmasks to extract 6-bit segments from the triplet\n        a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n        b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n        c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n        d = chunk & 63; // 63       = 2^6 - 1\n        // Convert the raw binary segments to the appropriate ASCII encoding\n        base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n    }\n    // Deal with the remaining bytes and padding\n    if (byteRemainder == 1) {\n        chunk = bytes[mainLength];\n        a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n        // Set the 4 least significant bits to zero\n        b = (chunk & 3) << 4; // 3   = 2^2 - 1\n        base64 += encodings[a] + encodings[b] + '==';\n    }\n    else if (byteRemainder == 2) {\n        chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\n        a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n        b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n        // Set the 2 least significant bits to zero\n        c = (chunk & 15) << 2; // 15    = 2^4 - 1\n        base64 += encodings[a] + encodings[b] + encodings[c] + '=';\n    }\n    return base64;\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent#encoding_for_rfc3986\nexport function encodeRFC3986URIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n}\n//# sourceMappingURL=Encoding.js.map","import OneSignalError from './OneSignalError';\nexport var SdkInitErrorKind;\n(function (SdkInitErrorKind) {\n    SdkInitErrorKind[SdkInitErrorKind[\"InvalidAppId\"] = 0] = \"InvalidAppId\";\n    SdkInitErrorKind[SdkInitErrorKind[\"AppNotConfiguredForWebPush\"] = 1] = \"AppNotConfiguredForWebPush\";\n    SdkInitErrorKind[SdkInitErrorKind[\"WrongSiteUrl\"] = 2] = \"WrongSiteUrl\";\n    SdkInitErrorKind[SdkInitErrorKind[\"MultipleInitialization\"] = 3] = \"MultipleInitialization\";\n    SdkInitErrorKind[SdkInitErrorKind[\"MissingSafariWebId\"] = 4] = \"MissingSafariWebId\";\n    SdkInitErrorKind[SdkInitErrorKind[\"Unknown\"] = 5] = \"Unknown\";\n})(SdkInitErrorKind || (SdkInitErrorKind = {}));\nexport class SdkInitError extends OneSignalError {\n    constructor(reason, extra) {\n        let errorMessage;\n        switch (reason) {\n            case SdkInitErrorKind.InvalidAppId:\n                errorMessage =\n                    'OneSignal: This app ID does not match any existing app. Double check your app ID.';\n                break;\n            case SdkInitErrorKind.AppNotConfiguredForWebPush:\n                errorMessage =\n                    `OneSignal: This app ID does not have any web platforms enabled. Double check your app` +\n                        ` ID, or see step 1 on our setup guide (https://tinyurl.com/2x5jzk83).`;\n                break;\n            case SdkInitErrorKind.WrongSiteUrl:\n                if (extra && extra.siteUrl) {\n                    errorMessage =\n                        `OneSignal: This web push config can only be used on ${new URL(extra.siteUrl).origin}.` + ` Your current origin is ${location.origin}.`;\n                }\n                else {\n                    errorMessage =\n                        'OneSignal: This web push config can not be used on the current site.';\n                }\n                break;\n            case SdkInitErrorKind.MultipleInitialization:\n                errorMessage =\n                    `OneSignal: The OneSignal web SDK can only be initialized once. Extra initializations ` +\n                        `are ignored. Please remove calls initializing the SDK more than once.`;\n                break;\n            case SdkInitErrorKind.MissingSafariWebId:\n                errorMessage =\n                    `OneSignal: Safari browser support on Mac OS X requires the Safari web platform` +\n                        ` to be enabled. Please see the Safari Support steps in our web setup guide.`;\n                break;\n            case SdkInitErrorKind.Unknown:\n                errorMessage = 'OneSignal: An unknown initialization error occurred.';\n                break;\n        }\n        super(errorMessage);\n        this.reason = SdkInitErrorKind[reason];\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n         * #extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, SdkInitError.prototype);\n    }\n}\n//# sourceMappingURL=SdkInitError.js.map","export var OutcomeAttributionType;\n(function (OutcomeAttributionType) {\n    OutcomeAttributionType[OutcomeAttributionType[\"Direct\"] = 1] = \"Direct\";\n    OutcomeAttributionType[OutcomeAttributionType[\"Indirect\"] = 2] = \"Indirect\";\n    OutcomeAttributionType[OutcomeAttributionType[\"Unattributed\"] = 3] = \"Unattributed\";\n    OutcomeAttributionType[OutcomeAttributionType[\"NotSupported\"] = 4] = \"NotSupported\";\n})(OutcomeAttributionType || (OutcomeAttributionType = {}));\n//# sourceMappingURL=Outcomes.js.map","import OneSignalApiBase from '../../shared/api/OneSignalApiBase';\nimport { encodeRFC3986URIComponent } from '../../shared/utils/Encoding';\nimport OneSignalUtils from '../../shared/utils/OneSignalUtils';\nimport { SdkInitError, SdkInitErrorKind, } from '../../shared/errors/SdkInitError';\nexport class RequestService {\n    /* U S E R   O P E R A T I O N S */\n    /**\n     * Creates a new user\n     * @param requestMetadata - { appId }\n     * @param requestBody - The user's properties, identity, and subscriptions\n     */\n    static async createUser(requestMetadata, requestBody) {\n        const { appId, subscriptionId } = requestMetadata;\n        const subscriptionHeader = subscriptionId\n            ? { 'OneSignal-Subscription-Id': subscriptionId }\n            : undefined;\n        let headers = {};\n        if (subscriptionHeader) {\n            headers = Object.assign(Object.assign({}, headers), subscriptionHeader);\n        }\n        if (requestMetadata.jwtHeader) {\n            headers = Object.assign(Object.assign({}, headers), requestMetadata.jwtHeader);\n        }\n        requestBody['refresh_device_metadata'] = true;\n        return OneSignalApiBase.post(`apps/${appId}/users`, requestBody, headers);\n    }\n    /**\n     * Returns the user's properties, aliases, and subscriptions\n     * @param requestMetadata - { appId }\n     * @param alias - The user's alias\n     * @returns - A promise that resolves with the user's properties, identity, and subscriptions\n     */\n    static async getUser(requestMetadata, alias) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.get(`apps/${appId}/users/by/${alias.label}/${alias.id}`, requestMetadata.jwtHeader);\n    }\n    /**\n     * Updates an existing user's properties\n     *  - Aliases and subscriptions are managed via other endpoints\n     * @param requestMetadata - { appId }\n     * @param alias - alias label & id\n     * @param payload - update user payload\n     * @returns no body\n     */\n    static async updateUser(requestMetadata, alias, payload) {\n        const { appId, subscriptionId } = requestMetadata;\n        if (!OneSignalUtils.isValidUuid(appId)) {\n            throw new SdkInitError(SdkInitErrorKind.InvalidAppId);\n        }\n        const subscriptionHeader = subscriptionId\n            ? { 'OneSignal-Subscription-Id': subscriptionId }\n            : undefined;\n        let headers = {};\n        if (subscriptionHeader) {\n            headers = Object.assign(Object.assign({}, headers), subscriptionHeader);\n        }\n        if (requestMetadata.jwtHeader) {\n            headers = Object.assign(Object.assign({}, headers), requestMetadata.jwtHeader);\n        }\n        const sanitizedAlias = {\n            label: encodeRFC3986URIComponent(alias.label),\n            id: encodeRFC3986URIComponent(alias.id),\n        };\n        return OneSignalApiBase.patch(`apps/${appId}/users/by/${sanitizedAlias.label}/${sanitizedAlias.id}`, payload, headers);\n    }\n    /**\n     * Removes the user identified by the given alias pair, and all subscriptions and aliases\n     * @param requestMetadata - { appId }\n     * @param alias - alias label & id\n     */\n    static async deleteUser(requestMetadata, alias) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.delete(`apps/${appId}/users/by/${alias.label}/${alias.id}`, requestMetadata.jwtHeader);\n    }\n    /* I D E N T I T Y   O P E R A T I O N S */\n    /**\n     * Upserts one or more aliases for the user identified by the given alias pair\n     * @param requestMetadata - { appId }\n     * @param alias - alias label & id\n     * @param identity - identity label & id\n     */\n    static async addAlias(requestMetadata, alias, identity) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.patch(`apps/${appId}/users/by/${alias.label}/${alias.id}/identity`, { identity }, requestMetadata.jwtHeader);\n    }\n    /**\n     * Lists all aliases for the user identified by the given alias pair\n     * @param requestMetadata - { appId }\n     * @param alias - alias label & id\n     */\n    static async getUserIdentity(requestMetadata, alias) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.get(`apps/${appId}/users/by/${alias.label}/${alias.id}/identity`, requestMetadata.jwtHeader);\n    }\n    /**\n     * Deletes an alias for the user identified by the given alias pair\n     * @param requestMetadata - { appId }\n     * @param alias - alias label & id\n     * @param labelToRemove - label of identity to remove\n     */\n    static async deleteAlias(requestMetadata, alias, labelToRemove) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.delete(`apps/${appId}/users/by/${alias.label}/${alias.id}/identity/${labelToRemove}`, requestMetadata.jwtHeader);\n    }\n    /* S U B S C R I P T I O N   O P E R A T I O N S */\n    /**\n     * Creates a new subscription for the user identified by the given alias pair\n     * Useful to add email or SMS subscriptions to a user\n     * @param requestMetadata - { appId }\n     * @param alias - alias label & id\n     * @param subscription - subscription label & id\n     */\n    static async createSubscription(requestMetadata, alias, subscription) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.post(`apps/${appId}/users/by/${alias.label}/${alias.id}/subscriptions`, subscription, requestMetadata.jwtHeader);\n    }\n    /**\n     * Updates an existing Subscription’s properties.\n     * @param requestMetadata - { appId }\n     * @param subscriptionId - subscription id\n     * @param subscription - subscription object\n     */\n    static async updateSubscription(requestMetadata, subscriptionId, subscription) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.patch(`apps/${appId}/subscriptions/${subscriptionId}`, { subscription });\n    }\n    /**\n     * Deletes the subscription.\n     * Creates an \"orphan\" user record if the user has no other subscriptions.\n     * @param requestMetadata - { appId }\n     * @param subscriptionId - subscription id\n     */\n    static async deleteSubscription(requestMetadata, subscriptionId) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.delete(`apps/${appId}/subscriptions/${subscriptionId}`);\n    }\n    /**\n     * Lists all aliases for the user identified by the given subscription id\n     * @param requestMetadata - { appId }\n     * @param subscriptionId - subscription id\n     */\n    static async fetchAliasesForSubscription(requestMetadata, subscriptionId) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.get(`apps/${appId}/subscriptions/${subscriptionId}/identity`);\n    }\n    /**\n     * Upserts one or more aliases for the user identified by the given subscription id\n     * @param requestMetadata - { appId }\n     * @param subscriptionId - subscription id\n     * @param identity - identity label & id\n     */\n    static async identifyUserForSubscription(requestMetadata, subscriptionId, identity) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.patch(`apps/${appId}/users/by/subscriptions/${subscriptionId}/identity`, { identity }, requestMetadata.jwtHeader);\n    }\n    /**\n     * Transfers this Subscription to the User identified by the identity in the payload.\n     * @param requestMetadata - { appId }\n     * @param subscriptionId - subscription id\n     * @param identity - identity label & id\n     * @param retainPreviousOwner - if true *AND* subscription is last subscription for the previous\n     * user, an orphan user will be created. Otherwise, the previous user will be deleted. Useful when going\n     * from a guest (anonymous) user to an identified user. If the previous owner had other subscriptions,\n     * nothing will happen to the previous user.\n     */\n    static async transferSubscription(requestMetadata, subscriptionId, identity, retainPreviousOwner) {\n        const { appId } = requestMetadata;\n        return OneSignalApiBase.patch(`apps/${appId}/subscriptions/${subscriptionId}/owner`, {\n            identity: Object.assign({}, identity),\n            retain_previous_owner: retainPreviousOwner,\n        }, requestMetadata.jwtHeader);\n    }\n}\n//# sourceMappingURL=RequestService.js.map","import Log from '../libraries/Log';\nimport OneSignalApiBase from './OneSignalApiBase';\nexport default class OneSignalApiShared {\n    static async sendOutcome(data) {\n        Log.info('Outcome payload:', data);\n        try {\n            await OneSignalApiBase.post('outcomes/measure', data);\n        }\n        catch (e) {\n            Log.error('sendOutcome', e);\n        }\n    }\n}\n//# sourceMappingURL=OneSignalApiShared.js.map","import FuturePushSubscriptionRecord from '../../page/userModel/FuturePushSubscriptionRecord';\nimport AliasPair from '../../core/requestService/AliasPair';\nimport { RequestService } from '../../core/requestService/RequestService';\nimport Utils from '../context/Utils';\nimport Log from '../libraries/Log';\nimport { OutcomeAttributionType } from '../models/Outcomes';\nimport { SubscriptionStateKind } from '../models/SubscriptionStateKind';\nimport { OneSignalApiBase } from './OneSignalApiBase';\nimport OneSignalApiShared from './OneSignalApiShared';\nexport class OneSignalApiSW {\n    static async downloadServerAppConfig(appId) {\n        Utils.enforceAppId(appId);\n        const response = await OneSignalApiBase.get(`sync/${appId}/web`, null);\n        return response === null || response === void 0 ? void 0 : response.result;\n    }\n    /**\n     * Given a GCM or Firefox subscription endpoint or Safari device token, returns the user ID from OneSignal's server.\n     * Used if the user clears his or her IndexedDB database and we need the user ID again.\n     */\n    static getUserIdFromSubscriptionIdentifier(appId, deviceType, identifier) {\n        // Calling POST /players with an existing identifier returns us that player ID\n        Utils.enforceAppId(appId);\n        return OneSignalApiBase.post('players', {\n            app_id: appId,\n            device_type: deviceType,\n            identifier: identifier,\n            notification_types: SubscriptionStateKind.TemporaryWebRecord,\n        })\n            .then((response) => {\n            if (response && response.id) {\n                return response.id;\n            }\n            else {\n                return null;\n            }\n        })\n            .catch((e) => {\n            Log.debug('Error getting user ID from subscription identifier:', e);\n            return null;\n        });\n    }\n    /**\n     *  Main on_session call\n     * @returns\n     */\n    static async updateUserSession(appId, onesignalId, subscriptionId) {\n        const aliasPair = new AliasPair(AliasPair.ONESIGNAL_ID, onesignalId);\n        // TO DO: in future, we should aggregate session count in case network call fails\n        const updateUserPayload = {\n            refresh_device_metadata: true,\n            deltas: {\n                session_count: 1,\n            },\n        };\n        Utils.enforceAppId(appId);\n        Utils.enforceAlias(aliasPair);\n        try {\n            await RequestService.updateUser({ appId, subscriptionId }, aliasPair, updateUserPayload);\n        }\n        catch (e) {\n            Log.debug('Error updating user session:', e);\n        }\n    }\n    static async sendSessionDuration(appId, onesignalId, subscriptionId, sessionDuration, attribution) {\n        const updateUserPayload = {\n            refresh_device_metadata: true,\n            deltas: {\n                session_time: sessionDuration,\n            },\n        };\n        const aliasPair = new AliasPair(AliasPair.ONESIGNAL_ID, onesignalId);\n        const outcomePayload = {\n            id: 'os__session_duration',\n            app_id: appId,\n            session_time: sessionDuration,\n            notification_ids: attribution.notificationIds,\n            subscription: {\n                id: subscriptionId,\n                type: FuturePushSubscriptionRecord.getSubscriptionType(),\n            },\n            onesignal_id: onesignalId,\n        };\n        outcomePayload.direct =\n            attribution.type === OutcomeAttributionType.Direct ? true : false;\n        try {\n            await RequestService.updateUser({ appId, subscriptionId }, aliasPair, updateUserPayload);\n            if (outcomePayload.notification_ids &&\n                outcomePayload.notification_ids.length > 0) {\n                await OneSignalApiShared.sendOutcome(outcomePayload);\n            }\n        }\n        catch (e) {\n            Log.debug('Error sending session duration:', e);\n        }\n    }\n}\nexport default OneSignalApiSW;\n//# sourceMappingURL=OneSignalApiSW.js.map","import JSONP from 'jsonp';\nimport SdkEnvironment from '../managers/SdkEnvironment';\nimport { WindowEnvironmentKind } from '../models/WindowEnvironmentKind';\nimport OneSignalApiSW from './OneSignalApiSW';\nexport default class OneSignalApi {\n    static jsonpLib(url, fn) {\n        JSONP(url, null, fn);\n    }\n    static async downloadServerAppConfig(appId) {\n        if (SdkEnvironment.getWindowEnv() === WindowEnvironmentKind.Host) {\n            return await new Promise((resolve, reject) => {\n                // Due to CloudFlare's algorithms, the .js extension is required for proper caching. Don't remove it!\n                OneSignalApi.jsonpLib(`${SdkEnvironment.getOneSignalApiUrl().toString()}/sync/${appId}/web`, (err, data) => {\n                    if (err)\n                        reject(err);\n                    else {\n                        if (data.success)\n                            resolve(data);\n                        // For JSONP, we return a 200 even for errors, there's a success: false param\n                        else\n                            reject(data);\n                    }\n                });\n            });\n        }\n        else {\n            return await OneSignalApiSW.downloadServerAppConfig(appId);\n        }\n    }\n}\n//# sourceMappingURL=OneSignalApi.js.map","export var DelayedPromptType;\n(function (DelayedPromptType) {\n    DelayedPromptType[\"Native\"] = \"native\";\n    DelayedPromptType[\"Push\"] = \"push\";\n    DelayedPromptType[\"Category\"] = \"category\";\n    DelayedPromptType[\"Sms\"] = \"sms\";\n    DelayedPromptType[\"Email\"] = \"email\";\n    DelayedPromptType[\"SmsAndEmail\"] = \"smsAndEmail\";\n})(DelayedPromptType || (DelayedPromptType = {}));\n//# sourceMappingURL=Prompts.js.map","import { DelayedPromptType } from '../models/Prompts';\nexport const SERVER_CONFIG_DEFAULTS_SESSION = {\n    reportingThreshold: 30,\n    enableOnSessionForUnsubcribed: false,\n    enableOnFocus: true,\n};\nexport const SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS = {\n    pageViews: 1,\n    timeDelay: 0,\n};\nexport const SERVER_CONFIG_DEFAULTS_SLIDEDOWN = {\n    actionMessage: \"We'd like to show you notifications for the latest news and updates.\",\n    acceptButton: 'Allow',\n    cancelButton: 'Cancel',\n    errorButton: 'Try Again',\n    categoryDefaults: {\n        updateMessage: 'Update your push notification subscription preferences.',\n        positiveUpdateButton: 'Save Preferences',\n        negativeUpdateButton: 'Cancel',\n    },\n    savingText: 'Saving...',\n    confirmMessage: 'Thank You!',\n};\nexport const CONFIG_DEFAULTS_SLIDEDOWN_OPTIONS = {\n    type: DelayedPromptType.Push,\n    text: {\n        actionMessage: SERVER_CONFIG_DEFAULTS_SLIDEDOWN.actionMessage,\n        acceptButton: SERVER_CONFIG_DEFAULTS_SLIDEDOWN.acceptButton,\n        cancelButton: SERVER_CONFIG_DEFAULTS_SLIDEDOWN.cancelButton,\n    },\n    autoPrompt: false,\n    delay: SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS,\n};\n//# sourceMappingURL=constants.js.map","import { deepCopy } from './utils';\nexport default class TagUtils {\n    static convertTagsApiToBooleans(tags) {\n        const convertedTags = {};\n        Object.keys(tags).forEach((key) => {\n            convertedTags[key] = tags[key] === '1' ? true : false;\n        });\n        return convertedTags;\n    }\n    static convertTagsBooleansToApi(tags) {\n        const convertedTags = {};\n        Object.keys(tags).forEach((key) => {\n            convertedTags[key] = tags[key] === true ? '1' : '0';\n        });\n        return convertedTags;\n    }\n    /**\n     * Used in determining what Tag/Category preferences changed in order\n     * to only update what is necessary\n     * @param  {TagsObject} localTags - tags from taggingContainer with values of type \"number\"\n     * @param  {TagsObject} remoteTags - remote player tags with values of type \"number\"\n     * @returns array of keys of corresponding different values (finds difference)\n     */\n    static getObjectDifference(localTags, remoteTags) {\n        const finalTags = {};\n        // Going off local tags since it's our categories. Trying to find only changed tags and returning those\n        // as a final object.\n        Object.keys(localTags).forEach((key) => {\n            // only if user's tag value did not change, skip it\n            if (remoteTags[key] === localTags[key]) {\n                return;\n            }\n            finalTags[key] = localTags[key];\n        });\n        return finalTags;\n    }\n    static markAllTagsAsSpecified(categoryArray, checked) {\n        categoryArray.forEach((category) => {\n            category.checked = checked;\n        });\n    }\n    static isTagObjectEmpty(tags) {\n        return Object.keys(tags).length === 0;\n    }\n    /**\n     * Uses configured categories and remote player tags to calculate which boxes should be checked\n     * @param  {TagCategory[]} categories\n     * @param  {TagsObjectWithBoolean} existingPlayerTags?\n     */\n    static getCheckedTagCategories(categories, existingPlayerTags) {\n        if (!existingPlayerTags) {\n            return categories;\n        }\n        const isExistingPlayerTagsEmpty = TagUtils.isTagObjectEmpty(existingPlayerTags);\n        if (isExistingPlayerTagsEmpty) {\n            const categoriesCopy = deepCopy(categories);\n            TagUtils.markAllTagsAsSpecified(categoriesCopy, true);\n            return categoriesCopy;\n        }\n        const categoriesCopy = deepCopy(categories);\n        return categoriesCopy.map((category) => {\n            const existingTagValue = existingPlayerTags[category.tag];\n            category.checked = TagUtils.getCheckedStatusForTagValue(existingTagValue);\n            return category;\n        });\n    }\n    static getCheckedStatusForTagValue(tagValue) {\n        // If user does not have tag assigned to them, consider it selected\n        if (tagValue === undefined) {\n            return true;\n        }\n        return tagValue;\n    }\n    static limitCategoriesToMaxCount(tagCategories, max) {\n        let tagCategoriesCopy = deepCopy(tagCategories);\n        tagCategoriesCopy = tagCategories.slice(0, max);\n        return tagCategoriesCopy;\n    }\n}\n//# sourceMappingURL=TagUtils.js.map","import { DelayedPromptType } from '../models/Prompts';\nexport default class PromptsHelper {\n    static isCategorySlidedownConfigured(prompts) {\n        if (!prompts)\n            return false;\n        const options = PromptsHelper.getFirstSlidedownPromptOptionsWithType(prompts, DelayedPromptType.Category);\n        if (!!options) {\n            return !!options.categories && options.categories.length > 0;\n        }\n        return false;\n    }\n    /**\n     * Is Category Slidedown Configured (version 1 config schema)\n     * @param  {SlidedownOptionsVersion1} options\n     * @returns boolean\n     */\n    static isCategorySlidedownConfiguredVersion1(options) {\n        var _a, _b;\n        return (((_b = (_a = options === null || options === void 0 ? void 0 : options.categories) === null || _a === void 0 ? void 0 : _a.tags) === null || _b === void 0 ? void 0 : _b.length) || 0) > 0;\n    }\n    static getFirstSlidedownPromptOptionsWithType(prompts, type) {\n        return prompts\n            ? prompts.filter((options) => options.type === type)[0]\n            : undefined;\n    }\n    static isSlidedownAutoPromptConfigured(prompts) {\n        if (!prompts) {\n            return false;\n        }\n        for (let i = 0; i < prompts.length; i++) {\n            if (prompts[i].autoPrompt)\n                return true;\n        }\n        return false;\n    }\n    static isSlidedownPushDependent(slidedownType) {\n        return (slidedownType === DelayedPromptType.Push ||\n            slidedownType === DelayedPromptType.Category);\n    }\n}\n//# sourceMappingURL=PromptsHelper.js.map","import { DelayedPromptType, } from '../models/Prompts';\nimport PromptsHelper from './PromptsHelper';\nexport class ConverterHelper {\n    /**\n     * Standardizes config to version 2 of the config schema\n     * @param  {AppUserConfig} userConfig\n     */\n    static upgradeConfigToVersionTwo(userConfig) {\n        var _a, _b, _c;\n        if (ConverterHelper.isPromptOptionsVersion0(userConfig.promptOptions)) {\n            userConfig.promptOptions = ConverterHelper.convertConfigToVersionOne(userConfig.promptOptions);\n        }\n        if (ConverterHelper.isSlidedownConfigVersion1((_a = userConfig.promptOptions) === null || _a === void 0 ? void 0 : _a.slidedown)) {\n            if ((_b = userConfig.promptOptions) === null || _b === void 0 ? void 0 : _b.slidedown) {\n                userConfig.promptOptions.slidedown =\n                    ConverterHelper.convertConfigToVersionTwo((_c = userConfig.promptOptions) === null || _c === void 0 ? void 0 : _c.slidedown);\n            }\n        }\n    }\n    /**\n     * convertConfigToVersionOne - converts v0 schema to v1 schema format\n     *\n     * v0 schema example\n     * ---\n     *  promptOptions: {\n     *      acceptButtonText: '',\n     *      cancelButtonText: '',\n     *      actionMessage   : '',\n     *      slidedown: {...}\n     *  }\n     *\n     * v1 schema example\n     * ---\n     * \"promptOptions\": {\n     *    \"slidedown\": {\n     *      \"enabled\": true,\n     *      \"autoPrompt\": true,\n     *      \"acceptButtonText\": \"\",\n     *      \"cancelButtonText\": \"\",\n     *      \"actionMessage\": \"\",\n     *      \"...\",\n     *    }\n     * }\n     * @param  {any} promptOptions\n     * @returns AppUserConfigPromptOptions\n     */\n    static convertConfigToVersionOne(promptOptions) {\n        if (!promptOptions.slidedown) {\n            promptOptions.slidedown = {};\n        }\n        const { acceptButtonText, cancelButtonText, actionMessage } = promptOptions.slidedown;\n        // we may have supported both of these keys in the past (with and without \"Text\" postfix)\n        // so we're leaving here and checking in case it is being used this way\n        const higherLevelAcceptButtonText = promptOptions.acceptButtonText || promptOptions.acceptButton;\n        const higherLevelCancelButtonText = promptOptions.cancelButtonText || promptOptions.cancelButton;\n        /**\n         * we should give preference to the lower level (\"slidedown\" level) text settings in the case that\n         * text settings are configured at the higher level as well as the lower level\n         *\n         * Example:\n         * \"promptOptions\": {\n         *      \"acceptButtonText\": \"\",\n         *      \"cancelButtonText\": \"\",\n         *      \"slidedown\": {\n         *          \"acceptButtonText\": \"\", <--\n         *          \"cancelButtonText\": \"\"  <--\n         *      }\n         * }\n         */\n        promptOptions.slidedown.acceptButtonText =\n            acceptButtonText || higherLevelAcceptButtonText;\n        promptOptions.slidedown.cancelButtonText =\n            cancelButtonText || higherLevelCancelButtonText;\n        promptOptions.slidedown.actionMessage =\n            actionMessage || promptOptions.actionMessage;\n        return promptOptions;\n    }\n    static convertConfigToVersionTwo(slidedownConfig) {\n        var _a, _b, _c, _d;\n        // determine if the slidedown is category type or regular push\n        const promptType = PromptsHelper.isCategorySlidedownConfiguredVersion1(slidedownConfig)\n            ? DelayedPromptType.Category\n            : DelayedPromptType.Push;\n        let positiveUpdateButton, negativeUpdateButton;\n        if (promptType === DelayedPromptType.Category) {\n            positiveUpdateButton = (_a = slidedownConfig.categories) === null || _a === void 0 ? void 0 : _a.positiveUpdateButton;\n            negativeUpdateButton = (_b = slidedownConfig.categories) === null || _b === void 0 ? void 0 : _b.negativeUpdateButton;\n        }\n        const existingPromptsConfig = slidedownConfig.prompts || [];\n        return {\n            prompts: [\n                ...existingPromptsConfig,\n                {\n                    type: promptType,\n                    autoPrompt: slidedownConfig.autoPrompt,\n                    text: {\n                        actionMessage: slidedownConfig.actionMessage,\n                        acceptButton: slidedownConfig.acceptButton || slidedownConfig.acceptButtonText,\n                        cancelButton: slidedownConfig.cancelButton || slidedownConfig.cancelButtonText,\n                        // categories-specific...\n                        positiveUpdateButton,\n                        negativeUpdateButton,\n                        updateMessage: (_c = slidedownConfig === null || slidedownConfig === void 0 ? void 0 : slidedownConfig.categories) === null || _c === void 0 ? void 0 : _c.updateMessage,\n                    },\n                    delay: {\n                        pageViews: slidedownConfig.pageViews,\n                        timeDelay: slidedownConfig.timeDelay,\n                    },\n                    categories: (_d = slidedownConfig === null || slidedownConfig === void 0 ? void 0 : slidedownConfig.categories) === null || _d === void 0 ? void 0 : _d.tags,\n                },\n            ],\n        };\n    }\n    /**\n     * For use with Custom Code & Wordpress Implementations\n     * The OneSignal Wordpress Plugin still uses these legacy keys to set the slidedown text\n     * @param  {any} slidedownConfig\n     * @returns boolean\n     */\n    static isPromptOptionsVersion0(slidedownConfig) {\n        if (!!slidedownConfig) {\n            const version0Keys = [\n                'acceptButtonText',\n                'cancelButtonText',\n                'actionMessage',\n            ];\n            for (let i = 0; i < version0Keys.length; i++) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (slidedownConfig.hasOwnProperty(version0Keys[i]))\n                    return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * For use with Custom Code Implementations\n     * Checks whether `slidedownConfig` implements `SlidedownOptionsVersion1` interface\n     * ------------------------------\n     * v1 schema:\n     * ----------\n     * \"slidedown\": {\n     *    \"enabled\": true,\n     *    \"autoPrompt\": true,\n     *    \"...\",\n     *    \"categories\": {...}\n     * }\n     *\n     * v2 schema:\n     * ----------\n     * \"slidedown\": {\n     *    \"prompts\": [{...}, {...}, {...}]\n     * }\n     *\n     * Since config can also be set via custom-code and we have no strict checks,\n     * this function helps to check whether the config implements any v1 style config options\n     * by looking for any of the v1 payload first-level keys. See `SlidedownOptionsVersion1`\n     * for the full list of keys.\n     * @param slidedownConfig\n     */\n    static isSlidedownConfigVersion1(slidedownConfig) {\n        if (!!slidedownConfig) {\n            const version1Keys = [\n                'enabled',\n                'autoPrompt',\n                'pageViews',\n                'timeDelay',\n                'acceptButton',\n                'acceptButtonText',\n                'cancelButton',\n                'cancelButtonText',\n                'actionMessage',\n                'customizeTextEnabled',\n                'categories',\n            ];\n            for (let i = 0; i < version1Keys.length; i++) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (slidedownConfig.hasOwnProperty(version1Keys[i]))\n                    return true;\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=ConverterHelper.js.map","export var ConfigIntegrationKind;\n(function (ConfigIntegrationKind) {\n    ConfigIntegrationKind[\"TypicalSite\"] = \"typical\";\n    ConfigIntegrationKind[\"WordPress\"] = \"wordpress\";\n    ConfigIntegrationKind[\"Shopify\"] = \"shopify\";\n    ConfigIntegrationKind[\"Blogger\"] = \"blogger\";\n    ConfigIntegrationKind[\"Magento\"] = \"magento\";\n    ConfigIntegrationKind[\"Drupal\"] = \"drupal\";\n    ConfigIntegrationKind[\"SquareSpace\"] = \"squarespace\";\n    ConfigIntegrationKind[\"Joomla\"] = \"joomla\";\n    ConfigIntegrationKind[\"Weebly\"] = \"weebly\";\n    ConfigIntegrationKind[\"Wix\"] = \"wix\";\n    ConfigIntegrationKind[\"Custom\"] = \"custom\";\n})(ConfigIntegrationKind || (ConfigIntegrationKind = {}));\nexport var NotificationClickMatchBehavior;\n(function (NotificationClickMatchBehavior) {\n    NotificationClickMatchBehavior[\"Exact\"] = \"exact\";\n    NotificationClickMatchBehavior[\"Origin\"] = \"origin\";\n})(NotificationClickMatchBehavior || (NotificationClickMatchBehavior = {}));\nexport var NotificationClickActionBehavior;\n(function (NotificationClickActionBehavior) {\n    NotificationClickActionBehavior[\"Navigate\"] = \"navigate\";\n    NotificationClickActionBehavior[\"Focus\"] = \"focus\";\n})(NotificationClickActionBehavior || (NotificationClickActionBehavior = {}));\n//# sourceMappingURL=AppConfig.js.map","import { WindowEnvironmentKind } from '../models/WindowEnvironmentKind';\nimport SdkEnvironment from '../managers/SdkEnvironment';\nimport OneSignalUtils from '../utils/OneSignalUtils';\nimport Utils from '../context/Utils';\nimport { SERVER_CONFIG_DEFAULTS_SESSION, SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS, SERVER_CONFIG_DEFAULTS_SLIDEDOWN, CONFIG_DEFAULTS_SLIDEDOWN_OPTIONS, } from '../config/constants';\nimport TagUtils from '../utils/TagUtils';\nimport PromptsHelper from './PromptsHelper';\nimport { ConverterHelper } from './ConverterHelper';\nimport { SdkInitError, SdkInitErrorKind } from '../errors/SdkInitError';\nimport { ConfigIntegrationKind, } from '../models/AppConfig';\nimport { DelayedPromptType, } from '../models/Prompts';\nexport var IntegrationConfigurationKind;\n(function (IntegrationConfigurationKind) {\n    /**\n     * Configuration comes from the dashboard only.\n     */\n    IntegrationConfigurationKind[IntegrationConfigurationKind[\"Dashboard\"] = 0] = \"Dashboard\";\n    /**\n     * Configuration comes from user-provided JavaScript code only.\n     */\n    IntegrationConfigurationKind[IntegrationConfigurationKind[\"JavaScript\"] = 1] = \"JavaScript\";\n})(IntegrationConfigurationKind || (IntegrationConfigurationKind = {}));\nconst MAX_CATEGORIES = 10;\nexport class ConfigHelper {\n    static async getAppConfig(userConfig, downloadServerAppConfig) {\n        try {\n            if (!userConfig ||\n                !userConfig.appId ||\n                !OneSignalUtils.isValidUuid(userConfig.appId))\n                throw new SdkInitError(SdkInitErrorKind.InvalidAppId);\n            const serverConfig = await downloadServerAppConfig(userConfig.appId);\n            ConverterHelper.upgradeConfigToVersionTwo(userConfig);\n            const appConfig = this.getMergedConfig(userConfig, serverConfig);\n            this.checkUnsupportedSubdomain(appConfig);\n            this.checkRestrictedOrigin(appConfig);\n            return appConfig;\n        }\n        catch (e) {\n            if (e) {\n                if (e.code === 1)\n                    throw new SdkInitError(SdkInitErrorKind.InvalidAppId);\n                else if (e.code === 2)\n                    throw new SdkInitError(SdkInitErrorKind.AppNotConfiguredForWebPush);\n            }\n            throw e;\n        }\n    }\n    // The os.tc domain feature is no longer supported in v16, so throw if the\n    // OneSignal app is still configured this way after they migrated from v15.\n    static checkUnsupportedSubdomain(appConfig) {\n        const isHttp = !window.isSecureContext;\n        const unsupportedEnv = appConfig.hasUnsupportedSubdomain || isHttp;\n        if (unsupportedEnv) {\n            if (isHttp) {\n                throw new Error(\"OneSignalSDK: HTTP sites are no longer supported starting with version 16 (User Model), your public site must start with https://. Please visit the OneSignal dashboard's Settings > Web Configuration to find this option.\");\n            }\n            else {\n                throw new Error('OneSignalSDK: The \"My site is not fully HTTPS\" option is no longer supported starting with version 16 (User Model) of the OneSignal SDK. Please visit the OneSignal dashboard\\'s Settings > Web Configuration to find this option.');\n            }\n        }\n    }\n    static checkRestrictedOrigin(appConfig) {\n        if (!appConfig.restrictedOriginEnabled) {\n            return;\n        }\n        if (SdkEnvironment.getWindowEnv() !== WindowEnvironmentKind.Host) {\n            return;\n        }\n        if (!this.doesCurrentOriginMatchConfigOrigin(appConfig.origin)) {\n            throw new SdkInitError(SdkInitErrorKind.WrongSiteUrl, {\n                siteUrl: appConfig.origin,\n            });\n        }\n    }\n    static doesCurrentOriginMatchConfigOrigin(configOrigin) {\n        try {\n            return location.origin === new URL(configOrigin).origin;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static getIntegrationCapabilities(integration) {\n        switch (integration) {\n            case ConfigIntegrationKind.Custom:\n            case ConfigIntegrationKind.WordPress:\n                return { configuration: IntegrationConfigurationKind.JavaScript };\n            default:\n                return { configuration: IntegrationConfigurationKind.Dashboard };\n        }\n    }\n    static getMergedConfig(userConfig, serverConfig) {\n        const configIntegrationKind = this.getConfigIntegrationKind(serverConfig);\n        const hasUnsupportedSubdomain = this.hasUnsupportedSubdomainForConfigIntegrationKind(configIntegrationKind, userConfig, serverConfig);\n        const mergedUserConfig = this.getUserConfigForConfigIntegrationKind(configIntegrationKind, userConfig, serverConfig);\n        return {\n            appId: serverConfig.app_id,\n            hasUnsupportedSubdomain,\n            siteName: serverConfig.config.siteInfo.name,\n            origin: serverConfig.config.origin,\n            restrictedOriginEnabled: serverConfig.features.restrict_origin &&\n                serverConfig.features.restrict_origin.enable,\n            safariWebId: serverConfig.config.safari_web_id,\n            vapidPublicKey: serverConfig.config.vapid_public_key,\n            onesignalVapidPublicKey: serverConfig.config.onesignal_vapid_public_key,\n            userConfig: mergedUserConfig,\n            enableOnSession: Utils.valueOrDefault(serverConfig.features.enable_on_session, SERVER_CONFIG_DEFAULTS_SESSION.enableOnSessionForUnsubcribed),\n            sessionThreshold: Utils.valueOrDefault(serverConfig.features.session_threshold, SERVER_CONFIG_DEFAULTS_SESSION.reportingThreshold),\n            enableSessionDuration: Utils.valueOrDefault(serverConfig.features.web_on_focus_enabled, SERVER_CONFIG_DEFAULTS_SESSION.enableOnFocus),\n        };\n    }\n    static getConfigIntegrationKind(serverConfig) {\n        if (serverConfig.config.integration)\n            return serverConfig.config.integration.kind;\n        return ConfigIntegrationKind.Custom;\n    }\n    static getCustomLinkConfig(serverConfig) {\n        const initialState = {\n            enabled: false,\n            style: 'button',\n            size: 'medium',\n            unsubscribeEnabled: false,\n            text: {\n                explanation: '',\n                subscribe: '',\n                unsubscribe: '',\n            },\n            color: {\n                button: '',\n                text: '',\n            },\n        };\n        if (!serverConfig ||\n            !serverConfig.config ||\n            !serverConfig.config.staticPrompts ||\n            !serverConfig.config.staticPrompts.customlink ||\n            !serverConfig.config.staticPrompts.customlink.enabled) {\n            return initialState;\n        }\n        const customlink = serverConfig.config.staticPrompts.customlink;\n        return {\n            enabled: customlink.enabled,\n            style: customlink.style,\n            size: customlink.size,\n            unsubscribeEnabled: customlink.unsubscribeEnabled,\n            text: customlink.text\n                ? {\n                    subscribe: customlink.text.subscribe,\n                    unsubscribe: customlink.text.unsubscribe,\n                    explanation: customlink.text.explanation,\n                }\n                : initialState.text,\n            color: customlink.color\n                ? {\n                    button: customlink.color.button,\n                    text: customlink.color.text,\n                }\n                : initialState.color,\n        };\n    }\n    /**\n     * Used for Custom Code Integration Type\n     * @param  {AppUserConfigPromptOptions|undefined} promptOptions\n     * @param  {ServerAppPromptConfig} defaultsFromServer\n     * @param  {AppUserConfig} wholeUserConfig\n     * @returns AppUserConfigPromptOptions\n     */\n    static injectDefaultsIntoPromptOptions(promptOptions, defaultsFromServer, wholeUserConfig) {\n        var _a, _b;\n        let customlinkUser = { enabled: false };\n        if (promptOptions && promptOptions.customlink) {\n            customlinkUser = promptOptions.customlink;\n        }\n        const customlinkDefaults = defaultsFromServer.customlink;\n        const promptOptionsConfig = Object.assign(Object.assign({}, promptOptions), { customlink: {\n                enabled: Utils.getValueOrDefault(customlinkUser.enabled, customlinkDefaults.enabled),\n                style: Utils.getValueOrDefault(customlinkUser.style, customlinkDefaults.style),\n                size: Utils.getValueOrDefault(customlinkUser.size, customlinkDefaults.size),\n                unsubscribeEnabled: Utils.getValueOrDefault(customlinkUser.unsubscribeEnabled, customlinkDefaults.unsubscribeEnabled),\n                text: {\n                    subscribe: Utils.getValueOrDefault(customlinkUser.text ? customlinkUser.text.subscribe : undefined, customlinkDefaults.text.subscribe),\n                    unsubscribe: Utils.getValueOrDefault(customlinkUser.text ? customlinkUser.text.unsubscribe : undefined, customlinkDefaults.text.unsubscribe),\n                    explanation: Utils.getValueOrDefault(customlinkUser.text ? customlinkUser.text.explanation : undefined, customlinkDefaults.text.explanation),\n                },\n                color: {\n                    button: Utils.getValueOrDefault(customlinkUser.color ? customlinkUser.color.button : undefined, customlinkDefaults.color.button),\n                    text: Utils.getValueOrDefault(customlinkUser.color ? customlinkUser.color.text : undefined, customlinkDefaults.color.text),\n                },\n            } });\n        if (promptOptionsConfig.slidedown) {\n            promptOptionsConfig.slidedown.prompts =\n                (_b = (_a = promptOptionsConfig.slidedown) === null || _a === void 0 ? void 0 : _a.prompts) === null || _b === void 0 ? void 0 : _b.map((promptOption) => {\n                    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                    promptOption.type = Utils.getValueOrDefault(promptOption.type, DelayedPromptType.Push);\n                    if (promptOption.type === DelayedPromptType.Category) {\n                        promptOption.text = Object.assign(Object.assign({}, promptOption.text), { positiveUpdateButton: Utils.getValueOrDefault((_a = promptOption.text) === null || _a === void 0 ? void 0 : _a.positiveUpdateButton, SERVER_CONFIG_DEFAULTS_SLIDEDOWN.categoryDefaults\n                                .positiveUpdateButton), negativeUpdateButton: Utils.getValueOrDefault((_b = promptOption.text) === null || _b === void 0 ? void 0 : _b.negativeUpdateButton, SERVER_CONFIG_DEFAULTS_SLIDEDOWN.categoryDefaults\n                                .negativeUpdateButton), updateMessage: Utils.getValueOrDefault((_c = promptOption.text) === null || _c === void 0 ? void 0 : _c.updateMessage, SERVER_CONFIG_DEFAULTS_SLIDEDOWN.categoryDefaults.updateMessage) });\n                    }\n                    promptOption.text = Object.assign(Object.assign({}, promptOption.text), { actionMessage: Utils.getValueOrDefault((_d = promptOption.text) === null || _d === void 0 ? void 0 : _d.actionMessage, SERVER_CONFIG_DEFAULTS_SLIDEDOWN.actionMessage), acceptButton: Utils.getValueOrDefault((_e = promptOption.text) === null || _e === void 0 ? void 0 : _e.acceptButton, SERVER_CONFIG_DEFAULTS_SLIDEDOWN.acceptButton), cancelButton: Utils.getValueOrDefault((_f = promptOption.text) === null || _f === void 0 ? void 0 : _f.cancelButton, SERVER_CONFIG_DEFAULTS_SLIDEDOWN.cancelButton), confirmMessage: Utils.getValueOrDefault((_g = promptOption.text) === null || _g === void 0 ? void 0 : _g.confirmMessage, SERVER_CONFIG_DEFAULTS_SLIDEDOWN.confirmMessage) });\n                    // default autoPrompt to true iff slidedown config exists but omitted the autoPrompt setting\n                    promptOption.autoPrompt = Utils.getValueOrDefault(promptOption.autoPrompt, true);\n                    promptOption.delay = {\n                        pageViews: Utils.getValueOrDefault((_h = promptOption.delay) === null || _h === void 0 ? void 0 : _h.pageViews, SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.pageViews),\n                        timeDelay: Utils.getValueOrDefault((_j = promptOption.delay) === null || _j === void 0 ? void 0 : _j.timeDelay, SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.timeDelay),\n                    };\n                    if (promptOption.categories) {\n                        const { categories } = promptOption;\n                        promptOption.categories = TagUtils.limitCategoriesToMaxCount(categories, MAX_CATEGORIES);\n                    }\n                    return promptOption;\n                });\n        }\n        else {\n            promptOptionsConfig.slidedown = { prompts: [] };\n            promptOptionsConfig.slidedown.prompts = [\n                CONFIG_DEFAULTS_SLIDEDOWN_OPTIONS,\n            ];\n        }\n        if (promptOptionsConfig.native) {\n            promptOptionsConfig.native.enabled = !!promptOptionsConfig.native.enabled;\n            promptOptionsConfig.native.autoPrompt =\n                // eslint-disable-next-line no-prototype-builtins\n                promptOptionsConfig.native.hasOwnProperty('autoPrompt')\n                    ? !!promptOptionsConfig.native.enabled &&\n                        !!promptOptionsConfig.native.autoPrompt\n                    : !!promptOptionsConfig.native.enabled;\n            promptOptionsConfig.native.pageViews = Utils.getValueOrDefault(promptOptionsConfig.native.pageViews, SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.pageViews);\n            promptOptionsConfig.native.timeDelay = Utils.getValueOrDefault(promptOptionsConfig.native.timeDelay, SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.timeDelay);\n        }\n        else {\n            promptOptionsConfig.native = {\n                enabled: false,\n                autoPrompt: false,\n                pageViews: SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.pageViews,\n                timeDelay: SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.timeDelay,\n            };\n        }\n        /**\n         * If autoRegister is true, show native prompt for https and slidedown for http ignoring any other related\n         * prompt options.\n         */\n        if (wholeUserConfig.autoRegister === true) {\n            //enable native prompt & make it autoPrompt\n            promptOptionsConfig.native.enabled = true;\n            promptOptionsConfig.native.autoPrompt = true;\n            //leave slidedown settings without change\n        }\n        // sets top level `autoPrompt` to trigger autoprompt codepath in initialization / prompting flow\n        promptOptionsConfig.autoPrompt =\n            promptOptionsConfig.native.autoPrompt ||\n                PromptsHelper.isSlidedownAutoPromptConfigured(promptOptionsConfig.slidedown.prompts);\n        return promptOptionsConfig;\n    }\n    /**\n     * Used only with Dashboard Configuration\n     * @param  {ServerAppConfig} serverConfig\n     * @returns AppUserConfigPromptOptions\n     */\n    static getPromptOptionsForDashboardConfiguration(serverConfig) {\n        const staticPrompts = serverConfig.config.staticPrompts;\n        const native = staticPrompts.native\n            ? {\n                enabled: staticPrompts.native.enabled,\n                autoPrompt: staticPrompts.native.enabled &&\n                    staticPrompts.native.autoPrompt !== false,\n                pageViews: Utils.getValueOrDefault(staticPrompts.native.pageViews, SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.pageViews),\n                timeDelay: Utils.getValueOrDefault(staticPrompts.native.timeDelay, SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.timeDelay),\n            }\n            : {\n                enabled: false,\n                autoPrompt: false,\n                pageViews: SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.pageViews,\n                timeDelay: SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.timeDelay,\n            };\n        const { prompts } = staticPrompts.slidedown;\n        return {\n            autoPrompt: native.autoPrompt ||\n                PromptsHelper.isSlidedownAutoPromptConfigured(prompts),\n            native,\n            slidedown: {\n                prompts,\n            },\n            fullscreen: {\n                enabled: staticPrompts.fullscreen.enabled,\n                actionMessage: staticPrompts.fullscreen.actionMessage,\n                acceptButton: staticPrompts.fullscreen.acceptButton,\n                cancelButton: staticPrompts.fullscreen.cancelButton,\n                title: staticPrompts.fullscreen.title,\n                message: staticPrompts.fullscreen.message,\n                caption: staticPrompts.fullscreen.caption,\n                autoAcceptTitle: staticPrompts.fullscreen.autoAcceptTitle,\n            },\n            customlink: this.getCustomLinkConfig(serverConfig),\n        };\n    }\n    static getServiceWorkerValues(userConfig, serverConfig) {\n        const useUserOverride = userConfig.serviceWorkerOverrideForTypical;\n        const path = useUserOverride\n            ? Utils.getValueOrDefault(userConfig.path, serverConfig.config.serviceWorker.path)\n            : serverConfig.config.serviceWorker.path;\n        const serviceWorkerParam = useUserOverride\n            ? Utils.getValueOrDefault(userConfig.serviceWorkerParam, {\n                scope: serverConfig.config.serviceWorker.registrationScope,\n            })\n            : { scope: serverConfig.config.serviceWorker.registrationScope };\n        const serviceWorkerPath = useUserOverride\n            ? Utils.getValueOrDefault(userConfig.serviceWorkerPath, serverConfig.config.serviceWorker.workerName)\n            : serverConfig.config.serviceWorker.workerName;\n        return {\n            path,\n            serviceWorkerParam,\n            serviceWorkerPath,\n        };\n    }\n    static getUserConfigForConfigIntegrationKind(configIntegrationKind, userConfig, serverConfig) {\n        const integrationCapabilities = this.getIntegrationCapabilities(configIntegrationKind);\n        switch (integrationCapabilities.configuration) {\n            case IntegrationConfigurationKind.Dashboard: {\n                /*\n                 Ignores code-based initialization configuration and uses dashboard configuration only.\n                */\n                const { path, serviceWorkerPath, serviceWorkerParam } = this.getServiceWorkerValues(userConfig, serverConfig);\n                return {\n                    appId: serverConfig.app_id,\n                    autoRegister: false,\n                    autoResubscribe: serverConfig.config.autoResubscribe,\n                    path,\n                    serviceWorkerPath,\n                    serviceWorkerParam,\n                    subdomainName: serverConfig.config.siteInfo.proxyOrigin,\n                    promptOptions: this.getPromptOptionsForDashboardConfiguration(serverConfig),\n                    welcomeNotification: {\n                        disable: !serverConfig.config.welcomeNotification.enable,\n                        title: serverConfig.config.welcomeNotification.title,\n                        message: serverConfig.config.welcomeNotification.message,\n                        url: serverConfig.config.welcomeNotification.url,\n                    },\n                    notifyButton: {\n                        enable: serverConfig.config.staticPrompts.bell.enabled,\n                        displayPredicate: serverConfig.config.staticPrompts.bell\n                            .hideWhenSubscribed\n                            ? () => !OneSignal.User.PushSubscription.optedIn\n                            : null,\n                        size: serverConfig.config.staticPrompts.bell.size,\n                        position: serverConfig.config.staticPrompts.bell.location,\n                        showCredit: false,\n                        offset: {\n                            bottom: `${serverConfig.config.staticPrompts.bell.offset.bottom}px`,\n                            left: `${serverConfig.config.staticPrompts.bell.offset.left}px`,\n                            right: `${serverConfig.config.staticPrompts.bell.offset.right}px`,\n                        },\n                        colors: {\n                            'circle.background': serverConfig.config.staticPrompts.bell.color.main,\n                            'circle.foreground': serverConfig.config.staticPrompts.bell.color.accent,\n                            'badge.background': 'black',\n                            'badge.foreground': 'white',\n                            'badge.bordercolor': 'black',\n                            'pulse.color': serverConfig.config.staticPrompts.bell.color.accent,\n                            'dialog.button.background.hovering': serverConfig.config.staticPrompts.bell.color.main,\n                            'dialog.button.background.active': serverConfig.config.staticPrompts.bell.color.main,\n                            'dialog.button.background': serverConfig.config.staticPrompts.bell.color.main,\n                            'dialog.button.foreground': 'white',\n                        },\n                        text: {\n                            'tip.state.unsubscribed': serverConfig.config.staticPrompts.bell.tooltip.unsubscribed,\n                            'tip.state.subscribed': serverConfig.config.staticPrompts.bell.tooltip.subscribed,\n                            'tip.state.blocked': serverConfig.config.staticPrompts.bell.tooltip.blocked,\n                            'message.prenotify': serverConfig.config.staticPrompts.bell.tooltip.unsubscribed,\n                            'message.action.subscribing': serverConfig.config.staticPrompts.bell.message.subscribing,\n                            'message.action.subscribed': serverConfig.config.staticPrompts.bell.message.subscribing,\n                            'message.action.resubscribed': serverConfig.config.staticPrompts.bell.message.subscribing,\n                            'message.action.unsubscribed': serverConfig.config.staticPrompts.bell.message.unsubscribing,\n                            'dialog.main.title': serverConfig.config.staticPrompts.bell.dialog.main.title,\n                            'dialog.main.button.subscribe': serverConfig.config.staticPrompts.bell.dialog.main\n                                .subscribeButton,\n                            'dialog.main.button.unsubscribe': serverConfig.config.staticPrompts.bell.dialog.main\n                                .unsubscribeButton,\n                            'dialog.blocked.title': serverConfig.config.staticPrompts.bell.dialog.blocked.title,\n                            'dialog.blocked.message': serverConfig.config.staticPrompts.bell.dialog.blocked.message,\n                        },\n                    },\n                    persistNotification: serverConfig.config.notificationBehavior\n                        ? serverConfig.config.notificationBehavior.display.persist\n                        : undefined,\n                    webhooks: {\n                        cors: serverConfig.config.webhooks.corsEnable,\n                        'notification.willDisplay': serverConfig.config.webhooks.notificationDisplayedHook,\n                        'notification.clicked': serverConfig.config.webhooks.notificationClickedHook,\n                        'notification.dismissed': serverConfig.config.webhooks.notificationDismissedHook,\n                    },\n                    notificationClickHandlerMatch: serverConfig.config\n                        .notificationBehavior\n                        ? serverConfig.config.notificationBehavior.click.match\n                        : undefined,\n                    notificationClickHandlerAction: serverConfig.config\n                        .notificationBehavior\n                        ? serverConfig.config.notificationBehavior.click.action\n                        : undefined,\n                    allowLocalhostAsSecureOrigin: serverConfig.config.setupBehavior\n                        ? serverConfig.config.setupBehavior.allowLocalhostAsSecureOrigin\n                        : undefined,\n                    outcomes: {\n                        direct: serverConfig.config.outcomes.direct,\n                        indirect: {\n                            enabled: serverConfig.config.outcomes.indirect.enabled,\n                            influencedTimePeriodMin: serverConfig.config.outcomes.indirect.notification_attribution\n                                .minutes_since_displayed,\n                            influencedNotificationsLimit: serverConfig.config.outcomes.indirect.notification_attribution\n                                .limit,\n                        },\n                        unattributed: serverConfig.config.outcomes.unattributed,\n                    },\n                };\n            }\n            case IntegrationConfigurationKind.JavaScript: {\n                /*\n                  Ignores dashboard configuration and uses code-based configuration only.\n                  Except injecting some default values for prompts.\n                */\n                const defaultServiceWorkerParam = { scope: '/' };\n                const defaultServiceWorkerPath = 'OneSignalSDKWorker.js';\n                const config = Object.assign(Object.assign(Object.assign(Object.assign({}, userConfig), { promptOptions: this.injectDefaultsIntoPromptOptions(userConfig.promptOptions, serverConfig.config.staticPrompts, userConfig) }), {\n                    serviceWorkerParam: !!userConfig.serviceWorkerParam\n                        ? userConfig.serviceWorkerParam\n                        : defaultServiceWorkerParam,\n                    serviceWorkerPath: !!userConfig.serviceWorkerPath\n                        ? userConfig.serviceWorkerPath\n                        : defaultServiceWorkerPath,\n                    path: !!userConfig.path ? userConfig.path : '/',\n                }), { outcomes: {\n                        direct: serverConfig.config.outcomes.direct,\n                        indirect: {\n                            enabled: serverConfig.config.outcomes.indirect.enabled,\n                            influencedTimePeriodMin: serverConfig.config.outcomes.indirect.notification_attribution\n                                .minutes_since_displayed,\n                            influencedNotificationsLimit: serverConfig.config.outcomes.indirect.notification_attribution\n                                .limit,\n                        },\n                        unattributed: serverConfig.config.outcomes.unattributed,\n                    } });\n                // eslint-disable-next-line no-prototype-builtins\n                if (userConfig.hasOwnProperty('autoResubscribe')) {\n                    config.autoResubscribe = !!userConfig.autoResubscribe;\n                    // eslint-disable-next-line no-prototype-builtins\n                }\n                else if (userConfig.hasOwnProperty('autoRegister')) {\n                    config.autoResubscribe = !!userConfig.autoRegister;\n                }\n                else {\n                    config.autoResubscribe = !!serverConfig.config.autoResubscribe;\n                }\n                return config;\n            }\n        }\n    }\n    /**\n     * Describes how to merge a dashboard-set subdomain with a/lack of user-supplied subdomain.\n     */\n    static hasUnsupportedSubdomainForConfigIntegrationKind(configIntegrationKind, userConfig, serverConfig) {\n        const integrationCapabilities = this.getIntegrationCapabilities(configIntegrationKind);\n        switch (integrationCapabilities.configuration) {\n            case IntegrationConfigurationKind.Dashboard:\n                return serverConfig.config.siteInfo.proxyOriginEnabled;\n            case IntegrationConfigurationKind.JavaScript:\n                return !!userConfig.subdomainName;\n        }\n    }\n}\n//# sourceMappingURL=ConfigHelper.js.map","import OneSignalApi from '../../shared/api/OneSignalApi';\nimport { ConfigHelper } from '../../shared/helpers/ConfigHelper';\n/**\n * Handles downloading settings from OneSignal and performing any other initialization-related tasks.\n */\nexport default class ConfigManager {\n    /**\n     * Downloads configuration from the OneSignal dashboard, merges it with user-supplied configuration from JavaScript\n     * code, and returns Web SDK-specific configuration.\n     */\n    async getAppConfig(userConfig) {\n        return await ConfigHelper.getAppConfig(userConfig, OneSignalApi.downloadServerAppConfig);\n    }\n    /**\n     * Merges configuration downloaded from the OneSignal dashboard with user-provided JavaScript configuration to produce\n     * a final web SDK-specific configuration.\n     */\n    getMergedConfig(userConfig, serverConfig) {\n        return ConfigHelper.getMergedConfig(userConfig, serverConfig);\n    }\n}\n//# sourceMappingURL=ConfigManager.js.map","import { InvalidArgumentError, InvalidArgumentReason, } from '../errors/InvalidArgumentError';\nimport SdkEnvironment from '../managers/SdkEnvironment';\nimport { WindowEnvironmentKind } from '../models/WindowEnvironmentKind';\nimport Environment from '../helpers/Environment';\nimport Log from './Log';\nimport ServiceWorkerUtilHelper from '../../sw/helpers/ServiceWorkerUtilHelper';\n/**\n * NOTE: This file contains a mix of code that runs in ServiceWorker and Page contexts\n */\nexport var WorkerMessengerCommand;\n(function (WorkerMessengerCommand) {\n    WorkerMessengerCommand[\"WorkerVersion\"] = \"GetWorkerVersion\";\n    WorkerMessengerCommand[\"Subscribe\"] = \"Subscribe\";\n    WorkerMessengerCommand[\"SubscribeNew\"] = \"SubscribeNew\";\n    WorkerMessengerCommand[\"AmpSubscriptionState\"] = \"amp-web-push-subscription-state\";\n    WorkerMessengerCommand[\"AmpSubscribe\"] = \"amp-web-push-subscribe\";\n    WorkerMessengerCommand[\"AmpUnsubscribe\"] = \"amp-web-push-unsubscribe\";\n    WorkerMessengerCommand[\"NotificationWillDisplay\"] = \"notification.willDisplay\";\n    WorkerMessengerCommand[\"NotificationClicked\"] = \"notification.clicked\";\n    WorkerMessengerCommand[\"NotificationDismissed\"] = \"notification.dismissed\";\n    WorkerMessengerCommand[\"RedirectPage\"] = \"command.redirect\";\n    WorkerMessengerCommand[\"SessionUpsert\"] = \"os.session.upsert\";\n    WorkerMessengerCommand[\"SessionDeactivate\"] = \"os.session.deactivate\";\n    WorkerMessengerCommand[\"AreYouVisible\"] = \"os.page_focused_request\";\n    WorkerMessengerCommand[\"AreYouVisibleResponse\"] = \"os.page_focused_response\";\n    WorkerMessengerCommand[\"SetLogging\"] = \"os.set_sw_logging\";\n})(WorkerMessengerCommand || (WorkerMessengerCommand = {}));\nexport class WorkerMessengerReplyBuffer {\n    constructor() {\n        this.replies = {};\n    }\n    addListener(command, callback, onceListenerOnly) {\n        const record = {\n            callback,\n            onceListenerOnly,\n        };\n        const replies = this.replies[command.toString()];\n        if (replies)\n            replies.push(record);\n        else\n            this.replies[command.toString()] = [record];\n    }\n    findListenersForMessage(command) {\n        return this.replies[command.toString()] || [];\n    }\n    deleteListenerRecords(command) {\n        this.replies[command.toString()] = null;\n    }\n    deleteAllListenerRecords() {\n        this.replies = {};\n    }\n    deleteListenerRecord(command, targetRecord) {\n        const listenersForCommand = this.replies[command.toString()];\n        if (listenersForCommand == null)\n            return;\n        for (let listenerRecordIndex = listenersForCommand.length - 1; listenerRecordIndex >= 0; listenerRecordIndex--) {\n            const listenerRecord = listenersForCommand[listenerRecordIndex];\n            if (listenerRecord === targetRecord) {\n                listenersForCommand.splice(listenerRecordIndex, 1);\n            }\n        }\n    }\n}\n/**\n * A Promise-based PostMessage helper to ease back-and-forth replies between\n * service workers and window frames.\n */\nexport class WorkerMessenger {\n    constructor(context, replies = new WorkerMessengerReplyBuffer()) {\n        this.context = context;\n        this.replies = replies;\n    }\n    /**\n     * Broadcasts a message from a service worker to all clients, including uncontrolled clients.\n     */\n    async broadcast(command, payload) {\n        if (SdkEnvironment.getWindowEnv() !== WindowEnvironmentKind.ServiceWorker)\n            return;\n        const clients = await self.clients.matchAll({ type: 'window', includeUncontrolled: true });\n        for (const client of clients) {\n            Log.debug(`[Worker Messenger] [SW -> Page] Broadcasting '${command.toString()}' to window client ${client.url}.`);\n            client.postMessage({\n                command: command,\n                payload: payload,\n            });\n        }\n    }\n    /*\n      If running on a page context:\n        Sends a postMessage() to OneSignal's Serviceworker\n      If running in a ServiceWorker context:\n        Sends a postMessage() to the supplied windowClient\n     */\n    async unicast(command, payload, windowClient) {\n        const env = SdkEnvironment.getWindowEnv();\n        if (env === WindowEnvironmentKind.ServiceWorker) {\n            if (!windowClient) {\n                throw new InvalidArgumentError('windowClient', InvalidArgumentReason.Empty);\n            }\n            else {\n                Log.debug(`[Worker Messenger] [SW -> Page] Unicasting '${command.toString()}' to window client ${windowClient.url}.`);\n                windowClient.postMessage({\n                    command: command,\n                    payload: payload,\n                });\n            }\n        }\n        else {\n            Log.debug(`[Worker Messenger] [Page -> SW] Unicasting '${command.toString()}' to service worker.`);\n            this.directPostMessageToSW(command, payload);\n        }\n    }\n    async directPostMessageToSW(command, payload) {\n        var _a;\n        Log.debug(`[Worker Messenger] [Page -> SW] Direct command '${command.toString()}' to service worker.`);\n        const workerRegistration = await ((_a = this.context) === null || _a === void 0 ? void 0 : _a.serviceWorkerManager.getOneSignalRegistration());\n        if (!workerRegistration) {\n            Log.error('`[Worker Messenger] [Page -> SW] Could not get ServiceWorkerRegistration to postMessage!');\n            return;\n        }\n        const availableWorker = ServiceWorkerUtilHelper.getAvailableServiceWorker(workerRegistration);\n        if (!availableWorker) {\n            Log.error('`[Worker Messenger] [Page -> SW] Could not get ServiceWorker to postMessage!');\n            return;\n        }\n        // The postMessage payload will still arrive at the SW even if it isn't active yet.\n        availableWorker.postMessage({\n            command: command,\n            payload: payload,\n        });\n    }\n    /**\n     * Due to https://github.com/w3c/ServiceWorker/issues/1156, listen() must\n     * synchronously add self.addEventListener('message') if we are running in the\n     * service worker.\n     */\n    async listen() {\n        if (!Environment.supportsServiceWorkers())\n            return;\n        const env = SdkEnvironment.getWindowEnv();\n        if (env === WindowEnvironmentKind.ServiceWorker) {\n            self.addEventListener('message', this.onWorkerMessageReceivedFromPage.bind(this));\n            Log.debug('[Worker Messenger] Service worker is now listening for messages.');\n        }\n        else\n            await this.listenForPage();\n    }\n    /**\n     * Listens for messages for the service worker.\n     */\n    async listenForPage() {\n        navigator.serviceWorker.addEventListener('message', this.onPageMessageReceivedFromServiceWorker.bind(this));\n        Log.debug(`(${location.origin}) [Worker Messenger] Page is now listening for messages.`);\n    }\n    onWorkerMessageReceivedFromPage(event) {\n        const data = event.data;\n        /* If this message doesn't contain our expected fields, discard the message */\n        /* The payload may be null. AMP web push sends commands to our service worker in the format:\n    \n           { command: \"amp-web-push-subscription-state\", payload: null }\n           { command: \"amp-web-push-unsubscribe\", payload: null }\n           { command: \"amp-web-push-subscribe\", payload: null }\n    \n        */\n        if (!data || !data.command) {\n            return;\n        }\n        const listenerRecords = this.replies.findListenersForMessage(data.command);\n        const listenersToRemove = [];\n        const listenersToCall = [];\n        Log.debug(`[Worker Messenger] Service worker received message:`, event.data);\n        for (const listenerRecord of listenerRecords) {\n            if (listenerRecord.onceListenerOnly) {\n                listenersToRemove.push(listenerRecord);\n            }\n            listenersToCall.push(listenerRecord);\n        }\n        for (let i = listenersToRemove.length - 1; i >= 0; i--) {\n            const listenerRecord = listenersToRemove[i];\n            this.replies.deleteListenerRecord(data.command, listenerRecord);\n        }\n        for (const listenerRecord of listenersToCall) {\n            listenerRecord.callback.apply(null, [data.payload]);\n        }\n    }\n    /*\n    Occurs when the page receives a message from the service worker.\n  \n    A map of callbacks is checked to see if anyone is listening to the specific\n    message topic. If no one is listening to the message, it is discarded;\n    otherwise, the listener callback is executed.\n    */\n    onPageMessageReceivedFromServiceWorker(event) {\n        const data = event.data;\n        /* If this message doesn't contain our expected fields, discard the message */\n        if (!data || !data.command) {\n            return;\n        }\n        const listenerRecords = this.replies.findListenersForMessage(data.command);\n        const listenersToRemove = [];\n        const listenersToCall = [];\n        Log.debug(`[Worker Messenger] Page received message:`, event.data);\n        for (const listenerRecord of listenerRecords) {\n            if (listenerRecord.onceListenerOnly) {\n                listenersToRemove.push(listenerRecord);\n            }\n            listenersToCall.push(listenerRecord);\n        }\n        for (let i = listenersToRemove.length - 1; i >= 0; i--) {\n            const listenerRecord = listenersToRemove[i];\n            this.replies.deleteListenerRecord(data.command, listenerRecord);\n        }\n        for (const listenerRecord of listenersToCall) {\n            listenerRecord.callback.apply(null, [data.payload]);\n        }\n    }\n    /*\n      Subscribes a callback to be notified every time a service worker sends a\n      message to the window frame with the specific command.\n     */\n    on(command, callback) {\n        this.replies.addListener(command, callback, false);\n    }\n    /*\n    Subscribes a callback to be notified the next time a service worker sends a\n    message to the window frame with the specific command.\n  \n    The callback is executed once at most.\n    */\n    once(command, callback) {\n        this.replies.addListener(command, callback, true);\n    }\n    /**\n      Unsubscribe a callback from being notified about service worker messages\n      with the specified command.\n     */\n    off(command) {\n        if (command) {\n            this.replies.deleteListenerRecords(command);\n        }\n        else {\n            this.replies.deleteAllListenerRecords();\n        }\n    }\n}\n//# sourceMappingURL=WorkerMessenger.js.map","import Log from '../../shared/libraries/Log';\nexport default class ServiceWorkerUtilHelper {\n    // Get the service worker based on a relative scope.\n    // A  relative scope is required as a domain can have none to many service workers installed.\n    static async getRegistration(scope) {\n        try {\n            // Adding location.origin to negate the effects of a possible <base> html tag the page may have.\n            const url = location.origin + scope;\n            return await navigator.serviceWorker.getRegistration(url);\n        }\n        catch (e) {\n            // This could be null in an HTTP context or error if the user doesn't accept cookies\n            Log.warn('[Service Worker Status] Error Checking service worker registration', scope, e);\n            return undefined;\n        }\n    }\n    // A ServiceWorkerRegistration will have a ServiceWorker in 1 of 3 states, get which ever is available.\n    static getAvailableServiceWorker(registration) {\n        const availableWorker = registration.active || registration.installing || registration.waiting;\n        // This never be null unless ServiceWorkerRegistration is pointing to a worker that is completely gone.\n        if (!availableWorker) {\n            Log.warn('Could not find an available ServiceWorker instance!');\n        }\n        return availableWorker;\n    }\n    // Allows waiting for the service worker registration to become active.\n    // Some APIs, like registration.pushManager.subscribe, required it be active\n    // otherwise it throws.\n    static waitUntilActive(registration) {\n        return new Promise((resolve) => {\n            // IMPORTANT: checking non-active instances first,\n            // otherwise the 'statechange' event could be missed.\n            const inactiveWorker = registration.installing || registration.waiting;\n            if (inactiveWorker) {\n                inactiveWorker.addEventListener('statechange', () => {\n                    Log.debug('OneSignal Service Worker state changed:', inactiveWorker.state);\n                    if (registration.active) {\n                        resolve();\n                    }\n                });\n            }\n            if (registration.active)\n                resolve();\n        });\n    }\n}\n//# sourceMappingURL=ServiceWorkerUtilHelper.js.map","import SdkEnvironment from '../../shared/managers/SdkEnvironment';\nimport Environment from '../../shared/helpers/Environment';\nexport class DynamicResourceLoader {\n    constructor() {\n        this.cache = {};\n    }\n    getCache() {\n        // Cache is private; return a cloned copy just for testing\n        return Object.assign({}, this.cache);\n    }\n    async loadSdkStylesheet() {\n        const pathForEnv = SdkEnvironment.getOneSignalResourceUrlPath();\n        const cssFileForEnv = SdkEnvironment.getOneSignalCssFileName();\n        return await this.loadIfNew(0 /* ResourceType.Stylesheet */, new URL(`${pathForEnv}/${cssFileForEnv}?v=${Environment.getSdkStylesVersionHash()}`));\n    }\n    async loadFetchPolyfill() {\n        return await this.loadIfNew(1 /* ResourceType.Script */, new URL('https://cdnjs.cloudflare.com/ajax/libs/fetch/2.0.3/fetch.min.js'));\n    }\n    /**\n     * Attempts to load a resource by adding it to the document's <head>.\n     * Caches any previous load attempt's result and does not retry loading a previous resource.\n     */\n    async loadIfNew(type, url) {\n        // Load for first time\n        if (!this.cache[url.toString()]) {\n            this.cache[url.toString()] = DynamicResourceLoader.load(type, url);\n        }\n        // Resource is loading; multiple calls can be made to this while the same resource is loading\n        // Waiting on the Promise is what we want here\n        return await this.cache[url.toString()];\n    }\n    /**\n     * Attempts to load a resource by adding it to the document's <head>.\n     * Each call creates a new DOM element and fetch attempt.\n     */\n    static async load(type, url) {\n        try {\n            let domElement;\n            await new Promise((resolve, reject) => {\n                var _a;\n                switch (type) {\n                    case 1 /* ResourceType.Script */:\n                        domElement = document.createElement('script');\n                        domElement.setAttribute('type', 'text/javascript');\n                        domElement.setAttribute('async', 'async');\n                        domElement.setAttribute('src', url.toString());\n                        break;\n                    case 0 /* ResourceType.Stylesheet */:\n                        domElement = document.createElement('link');\n                        domElement.setAttribute('rel', 'stylesheet');\n                        domElement.setAttribute('href', url.toString());\n                        break;\n                }\n                domElement.onerror = reject;\n                domElement.onload = resolve;\n                (_a = document.querySelector('head')) === null || _a === void 0 ? void 0 : _a.appendChild(domElement);\n            });\n            return 0 /* ResourceLoadState.Loaded */;\n        }\n        catch (e) {\n            return 1 /* ResourceLoadState.Failed */;\n        }\n    }\n}\n//# sourceMappingURL=DynamicResourceLoader.js.map","const IS_OPTED_OUT = 'isOptedOut';\nconst IS_PUSH_NOTIFICATIONS_ENABLED = 'isPushNotificationsEnabled';\nconst PAGE_VIEWS = 'os_pageViews';\nconst REQUIRES_PRIVACY_CONSENT = 'requiresPrivacyConsent';\nexport default class LocalStorage {\n    /**\n     * Used in OneSignal initialization to dedupe local storage subscription options already being saved to IndexedDB.\n     * We will eventually be able to remove this function.\n     */\n    static removeLegacySubscriptionOptions() {\n        localStorage.removeItem(IS_OPTED_OUT);\n        localStorage.removeItem(IS_PUSH_NOTIFICATIONS_ENABLED);\n    }\n    static setConsentRequired(value) {\n        localStorage.setItem(REQUIRES_PRIVACY_CONSENT, value.toString());\n    }\n    static getConsentRequired() {\n        return localStorage.getItem(REQUIRES_PRIVACY_CONSENT) === 'true';\n    }\n    static setLocalPageViewCount(count) {\n        localStorage.setItem(PAGE_VIEWS, count.toString());\n    }\n    static getLocalPageViewCount() {\n        return Number(localStorage.getItem(PAGE_VIEWS));\n    }\n}\n//# sourceMappingURL=LocalStorage.js.map","import Log from '../libraries/Log';\nimport LocalStorage from '../utils/LocalStorage';\nexport class PageViewManager {\n    constructor() {\n        this.incrementedPageViewCount = false;\n    }\n    getPageViewCount() {\n        try {\n            /*\n              sessionStorage may be supported by the browser but may not be available\n              as an API in incognito mode and in cases where the user disables\n              third-party cookies on some browsers.\n             */\n            const pageViewCountStr = sessionStorage.getItem(PageViewManager.SESSION_STORAGE_KEY_NAME);\n            const pageViewCount = pageViewCountStr ? parseInt(pageViewCountStr) : 0;\n            if (isNaN(pageViewCount)) {\n                return 0;\n            }\n            else {\n                return pageViewCount;\n            }\n        }\n        catch (e) {\n            /*\n              If we're in incognito mode or sessionStorage is otherwise unsupported,\n              pretend we're starting our first session.\n             */\n            return 0;\n        }\n    }\n    setPageViewCount(sessionCount) {\n        try {\n            sessionStorage.setItem(PageViewManager.SESSION_STORAGE_KEY_NAME, sessionCount.toString());\n        }\n        catch (e) {\n            /*\n              If sessionStorage isn't available, don't error.\n             */\n        }\n    }\n    /**\n     * Increments:\n     *    - session pageView count AND\n     *    - total pageView count\n     *\n     * at most once for the current page view.\n     *\n     * A flag is set to prevent incrementing the session count more than once for\n     * the current page view. If the page is refreshed, this in-memory variable\n     * will be automatically reset. Because of this, regardless of the number of\n     * times this method is called on the current page view, the page view count\n     * will only be incremented once.\n     *\n     * LocalStorage pageView count added for use in Delayed Prompts feature. This\n     * pageView count persists even past sessions since it is saved to local stor-\n     * age (as opposed to Session Storage which persists only for that tab)\n     */\n    incrementPageViewCount() {\n        if (this.incrementedPageViewCount) {\n            // For this method, we don't want to increment the session count more than\n            // once per pageview\n            return;\n        }\n        const newCountSingleTab = this.getPageViewCount() + 1;\n        const newCountAcrossTabs = this.getLocalPageViewCount() + 1;\n        this.setPageViewCount(newCountSingleTab);\n        this.setLocalPageViewCount(newCountAcrossTabs);\n        this.incrementedPageViewCount = true;\n        Log.debug(`Incremented page view count: newCountSingleTab: ${newCountSingleTab},\n      newCountAccrossTabs: ${newCountAcrossTabs}.`);\n    }\n    simulatePageNavigationOrRefresh() {\n        this.incrementedPageViewCount = false;\n    }\n    /**\n     * Returns true if this page is running OneSignal for the first time and has\n     * not been navigated or refreshed.\n     */\n    isFirstPageView() {\n        return this.getPageViewCount() === 1;\n    }\n    /**\n     * Returns Page Views saved to Local Storage (Persists Longer than Single Session)\n     */\n    getLocalPageViewCount() {\n        return LocalStorage.getLocalPageViewCount();\n    }\n    /**\n     * Sets Page Views to Local Storage\n     */\n    setLocalPageViewCount(count) {\n        LocalStorage.setLocalPageViewCount(count);\n    }\n}\nPageViewManager.SESSION_STORAGE_KEY_NAME = 'onesignal-pageview-count';\n//# sourceMappingURL=PageViewManager.js.map","import { InvalidArgumentError, InvalidArgumentReason, } from '../errors/InvalidArgumentError';\nimport OneSignalError from '../errors/OneSignalError';\nimport Environment from '../helpers/Environment';\n/**\n * A permission manager to consolidate the different quirks of obtaining and evaluating permissions\n * across Safari, Chrome, and Firefox.\n */\nexport default class PermissionManager {\n    static get STORED_PERMISSION_KEY() {\n        return 'storedNotificationPermission';\n    }\n    /**\n     * Returns a promise that resolves to the browser's current notification permission as\n     *    'default', 'granted', or 'denied'.\n     */\n    async getPermissionStatus() {\n        if (!OneSignal.context) {\n            throw new OneSignalError(`OneSignal.context is undefined. Make sure to call OneSignal.init() before calling getPermissionStatus().`);\n        }\n        return await OneSignal.context.permissionManager.getNotificationPermission(OneSignal.config.safariWebId);\n    }\n    /**\n     * Notification permission reported by the browser.\n     *\n     * @param safariWebId The Safari web ID necessary to access the permission\n     * state on Legacy Safari on macOS.\n     */\n    async getNotificationPermission(safariWebId) {\n        if (Environment.useSafariLegacyPush()) {\n            return PermissionManager.getLegacySafariNotificationPermission(safariWebId);\n        }\n        return this.getW3cNotificationPermission();\n    }\n    /**\n     * Returns the Safari browser's notification permission as reported by the browser.\n     *\n     * @param safariWebId The Safari web ID necessary for Legacy Safari on macOS.\n     */\n    static getLegacySafariNotificationPermission(safariWebId) {\n        if (safariWebId)\n            return window.safari.pushNotification.permission(safariWebId)\n                .permission;\n        throw new InvalidArgumentError('safariWebId', InvalidArgumentReason.Empty);\n    }\n    /**\n     * Returns the notification permission as reported by the browser.\n     *   - Expect for legacy Safari on macOS.\n     */\n    getW3cNotificationPermission() {\n        return Notification.permission;\n    }\n}\n//# sourceMappingURL=PermissionManager.js.map","import { InvalidArgumentError, InvalidArgumentReason, } from '../errors/InvalidArgumentError';\n/**\n * Represents a normalized path.\n *\n * Paths spaces are trimmed.\n * Paths without file names will never contain trailing slashes, except for empty paths.\n */\nexport default class Path {\n    constructor(path) {\n        if (!path)\n            throw new InvalidArgumentError('path', InvalidArgumentReason.Empty);\n        this.path = path.trim();\n    }\n    getQueryString() {\n        // If there are no ? characters, return null\n        // If there are multiple ?, return the substring starting after the first ? all the way to the end\n        const indexOfDelimiter = this.path.indexOf('?');\n        if (indexOfDelimiter === -1) {\n            return null;\n        }\n        if (this.path.length > indexOfDelimiter) {\n            // Return the substring *after the first ? to the end\n            return this.path.substring(indexOfDelimiter + 1);\n        }\n        else {\n            // The last character is ?\n            return null;\n        }\n    }\n    getWithoutQueryString() {\n        return this.path.split(Path.QUERY_STRING)[0];\n    }\n    getFileName() {\n        var _a;\n        return (_a = this.getWithoutQueryString().split('\\\\').pop()) === null || _a === void 0 ? void 0 : _a.split('/').pop();\n    }\n    getFileNameWithQuery() {\n        var _a;\n        return (_a = this.path.split('\\\\').pop()) === null || _a === void 0 ? void 0 : _a.split('/').pop();\n    }\n    getFullPath() {\n        return this.path;\n    }\n    getPathWithoutFileName() {\n        const newPath = this.getWithoutQueryString();\n        const fileNameIndex = newPath.lastIndexOf(this.getFileName());\n        let pathWithoutFileName = newPath.substring(0, fileNameIndex);\n        pathWithoutFileName = pathWithoutFileName.replace(/[\\\\/]$/, '');\n        return pathWithoutFileName;\n    }\n}\nPath.QUERY_STRING = '?';\n//# sourceMappingURL=Path.js.map","import OneSignalError from './OneSignalError';\nexport class ServiceWorkerRegistrationError extends OneSignalError {\n    constructor(status, statusText) {\n        super(`Registration of a Service Worker failed.`);\n        this.status = status;\n        this.statusText = statusText;\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#\n         * extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, ServiceWorkerRegistrationError.prototype);\n    }\n}\nexport default ServiceWorkerRegistrationError;\n//# sourceMappingURL=ServiceWorkerRegistrationError.js.map","export default class Log {\n    static debug(...args) {\n        if (!!self.shouldLog) {\n            console.debug(...args);\n        }\n    }\n    static trace(...args) {\n        if (!!self.shouldLog) {\n            console.trace(...args);\n        }\n    }\n    static info(...args) {\n        if (!!self.shouldLog) {\n            console.info(...args);\n        }\n    }\n    static warn(...args) {\n        if (!!self.shouldLog) {\n            console.warn(...args);\n        }\n    }\n    static error(...args) {\n        if (!!self.shouldLog) {\n            console.error(...args);\n        }\n    }\n}\n//# sourceMappingURL=Log.js.map","import Log from '../../sw/libraries/Log';\nconst doNothing = () => {\n    Log.debug('Do nothing');\n};\nexport function cancelableTimeout(callback, delayInSeconds) {\n    const delayInMilliseconds = delayInSeconds * 1000;\n    let timerId;\n    let clearTimeoutHandle = undefined;\n    const promise = new Promise((resolve, reject) => {\n        let startedExecution = false;\n        timerId = self.setTimeout(async () => {\n            startedExecution = true;\n            try {\n                await callback();\n                resolve();\n            }\n            catch (e) {\n                Log.error('Failed to execute callback', e);\n                reject();\n            }\n        }, delayInMilliseconds);\n        clearTimeoutHandle = () => {\n            Log.debug('Cancel called');\n            self.clearTimeout(timerId);\n            if (!startedExecution) {\n                resolve();\n            }\n        };\n    });\n    if (!clearTimeoutHandle) {\n        Log.warn('clearTimeoutHandle was not assigned.');\n        return {\n            promise,\n            cancel: doNothing,\n        };\n    }\n    return {\n        promise,\n        cancel: clearTimeoutHandle,\n    };\n}\n//# sourceMappingURL=CancelableTimeout.js.map","import { OutcomeAttributionType, } from '../models/Outcomes';\nimport Database, { TABLE_OUTCOMES_NOTIFICATION_RECEIVED, } from '../services/Database';\nimport Log from '../libraries/Log';\nimport { Utils } from '../../shared/context/Utils';\nimport { logMethodCall, awaitOneSignalInitAndSupported } from '../utils/utils';\nconst SEND_OUTCOME = 'sendOutcome';\nconst SEND_UNIQUE_OUTCOME = 'sendUniqueOutcome';\nexport default class OutcomesHelper {\n    /**\n     * @param  {string} appId\n     * @param  {OutcomesConfig} config - refers specifically to outcomes config\n     * @param  {boolean} isUnique\n     * @param  {string} outcomeName\n     */\n    constructor(appId, config, outcomeName, isUnique) {\n        this.outcomeName = outcomeName;\n        this.config = config;\n        this.appId = appId;\n        this.isUnique = isUnique;\n    }\n    /**\n     * Returns `OutcomeAttribution` object which includes\n     *    1) attribution type\n     *    2) notification ids\n     *\n     * Note: this just looks at notifications that fall within the attribution window and\n     *       does not check if they have been previously attributed (used in both sendOutcome & sendUniqueOutcome)\n     * @returns Promise\n     */\n    async getAttribution() {\n        return await OutcomesHelper.getAttribution(this.config);\n    }\n    /**\n     * Performs logging of method call and returns whether Outcomes are supported\n     * @param  {boolean} isUnique\n     * @returns Promise\n     */\n    async beforeOutcomeSend() {\n        const outcomeMethodString = this.isUnique\n            ? SEND_UNIQUE_OUTCOME\n            : SEND_OUTCOME;\n        logMethodCall(outcomeMethodString, this.outcomeName);\n        if (!this.config) {\n            Log.debug('Outcomes feature not supported by main application yet.');\n            return false;\n        }\n        if (!this.outcomeName) {\n            Log.error('Outcome name is required');\n            return false;\n        }\n        await awaitOneSignalInitAndSupported();\n        const isSubscribed = await OneSignal.context.subscriptionManager.isPushNotificationsEnabled();\n        if (!isSubscribed) {\n            Log.warn('Reporting outcomes is supported only for subscribed users.');\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns array of notification ids outcome is currently attributed with\n     * @param  {string} outcomeName\n     * @returns Promise\n     */\n    async getAttributedNotifsByUniqueOutcomeName() {\n        const sentOutcomes = await Database.getAll('SentUniqueOutcome');\n        return sentOutcomes\n            .filter((o) => o.outcomeName === this.outcomeName)\n            .reduce((acc, curr) => {\n            const notificationIds = curr.notificationIds || [];\n            return [...acc, ...notificationIds];\n        }, []);\n    }\n    /**\n     * Returns array of new notifications that have never been attributed to the outcome\n     * @param  {string} outcomeName\n     * @param  {string[]} notificationIds\n     */\n    async getNotifsToAttributeWithUniqueOutcome(notificationIds) {\n        const previouslyAttributedArr = await this.getAttributedNotifsByUniqueOutcomeName();\n        return notificationIds.filter((id) => previouslyAttributedArr.indexOf(id) === -1);\n    }\n    shouldSendUnique(outcomeAttribution, notifArr) {\n        // we should only send if type is unattributed OR there are notifs to attribute\n        if (outcomeAttribution.type === OutcomeAttributionType.Unattributed) {\n            return true;\n        }\n        return notifArr.length > 0;\n    }\n    async saveSentUniqueOutcome(newNotificationIds) {\n        const outcomeName = this.outcomeName;\n        const existingSentOutcome = await Database.get('SentUniqueOutcome', outcomeName);\n        const currentSession = await Database.getCurrentSession();\n        const existingNotificationIds = !!existingSentOutcome\n            ? existingSentOutcome.notificationIds\n            : [];\n        const notificationIds = [...existingNotificationIds, ...newNotificationIds];\n        const timestamp = currentSession ? currentSession.startTimestamp : null;\n        await Database.put('SentUniqueOutcome', {\n            outcomeName,\n            notificationIds,\n            sentDuringSession: timestamp,\n        });\n    }\n    async wasSentDuringSession() {\n        const sentOutcome = await Database.get('SentUniqueOutcome', this.outcomeName);\n        if (!sentOutcome) {\n            return false;\n        }\n        const session = await Database.getCurrentSession();\n        const sessionExistsAndWasPreviouslySent = session && sentOutcome.sentDuringSession === session.startTimestamp;\n        const sessionWasClearedButWasPreviouslySent = !session && !!sentOutcome.sentDuringSession;\n        return (sessionExistsAndWasPreviouslySent || sessionWasClearedButWasPreviouslySent);\n    }\n    async send(outcomeProps) {\n        const { type, notificationIds, weight } = outcomeProps;\n        switch (type) {\n            case OutcomeAttributionType.Direct:\n                if (this.isUnique) {\n                    await this.saveSentUniqueOutcome(notificationIds);\n                }\n                await OneSignal.context.updateManager.sendOutcomeDirect(this.appId, notificationIds, this.outcomeName, weight);\n                return;\n            case OutcomeAttributionType.Indirect:\n                if (this.isUnique) {\n                    await this.saveSentUniqueOutcome(notificationIds);\n                }\n                await OneSignal.context.updateManager.sendOutcomeInfluenced(this.appId, notificationIds, this.outcomeName, weight);\n                return;\n            case OutcomeAttributionType.Unattributed:\n                if (this.isUnique) {\n                    if (await this.wasSentDuringSession()) {\n                        Log.warn(`(Unattributed) unique outcome was already sent during this session`);\n                        return;\n                    }\n                    await this.saveSentUniqueOutcome([]);\n                }\n                await OneSignal.context.updateManager.sendOutcomeUnattributed(this.appId, this.outcomeName, weight);\n                return;\n            default:\n                Log.warn('You are on a free plan. Please upgrade to use this functionality.');\n                return;\n        }\n    }\n    // statics\n    /**\n     * Static method: returns `OutcomeAttribution` object which includes\n     *    1) attribution type\n     *    2) notification ids\n     *\n     * Note: this just looks at notifications that fall within the attribution window and\n     *       does not check if they have been previously attributed (used in both sendOutcome & sendUniqueOutcome)\n     * @param  {OutcomesConfig} config\n     * @returns Promise\n     */\n    static async getAttribution(config) {\n        /**\n         * Flow:\n         * 1. check if the url was opened as a result of a notif;\n         * 2. if so, send an api call reporting direct notification outcome\n         *    (currently takes into account the match strategy selected in the app's settings);\n         * 3. else check all received notifs within timeframe from config;\n         * 4. send an api call reporting an influenced outcome for each matching notification\n         *    respecting the limit from config too;\n         * 5. if no influencing notification found, report unattributed outcome to the api.\n         */\n        /* direct notifications */\n        if (config.direct && config.direct.enabled) {\n            const clickedNotifications = await Database.getAllNotificationClickedForOutcomes();\n            if (clickedNotifications.length > 0) {\n                return {\n                    type: OutcomeAttributionType.Direct,\n                    notificationIds: [clickedNotifications[0].notificationId],\n                };\n            }\n        }\n        /* influencing notifications */\n        if (config.indirect && config.indirect.enabled) {\n            const timeframeMs = config.indirect.influencedTimePeriodMin * 60 * 1000;\n            const beginningOfTimeframe = new Date(new Date().getTime() - timeframeMs);\n            const maxTimestamp = beginningOfTimeframe.getTime();\n            const allReceivedNotification = await Database.getAllNotificationReceivedForOutcomes();\n            Log.debug(`\\tFound total of ${allReceivedNotification.length} received notifications`);\n            if (allReceivedNotification.length > 0) {\n                const max = config.indirect.influencedNotificationsLimit;\n                /**\n                 * To handle correctly the case when user got subscribed to a new app id\n                 * we check the appId on notifications to match the current app.\n                 */\n                const allReceivedNotificationSorted = Utils.sortArrayOfObjects(allReceivedNotification, (notif) => notif.timestamp, true, false);\n                const matchingNotificationIds = allReceivedNotificationSorted\n                    .filter((notif) => notif.timestamp >= maxTimestamp)\n                    .slice(0, max)\n                    .map((notif) => notif.notificationId);\n                Log.debug(`\\tTotal of ${matchingNotificationIds.length} received notifications are within reporting window.`);\n                // Deleting all unmatched received notifications\n                const notificationIdsToDelete = allReceivedNotificationSorted\n                    .filter((notif) => matchingNotificationIds.indexOf(notif.notificationId) === -1)\n                    .map((notif) => notif.notificationId);\n                notificationIdsToDelete.forEach((id) => Database.remove(TABLE_OUTCOMES_NOTIFICATION_RECEIVED, id));\n                Log.debug(`\\t${notificationIdsToDelete.length} received notifications will be deleted.`);\n                if (matchingNotificationIds.length > 0) {\n                    return {\n                        type: OutcomeAttributionType.Indirect,\n                        notificationIds: matchingNotificationIds,\n                    };\n                }\n            }\n        }\n        /* unattributed outcome report */\n        if (config.unattributed && config.unattributed.enabled) {\n            return {\n                type: OutcomeAttributionType.Unattributed,\n                notificationIds: [],\n            };\n        }\n        return {\n            type: OutcomeAttributionType.NotSupported,\n            notificationIds: [],\n        };\n    }\n}\n//# sourceMappingURL=OutcomesHelper.js.map","import Log from '../../sw/libraries/Log';\nimport { OneSignalUtils } from '../utils/OneSignalUtils';\nimport Database from '../services/Database';\nimport { cancelableTimeout, } from '../../sw/helpers/CancelableTimeout';\nimport Utils from '../context/Utils';\nimport OutcomesHelper from './OutcomesHelper';\nimport { SessionOrigin, initializeNewSession, SessionStatus, } from '../models/Session';\nimport OneSignalApiSW from '../api/OneSignalApiSW';\nexport default class ServiceWorkerHelper {\n    static getServiceWorkerHref(config, appId, sdkVersion) {\n        return ServiceWorkerHelper.appendServiceWorkerParams(config.workerPath.getFullPath(), appId, sdkVersion);\n    }\n    static appendServiceWorkerParams(workerFullPath, appId, sdkVersion) {\n        const fullPath = new URL(workerFullPath, OneSignalUtils.getBaseUrl()).href;\n        const appIdAsQueryParam = Utils.encodeHashAsUriComponent({ appId });\n        const sdkVersionAsQueryParam = Utils.encodeHashAsUriComponent({\n            sdkVersion,\n        });\n        return `${fullPath}?${appIdAsQueryParam}&${sdkVersionAsQueryParam}`;\n    }\n    static async upsertSession(appId, onesignalId, subscriptionId, sessionThresholdInSeconds, sendOnFocusEnabled, sessionOrigin, outcomesConfig) {\n        const existingSession = await Database.getCurrentSession();\n        if (!existingSession) {\n            const session = initializeNewSession({ appId });\n            // if there is a record about a clicked notification in our database, attribute session to it.\n            const clickedNotification = await Database.getLastNotificationClickedForOutcomes(appId);\n            if (clickedNotification) {\n                session.notificationId = clickedNotification.notificationId;\n            }\n            await Database.upsertSession(session);\n            await ServiceWorkerHelper.sendOnSessionCallIfNotPlayerCreate(appId, onesignalId, subscriptionId, sessionOrigin, session);\n            return;\n        }\n        if (existingSession.status === SessionStatus.Active) {\n            Log.debug('Session already active', existingSession);\n            return;\n        }\n        if (!existingSession.lastDeactivatedTimestamp) {\n            Log.debug('Session is in invalid state', existingSession);\n            // TODO: possibly recover by re-starting session if deviceId is present?\n            return;\n        }\n        const currentTimestamp = new Date().getTime();\n        const timeSinceLastDeactivatedInSeconds = ServiceWorkerHelper.timeInSecondsBetweenTimestamps(currentTimestamp, existingSession.lastDeactivatedTimestamp);\n        if (timeSinceLastDeactivatedInSeconds <= sessionThresholdInSeconds) {\n            existingSession.status = SessionStatus.Active;\n            existingSession.lastActivatedTimestamp = currentTimestamp;\n            existingSession.lastDeactivatedTimestamp = null;\n            await Database.upsertSession(existingSession);\n            return;\n        }\n        // If failed to report/clean-up last time, we can attempt to try again here.\n        // TODO: Possibly check that it's not unreasonably long.\n        // TODO: Or couple with periodic ping for better results.\n        await ServiceWorkerHelper.finalizeSession(appId, onesignalId, subscriptionId, existingSession, sendOnFocusEnabled, outcomesConfig);\n        const session = initializeNewSession({ appId });\n        await Database.upsertSession(session);\n        await ServiceWorkerHelper.sendOnSessionCallIfNotPlayerCreate(appId, onesignalId, subscriptionId, sessionOrigin, session);\n    }\n    static async deactivateSession(appId, onesignalId, subscriptionId, thresholdInSeconds, sendOnFocusEnabled, outcomesConfig) {\n        const existingSession = await Database.getCurrentSession();\n        if (!existingSession) {\n            Log.debug('No active session found. Cannot deactivate.');\n            return undefined;\n        }\n        const finalizeSession = () => ServiceWorkerHelper.finalizeSession(appId, onesignalId, subscriptionId, existingSession, sendOnFocusEnabled, outcomesConfig);\n        /**\n         * For 2 subsequent deactivate requests we need to make sure there is an active finalization timeout.\n         * Timer gets cleaned up before figuring out it's activate or deactivate.\n         * No update needed for the session, early return.\n         */\n        if (existingSession.status === SessionStatus.Inactive) {\n            return cancelableTimeout(finalizeSession, thresholdInSeconds);\n        }\n        /**\n         * Can only be active or expired at this point, but more statuses may come in in the future.\n         * For anything but active, logging a warning and doing early return.\n         */\n        if (existingSession.status !== SessionStatus.Active) {\n            Log.warn(`Session in invalid state ${existingSession.status}. Cannot deactivate.`);\n            return undefined;\n        }\n        const currentTimestamp = new Date().getTime();\n        const timeSinceLastActivatedInSeconds = ServiceWorkerHelper.timeInSecondsBetweenTimestamps(currentTimestamp, existingSession.lastActivatedTimestamp);\n        existingSession.lastDeactivatedTimestamp = currentTimestamp;\n        existingSession.accumulatedDuration += timeSinceLastActivatedInSeconds;\n        existingSession.status = SessionStatus.Inactive;\n        const cancelableFinalize = cancelableTimeout(finalizeSession, thresholdInSeconds);\n        await Database.upsertSession(existingSession);\n        return cancelableFinalize;\n    }\n    /**\n     * Updates session only if it isn't from the result of a user create,\n     * as it already initializes it with the first session.\n     */\n    static async sendOnSessionCallIfNotPlayerCreate(appId, onesignalId, subscriptionId, sessionOrigin, session) {\n        if (sessionOrigin === SessionOrigin.UserCreate) {\n            return;\n        }\n        Database.upsertSession(session);\n        Database.resetSentUniqueOutcomes();\n        // USER MODEL TO DO: handle potential 404 - user does not exist\n        await OneSignalApiSW.updateUserSession(appId, onesignalId, subscriptionId);\n    }\n    static async finalizeSession(appId, onesignalId, subscriptionId, session, sendOnFocusEnabled, outcomesConfig) {\n        Log.debug('Finalize session', `started: ${new Date(session.startTimestamp)}`, `duration: ${session.accumulatedDuration}s`);\n        if (sendOnFocusEnabled) {\n            Log.debug(`send on_focus reporting session duration -> ${session.accumulatedDuration}s`);\n            const attribution = await OutcomesHelper.getAttribution(outcomesConfig);\n            Log.debug('send on_focus with attribution', attribution);\n            await OneSignalApiSW.sendSessionDuration(appId, onesignalId, subscriptionId, session.accumulatedDuration, attribution);\n        }\n        await Promise.all([\n            Database.cleanupCurrentSession(),\n            Database.removeAllNotificationClickedForOutcomes(),\n        ]);\n        Log.debug('Finalize session finished', `started: ${new Date(session.startTimestamp)}`);\n    }\n    static timeInSecondsBetweenTimestamps(timestamp1, timestamp2) {\n        if (timestamp1 <= timestamp2) {\n            return 0;\n        }\n        return Math.floor((timestamp1 - timestamp2) / 1000);\n    }\n}\nexport var ServiceWorkerActiveState;\n(function (ServiceWorkerActiveState) {\n    /**\n     * OneSignalSDKWorker.js, or the equivalent custom file name, is active.\n     */\n    ServiceWorkerActiveState[\"OneSignalWorker\"] = \"OneSignal Worker\";\n    /**\n     * A service worker is active, but it is not OneSignalSDKWorker.js\n     * (or the equivalent custom file names as provided by user config).\n     */\n    ServiceWorkerActiveState[\"ThirdParty\"] = \"3rd Party\";\n    /**\n     * No service worker is installed.\n     */\n    ServiceWorkerActiveState[\"None\"] = \"None\";\n})(ServiceWorkerActiveState || (ServiceWorkerActiveState = {}));\n//# sourceMappingURL=ServiceWorkerHelper.js.map","export const SLIDEDOWN_CSS_CLASSES = {\n    allowButton: 'onesignal-slidedown-allow-button',\n    body: 'slidedown-body',\n    buttonIndicatorHolder: 'onesignal-button-indicator-holder',\n    cancelButton: 'onesignal-slidedown-cancel-button',\n    container: 'onesignal-slidedown-container',\n    dialog: 'onesignal-slidedown-dialog',\n    footer: 'slidedown-footer',\n    reset: 'onesignal-reset',\n    savingStateButton: 'onesignal-saving-state-button',\n    slideUp: 'slide-up',\n    slideDown: 'slide-down',\n    closeSlidedown: 'close-slidedown',\n    icon: 'slidedown-body-icon',\n    message: 'slidedown-body-message',\n    defaultIcon: 'default-icon',\n    loadingContainer: 'onesignal-loading-container',\n    clearfix: 'clearfix',\n};\nexport const TOAST_CLASSES = {\n    toastText: 'onesignal-toast-text',\n};\nexport const TOAST_IDS = {\n    toastText: 'onesignal-toast-text',\n};\nexport const SLIDEDOWN_CSS_IDS = {\n    allowButton: 'onesignal-slidedown-allow-button',\n    body: 'slidedown-body',\n    buttonIndicatorHolder: 'onesignal-button-indicator-holder',\n    cancelButton: 'onesignal-slidedown-cancel-button',\n    container: 'onesignal-slidedown-container',\n    dialog: 'onesignal-slidedown-dialog',\n    footer: 'slidedown-footer',\n    normalSlidedown: 'normal-slidedown',\n    loadingContainer: 'onesignal-loading-container',\n};\nexport const SLIDEDOWN_BUTTON_CLASSES = {\n    alignRight: 'align-right',\n    primary: 'primary',\n    secondary: 'secondary',\n    slidedownButton: 'slidedown-button',\n};\nexport const TAGGING_CONTAINER_CSS_CLASSES = {\n    categoryLabelInput: 'onesignal-category-label-input',\n    categoryLabelText: 'onesignal-category-label-text',\n    categoryLabel: 'onesignal-category-label',\n    checkmark: 'onesignal-checkmark',\n    taggingContainer: 'tagging-container',\n    taggingContainerCol: 'tagging-container-col',\n    loadingMessage: 'onesignal-loading-message',\n};\nexport const TAGGING_CONTAINER_CSS_IDS = {\n    taggingContainer: 'tagging-container',\n};\nexport const DEFAULT_ICON = `data:image/svg+xml,%3Csvg fill='none' xmlns='http://www.w3.org/2000/svg'` +\n    ` viewBox='0 0 40 40'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath fill-rule='evenodd'` +\n    ` clip-rule='evenodd' d='M33.232 28.434a2.5 2.5 0 001.768.733 1.667 1.667 0 010 ` +\n    `3.333H5a1.667 1.667 0 110-3.333 2.5 2.5 0 002.5-2.5v-8.104A13.262 13.262 0 0118.333` +\n    ` 5.122V1.667a1.666 1.666 0 113.334 0v3.455A13.262 13.262 0 0132.5 18.563v8.104a2.5` +\n    ` 2.5 0 00.732 1.767zM16.273 35h7.454a.413.413 0 01.413.37 4.167 4.167 0 11-8.28 0` +\n    ` .417.417 0 01.413-.37z' fill='%23BDC4CB'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath` +\n    ` id='clip0'%3E%3Cpath fill='%23fff' d='M0 0h40v40H0z'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E`;\nexport const DANGER_ICON = `data:image/svg+xml;charset=UTF-8,%3csvg width='16' height='16' view` +\n    `Box='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M7.98775 -0.001144` +\n    `06C5.85015 0.0338508 3.81219 0.908665 2.31442 2.43419C1.565 3.18031 0.973715 4.06987 0.575897 ` +\n    `5.04969C0.17808 6.02952 -0.0180997 7.07949 -0.000914196 8.13686C-0.00214385 9.17005 0.200528 1` +\n    `0.1933 0.595487 11.148C0.990446 12.1028 1.56993 12.9702 2.30072 13.7005C3.03151 14.4309 3.8992` +\n    `5 15.0098 4.85421 15.4042C5.80916 15.7986 6.83256 16.0007 7.86575 15.9989H8.00842C10.1467 15.9` +\n    `769 12.1889 15.1075 13.6869 13.5816C15.185 12.0557 16.0165 9.99781 15.9991 7.85952C16.0015 6.8` +\n    `138 15.7949 5.77814 15.3913 4.81345C14.9876 3.84876 14.3952 2.97451 13.6488 2.24213C12.9023 1.` +\n    `50974 12.017 0.933994 11.0448 0.548751C10.0726 0.163508 9.03324 -0.0234551 7.98775 -0.00114406` +\n    `ZM6.99909 11.0269C6.99428 10.8961 7.01558 10.7658 7.06175 10.6434C7.10792 10.521 7.17803 10.40` +\n    `91 7.26797 10.3141C7.35792 10.2191 7.4659 10.143 7.58559 10.0903C7.70529 10.0375 7.8343 10.009` +\n    `2 7.96509 10.0069H7.98309C8.24616 10.0074 8.49882 10.1097 8.6881 10.2924C8.87739 10.4751 8.988` +\n    `6 10.724 8.99842 10.9869C9.00331 11.1176 8.98207 11.248 8.93594 11.3704C8.8898 11.4928 8.8197 ` +\n    `11.6048 8.72974 11.6998C8.63978 11.7948 8.53176 11.8709 8.41202 11.9236C8.29229 11.9763 8.1632` +\n    `3 12.0046 8.03242 12.0069H8.01442C7.75145 12.006 7.49897 11.9036 7.30976 11.721C7.12054 11.538` +\n    `3 7.00923 11.2896 6.99909 11.0269ZM7.33242 8.33219V4.33219C7.33242 4.15538 7.40266 3.98581 7.5` +\n    `2768 3.86079C7.65271 3.73576 7.82227 3.66552 7.99909 3.66552C8.1759 3.66552 8.34547 3.73576 8.` +\n    `47049 3.86079C8.59551 3.98581 8.66575 4.15538 8.66575 4.33219V8.33219C8.66575 8.509 8.59551 8.` +\n    `67857 8.47049 8.80359C8.34547 8.92862 8.1759 8.99886 7.99909 8.99886C7.82227 8.99886 7.65271 8` +\n    `.92862 7.52768 8.80359C7.40266 8.67857 7.33242 8.509 7.33242 8.33219Z' fill='%23E54B4D'/%3e%3c/svg%3e`;\nexport const COLORS = {\n    greyLoadingIndicator: '#95A1AC',\n    whiteLoadingIndicator: '#FFFFFF',\n};\nexport const TAGGING_CONTAINER_STRINGS = {\n    fetchingPreferences: 'Fetching your preferences',\n};\nexport const CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES = {\n    channelCaptureContainer: 'channel-capture-container',\n    inputWithValidationElement: 'input-with-validation-element',\n    onesignalErrorInput: 'onesignal-error-input',\n    onesignalSmsInput: 'iti-onesignal-sms-input',\n    onesignalEmailInput: 'onesignal-email-input',\n    onesignalValidationElementHidden: 'onesignal-validation-element-hidden',\n    onesignalValidationElement: 'onesignal-validation-element',\n};\nexport const CHANNEL_CAPTURE_CONTAINER_CSS_IDS = {\n    channelCaptureContainer: 'channel-capture-container',\n    smsInputWithValidationElement: 'sms-input-with-validation-element',\n    emailInputWithValidationElement: 'email-input-with-validation-element',\n    onesignalSmsInput: 'iti-onesignal-sms-input',\n    onesignalEmailInput: 'onesignal-email-input',\n    onesignalSmsValidationElement: 'onesignal-sms-validation-element',\n    onesignalEmailValidationElement: 'onesignal-email-validation-element',\n};\nconst STATE = {\n    subscribed: 'state-subscribed',\n    unsubscribed: 'state-unsubscribed',\n};\nexport const CUSTOM_LINK_CSS_CLASSES = {\n    containerClass: 'onesignal-customlink-container',\n    subscribeClass: 'onesignal-customlink-subscribe',\n    explanationClass: 'onesignal-customlink-explanation',\n    resetClass: 'onesignal-reset',\n    hide: 'hide',\n    state: STATE,\n};\nexport const CUSTOM_LINK_CSS_SELECTORS = {\n    containerSelector: `.${CUSTOM_LINK_CSS_CLASSES.containerClass}`,\n    subscribeSelector: `.${CUSTOM_LINK_CSS_CLASSES.subscribeClass}`,\n    explanationSelector: `.${CUSTOM_LINK_CSS_CLASSES.explanationClass}`,\n};\n//# sourceMappingURL=constants.js.map","import { CUSTOM_LINK_CSS_CLASSES, CUSTOM_LINK_CSS_SELECTORS, } from '../slidedown/constants';\nimport { addCssClass } from '../utils/utils';\nimport Log from '../libraries/Log';\nexport class CustomLinkManager {\n    constructor(config) {\n        this.config = config;\n    }\n    async initialize() {\n        var _a, _b;\n        if (!((_a = this.config) === null || _a === void 0 ? void 0 : _a.enabled)) {\n            return;\n        }\n        if (!(await this.loadSdkStyles())) {\n            return;\n        }\n        Log.info('OneSignal: initializing customlink');\n        const isPushEnabled = await OneSignal.context.subscriptionManager.isPushNotificationsEnabled();\n        if (!((_b = this.config) === null || _b === void 0 ? void 0 : _b.unsubscribeEnabled) && isPushEnabled) {\n            this.hideCustomLinkContainers();\n            return;\n        }\n        // traditional for-loop required here to avoid layout shift\n        for (let i = 0; i < this.customlinkContainerElements.length; i++) {\n            await this.injectMarkup(this.customlinkContainerElements[i]);\n        }\n    }\n    async injectMarkup(element) {\n        // clear contents\n        element.innerHTML = '';\n        await this.mountExplanationNode(element);\n        await this.mountSubscriptionNode(element);\n    }\n    async mountExplanationNode(element) {\n        var _a;\n        if (!((_a = this.config) === null || _a === void 0 ? void 0 : _a.text)) {\n            Log.error(\"CustomLink: required property 'text' is missing in the config\");\n            return;\n        }\n        if (this.config.text.explanation) {\n            const explanation = document.createElement('p');\n            explanation.textContent = this.config.text.explanation;\n            addCssClass(explanation, CUSTOM_LINK_CSS_CLASSES.resetClass);\n            addCssClass(explanation, CUSTOM_LINK_CSS_CLASSES.explanationClass);\n            if (this.config.size) {\n                addCssClass(explanation, this.config.size);\n            }\n            if (await OneSignal.context.subscriptionManager.isPushNotificationsEnabled()) {\n                addCssClass(explanation, CUSTOM_LINK_CSS_CLASSES.state.subscribed);\n            }\n            else {\n                addCssClass(explanation, CUSTOM_LINK_CSS_CLASSES.state.unsubscribed);\n            }\n            element.appendChild(explanation);\n        }\n    }\n    async mountSubscriptionNode(element) {\n        var _a;\n        if (!((_a = this.config) === null || _a === void 0 ? void 0 : _a.text)) {\n            Log.error(\"CustomLink: required property 'text' is missing in the config\");\n            return;\n        }\n        if (this.config.text.subscribe) {\n            const subscribeButton = document.createElement('button');\n            addCssClass(subscribeButton, CUSTOM_LINK_CSS_CLASSES.resetClass);\n            addCssClass(subscribeButton, CUSTOM_LINK_CSS_CLASSES.subscribeClass);\n            if (this.config.size) {\n                addCssClass(subscribeButton, this.config.size);\n            }\n            if (this.config.style) {\n                addCssClass(subscribeButton, this.config.style);\n            }\n            if (await OneSignal.context.subscriptionManager.isPushNotificationsEnabled()) {\n                addCssClass(subscribeButton, CUSTOM_LINK_CSS_CLASSES.state.subscribed);\n            }\n            else {\n                addCssClass(subscribeButton, CUSTOM_LINK_CSS_CLASSES.state.unsubscribed);\n            }\n            this.setCustomColors(subscribeButton);\n            await this.setTextFromPushStatus(subscribeButton);\n            subscribeButton.addEventListener('click', async () => {\n                Log.info('CustomLink: subscribe clicked');\n                await this.handleClick(subscribeButton);\n            });\n            // Adds type=\"button\" to the Custom Link Button.\n            // This prevents this button submitting if included in a form.\n            subscribeButton.setAttribute('type', 'button');\n            element.appendChild(subscribeButton);\n        }\n    }\n    async loadSdkStyles() {\n        const sdkStylesLoadResult = await OneSignal.context.dynamicResourceLoader.loadSdkStylesheet();\n        if (sdkStylesLoadResult !== 0 /* ResourceLoadState.Loaded */) {\n            Log.debug('Not initializing custom link button because styles failed to load.');\n            return false;\n        }\n        return true;\n    }\n    hideElement(element) {\n        addCssClass(element, CUSTOM_LINK_CSS_CLASSES.hide);\n    }\n    /**\n     * Used for hiding elements if \"Allow unsubscribe\" is on\n     * @returns void\n     */\n    hideCustomLinkContainers() {\n        this.customlinkContainerElements.forEach((element) => {\n            this.hideElement(element);\n        });\n    }\n    async handleClick(element) {\n        var _a;\n        if (OneSignal.User.PushSubscription.optedIn) {\n            await OneSignal.User.PushSubscription.optOut();\n            await this.setTextFromPushStatus(element);\n        }\n        else {\n            await OneSignal.User.PushSubscription.optIn();\n            // once subscribed, prevent unsubscribe by hiding customlinks\n            if (!((_a = this.config) === null || _a === void 0 ? void 0 : _a.unsubscribeEnabled)) {\n                this.hideCustomLinkContainers();\n            }\n            return;\n        }\n    }\n    async setTextFromPushStatus(element) {\n        var _a, _b, _c, _d;\n        if ((_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.text) === null || _b === void 0 ? void 0 : _b.subscribe) {\n            if (!(await OneSignal.context.subscriptionManager.isPushNotificationsEnabled())) {\n                element.textContent = this.config.text.subscribe;\n            }\n        }\n        if ((_d = (_c = this.config) === null || _c === void 0 ? void 0 : _c.text) === null || _d === void 0 ? void 0 : _d.unsubscribe) {\n            if (await OneSignal.context.subscriptionManager.isPushNotificationsEnabled()) {\n                element.textContent = this.config.text.unsubscribe;\n            }\n        }\n    }\n    setCustomColors(element) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (!((_a = this.config) === null || _a === void 0 ? void 0 : _a.color) || !this.config.color.text) {\n            return;\n        }\n        if (((_b = this.config) === null || _b === void 0 ? void 0 : _b.style) === 'button' && ((_c = this.config) === null || _c === void 0 ? void 0 : _c.color.button)) {\n            element.style.backgroundColor = (_d = this.config) === null || _d === void 0 ? void 0 : _d.color.button;\n            element.style.color = (_e = this.config) === null || _e === void 0 ? void 0 : _e.color.text;\n        }\n        else if (((_f = this.config) === null || _f === void 0 ? void 0 : _f.style) === 'link') {\n            element.style.color = (_g = this.config) === null || _g === void 0 ? void 0 : _g.color.text;\n        }\n    }\n    get customlinkContainerElements() {\n        const containers = document.querySelectorAll(CUSTOM_LINK_CSS_SELECTORS.containerSelector);\n        return Array.prototype.slice.call(containers);\n    }\n}\n//# sourceMappingURL=CustomLinkManager.js.map","/*\n LimitStore.put('colorado', 'rocky');\n [\"rocky\"]\n LimitStore.put('colorado', 'mountain');\n [\"rocky\", \"mountain\"]\n LimitStore.put('colorado', 'national');\n [\"mountain\", \"national\"]\n LimitStore.put('colorado', 'park');\n [\"national\", \"park\"]\n */\nexport default class LimitStore {\n    static put(key, value) {\n        if (LimitStore.store[key] === undefined) {\n            LimitStore.store[key] = [null, null];\n        }\n        LimitStore.store[key].push(value);\n        if (LimitStore.store[key].length == LimitStore.LIMIT + 1) {\n            LimitStore.store[key].shift();\n        }\n        return LimitStore.store[key];\n    }\n    static get(key) {\n        if (LimitStore.store[key] === undefined) {\n            LimitStore.store[key] = [null, null];\n        }\n        return LimitStore.store[key];\n    }\n    static getFirst(key) {\n        return LimitStore.get(key)[0];\n    }\n    static getLast(key) {\n        return LimitStore.get(key)[1];\n    }\n    static remove(key) {\n        delete LimitStore.store[key];\n    }\n    static isEmpty(key) {\n        const values = LimitStore.get(key);\n        return values[0] === null && values[1] === null;\n    }\n}\nLimitStore.store = {};\nLimitStore.LIMIT = 2;\n//# sourceMappingURL=LimitStore.js.map","export class BrowserUtils {\n    // Decodes HTML encoded characters (like &amp;) into their displayed value.\n    // Example: \"&lt;b&gt;test&lt;/b&gt\" becomes \"<b>test</b>\"\n    static decodeHtmlEntities(text) {\n        if (typeof DOMParser === 'undefined') {\n            return text;\n        }\n        const doc = new DOMParser().parseFromString(text, 'text/html');\n        return doc.documentElement.textContent || '';\n    }\n}\nexport default BrowserUtils;\n//# sourceMappingURL=BrowserUtils.js.map","export var PermissionPromptType;\n(function (PermissionPromptType) {\n    /**\n     * The \"main\" browser native permission request dialog when prompting for local or push notification permissions.\n     */\n    PermissionPromptType[PermissionPromptType[\"HttpsPermissionRequest\"] = 'HTTPS permission request'] = \"HttpsPermissionRequest\";\n    /**\n     * The \"sliding down\" prompt.\n     */\n    PermissionPromptType[PermissionPromptType[\"SlidedownPermissionMessage\"] = 'slidedown permission message'] = \"SlidedownPermissionMessage\";\n    /**\n     * The \"notify button\".\n     */\n    PermissionPromptType[PermissionPromptType[\"SubscriptionBell\"] = 'subscription bell'] = \"SubscriptionBell\";\n})(PermissionPromptType || (PermissionPromptType = {}));\n//# sourceMappingURL=PermissionPromptType.js.map","import { PermissionPromptType } from '../models/PermissionPromptType';\nimport OneSignalError from './OneSignalError';\nexport var InvalidStateReason;\n(function (InvalidStateReason) {\n    InvalidStateReason[InvalidStateReason[\"MissingAppId\"] = 0] = \"MissingAppId\";\n    InvalidStateReason[InvalidStateReason[\"RedundantPermissionMessage\"] = 1] = \"RedundantPermissionMessage\";\n    InvalidStateReason[InvalidStateReason[\"PushPermissionAlreadyGranted\"] = 2] = \"PushPermissionAlreadyGranted\";\n    InvalidStateReason[InvalidStateReason[\"UnsupportedEnvironment\"] = 3] = \"UnsupportedEnvironment\";\n    InvalidStateReason[InvalidStateReason[\"MissingDomElement\"] = 4] = \"MissingDomElement\";\n    InvalidStateReason[InvalidStateReason[\"ServiceWorkerNotActivated\"] = 5] = \"ServiceWorkerNotActivated\";\n})(InvalidStateReason || (InvalidStateReason = {}));\nexport class InvalidStateError extends OneSignalError {\n    constructor(reason, extra) {\n        let errorMessage;\n        switch (reason) {\n            case InvalidStateReason.MissingAppId:\n                errorMessage = `Missing required app ID.`;\n                break;\n            case InvalidStateReason.RedundantPermissionMessage: {\n                let extraInfo = '';\n                if (extra && extra.permissionPromptType)\n                    extraInfo = `(${PermissionPromptType[extra.permissionPromptType]})`;\n                errorMessage = `Another permission message ${extraInfo} is being displayed.`;\n                break;\n            }\n            case InvalidStateReason.PushPermissionAlreadyGranted:\n                errorMessage = `Push permission has already been granted.`;\n                break;\n            case InvalidStateReason.UnsupportedEnvironment:\n                errorMessage = `The current environment does not support this operation.`;\n                break;\n            case InvalidStateReason.ServiceWorkerNotActivated:\n                errorMessage = `The service worker must be activated first.`;\n                break;\n        }\n        super(errorMessage);\n        this.description = InvalidStateReason[reason];\n        this.reason = reason;\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n         * #extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, InvalidStateError.prototype);\n    }\n}\n//# sourceMappingURL=InvalidStateError.js.map","import OneSignalError from './OneSignalError';\nexport var NotSubscribedReason;\n(function (NotSubscribedReason) {\n    NotSubscribedReason[NotSubscribedReason[\"Unknown\"] = 0] = \"Unknown\";\n    NotSubscribedReason[NotSubscribedReason[\"NoDeviceId\"] = 1] = \"NoDeviceId\";\n    NotSubscribedReason[NotSubscribedReason[\"NoEmailSet\"] = 2] = \"NoEmailSet\";\n    NotSubscribedReason[NotSubscribedReason[\"NoSMSSet\"] = 3] = \"NoSMSSet\";\n    NotSubscribedReason[NotSubscribedReason[\"OptedOut\"] = 4] = \"OptedOut\";\n})(NotSubscribedReason || (NotSubscribedReason = {}));\nexport class NotSubscribedError extends OneSignalError {\n    constructor(reason) {\n        let errorMessage;\n        switch (reason) {\n            case NotSubscribedReason.Unknown || NotSubscribedReason.NoDeviceId:\n                errorMessage =\n                    'This operation can only be performed after the user is subscribed.';\n                break;\n            case NotSubscribedReason.NoEmailSet:\n                errorMessage = 'No email is currently set.';\n                break;\n            case NotSubscribedReason.NoSMSSet:\n                errorMessage = 'No sms is currently set.';\n                break;\n            case NotSubscribedReason.OptedOut:\n                errorMessage =\n                    `The user has manually opted out of receiving of notifications. ` +\n                        `This operation can only be performed after the user is fully resubscribed.`;\n                break;\n        }\n        super(errorMessage);\n        this.reason = NotSubscribedReason[reason];\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n         * #extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, NotSubscribedError.prototype);\n    }\n}\n//# sourceMappingURL=NotSubscribedError.js.map","export var CoreChangeType;\n(function (CoreChangeType) {\n    CoreChangeType[\"Add\"] = \"add\";\n    CoreChangeType[\"Remove\"] = \"remove\";\n    CoreChangeType[\"Update\"] = \"update\";\n    CoreChangeType[\"Hydrate\"] = \"hydrate\";\n})(CoreChangeType || (CoreChangeType = {}));\n//# sourceMappingURL=CoreChangeType.js.map","export class ValidatorUtils {\n    static isValidUrl(url, options) {\n        if (options && options.allowNull && url === null)\n            return true;\n        else if (options &&\n            options.allowEmpty &&\n            (url === null || url === undefined))\n            return true;\n        else {\n            try {\n                const parsedUrl = new URL(url);\n                if (options && options.requireHttps) {\n                    return parsedUrl.protocol === 'https:';\n                }\n                else\n                    return true;\n            }\n            catch (e) {\n                return false;\n            }\n        }\n    }\n    static isValidBoolean(bool, options) {\n        if (options && options.allowNull && bool === null)\n            return true;\n        else\n            return bool === true || bool === false;\n    }\n    static isValidArray(array, options) {\n        if (options && options.allowNull && array === null)\n            return true;\n        else if (options &&\n            options.allowEmpty &&\n            (array === null || array === undefined))\n            return true;\n        else\n            return array instanceof Array;\n    }\n}\n//# sourceMappingURL=ValidatorUtils.js.map","import { InvalidStateError, InvalidStateReason, } from '../errors/InvalidStateError';\nimport SdkEnvironment from '../managers/SdkEnvironment';\nimport Log from '../libraries/Log';\nimport Utils from '../context/Utils';\nimport Database from '../services/Database';\nimport { PermissionUtils } from '../utils/PermissionUtils';\nimport Environment from './Environment';\nimport { getPlatformNotificationIcon, logMethodCall } from '../utils/utils';\nimport { NotSubscribedError, NotSubscribedReason, } from '../errors/NotSubscribedError';\nimport { InvalidArgumentError, InvalidArgumentReason, } from '../errors/InvalidArgumentError';\nimport { ValidatorUtils } from '../../page/utils/ValidatorUtils';\nexport default class MainHelper {\n    static async showLocalNotification(title, message, url, icon, data, buttons) {\n        logMethodCall('MainHelper:showLocalNotification: ', title, message, url, icon, data, buttons);\n        const appConfig = await Database.getAppConfig();\n        if (!appConfig.appId)\n            throw new InvalidStateError(InvalidStateReason.MissingAppId);\n        if (!OneSignal.Notifications.permission)\n            throw new NotSubscribedError(NotSubscribedReason.NoDeviceId);\n        if (!ValidatorUtils.isValidUrl(url))\n            throw new InvalidArgumentError('url', InvalidArgumentReason.Malformed);\n        if (!ValidatorUtils.isValidUrl(icon, { allowEmpty: true, requireHttps: true }))\n            throw new InvalidArgumentError('icon', InvalidArgumentReason.Malformed);\n        if (!icon) {\n            // get default icon\n            const icons = await MainHelper.getNotificationIcons();\n            icon = getPlatformNotificationIcon(icons);\n        }\n        const convertButtonsToNotificationActionType = (buttons) => {\n            const convertedButtons = [];\n            for (let i = 0; i < buttons.length; i++) {\n                const button = buttons[i];\n                convertedButtons.push({\n                    action: button.id,\n                    title: button.text,\n                    icon: button.icon,\n                    url: button.url,\n                });\n            }\n            return convertedButtons;\n        };\n        const dataPayload = {\n            data,\n            launchURL: url,\n            buttons: buttons\n                ? convertButtonsToNotificationActionType(buttons)\n                : undefined,\n        };\n        OneSignal.context.serviceWorkerManager\n            .getRegistration()\n            .then(async (registration) => {\n            if (!registration) {\n                Log.error('Service worker registration not available.');\n                return;\n            }\n            const options = {\n                body: message,\n                data: dataPayload,\n                icon: icon,\n                actions: buttons\n                    ? convertButtonsToNotificationActionType(buttons)\n                    : [],\n            };\n            registration.showNotification(title, options);\n        });\n    }\n    static async checkAndTriggerNotificationPermissionChanged() {\n        const previousPermission = await Database.get('Options', 'notificationPermission');\n        const currentPermission = await OneSignal.context.permissionManager.getPermissionStatus();\n        if (previousPermission !== currentPermission) {\n            await PermissionUtils.triggerNotificationPermissionChanged();\n            await Database.put('Options', {\n                key: 'notificationPermission',\n                value: currentPermission,\n            });\n        }\n    }\n    static async getNotificationIcons() {\n        const appId = await MainHelper.getAppId();\n        if (!appId) {\n            throw new InvalidStateError(InvalidStateReason.MissingAppId);\n        }\n        const url = `${SdkEnvironment.getOneSignalApiUrl().toString()}/apps/${appId}/icon`;\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.errors) {\n            Log.error(`API call ${url}`, 'failed with:', data.errors);\n            throw new Error('Failed to get notification icons.');\n        }\n        return data;\n    }\n    static getSlidedownOptions(promptOptions) {\n        return Utils.getValueOrDefault(promptOptions.slidedown, { prompts: [] });\n    }\n    static getFullscreenPermissionMessageOptions(promptOptions) {\n        if (!promptOptions) {\n            return null;\n        }\n        if (!promptOptions.fullscreen) {\n            return promptOptions;\n        }\n        return {\n            autoAcceptTitle: promptOptions.fullscreen.autoAcceptTitle,\n            actionMessage: promptOptions.fullscreen.actionMessage,\n            exampleNotificationTitleDesktop: promptOptions.fullscreen.title,\n            exampleNotificationTitleMobile: promptOptions.fullscreen.title,\n            exampleNotificationMessageDesktop: promptOptions.fullscreen.message,\n            exampleNotificationMessageMobile: promptOptions.fullscreen.message,\n            exampleNotificationCaption: promptOptions.fullscreen.caption,\n            acceptButton: promptOptions.fullscreen.acceptButton,\n            cancelButton: promptOptions.fullscreen.cancelButton,\n        };\n    }\n    static getPromptOptionsQueryString() {\n        const promptOptions = MainHelper.getFullscreenPermissionMessageOptions(OneSignal.config.userConfig.promptOptions);\n        let promptOptionsStr = '';\n        if (promptOptions) {\n            const hash = MainHelper.getPromptOptionsPostHash();\n            for (const key of Object.keys(hash)) {\n                const value = hash[key];\n                promptOptionsStr += '&' + key + '=' + value;\n            }\n        }\n        return promptOptionsStr;\n    }\n    static getPromptOptionsPostHash() {\n        const promptOptions = MainHelper.getFullscreenPermissionMessageOptions(OneSignal.config.userConfig.promptOptions);\n        const hash = {};\n        if (promptOptions) {\n            const legacyParams = {\n                exampleNotificationTitleDesktop: 'exampleNotificationTitle',\n                exampleNotificationMessageDesktop: 'exampleNotificationMessage',\n                exampleNotificationTitleMobile: 'exampleNotificationTitle',\n                exampleNotificationMessageMobile: 'exampleNotificationMessage',\n            };\n            for (const legacyParamKey of Object.keys(legacyParams)) {\n                const legacyParamValue = legacyParams[legacyParamKey];\n                if (promptOptions[legacyParamKey]) {\n                    promptOptions[legacyParamValue] = promptOptions[legacyParamKey];\n                }\n            }\n            const allowedPromptOptions = [\n                'autoAcceptTitle',\n                'siteName',\n                'autoAcceptTitle',\n                'subscribeText',\n                'showGraphic',\n                'actionMessage',\n                'exampleNotificationTitle',\n                'exampleNotificationMessage',\n                'exampleNotificationCaption',\n                'acceptButton',\n                'cancelButton',\n                'timeout',\n            ];\n            for (let i = 0; i < allowedPromptOptions.length; i++) {\n                const key = allowedPromptOptions[i];\n                const value = promptOptions[key];\n                const encoded_value = encodeURIComponent(value);\n                if (value || value === false || value === '') {\n                    hash[key] = encoded_value;\n                }\n            }\n        }\n        return hash;\n    }\n    static async getAppId() {\n        if (OneSignal.config.appId) {\n            return Promise.resolve(OneSignal.config.appId);\n        }\n        else {\n            const appId = await Database.get('Ids', 'appId');\n            return appId;\n        }\n    }\n    static async getDeviceId() {\n        const subscription = await OneSignal.database.getSubscription();\n        return subscription.deviceId || undefined;\n    }\n    // TO DO: unit test\n    static async getCurrentPushToken() {\n        var _a, _b;\n        if (Environment.useSafariLegacyPush()) {\n            const safariToken = (_b = (_a = window.safari) === null || _a === void 0 ? void 0 : _a.pushNotification) === null || _b === void 0 ? void 0 : _b.permission(OneSignal.config.safariWebId).deviceToken;\n            return (safariToken === null || safariToken === void 0 ? void 0 : safariToken.toLowerCase()) || undefined;\n        }\n        const registration = await OneSignal.context.serviceWorkerManager.getRegistration();\n        if (!registration) {\n            return undefined;\n        }\n        const subscription = await registration.pushManager.getSubscription();\n        return subscription === null || subscription === void 0 ? void 0 : subscription.endpoint;\n    }\n}\n//# sourceMappingURL=MainHelper.js.map","export class OSModelUpdatedArgs {\n    constructor(model, property, oldValue, newValue) {\n        this.model = model;\n        this.property = property;\n        this.oldValue = oldValue;\n        this.newValue = newValue;\n    }\n}\n//# sourceMappingURL=OSModelUpdatedArgs.js.map","export default class Subscribable {\n    constructor() {\n        this.subscribers = new Set();\n    }\n    /**\n     * Subscribe to the message stream.\n     * @param  {(msg:MessageType)=>void} callback\n     */\n    subscribe(callback) {\n        this.subscribers.add(callback);\n        return () => this.subscribers.delete(callback);\n    }\n    /**\n     * Publish a message to the message stream.\n     * @param msg The message to publish\n     */\n    broadcast(msg) {\n        this.subscribers.forEach((callback) => {\n            callback(msg);\n        });\n    }\n}\n//# sourceMappingURL=Subscribable.js.map","import { CoreChangeType } from './CoreChangeType';\nexport class ModelStoreAdded {\n    constructor(modelId, payload) {\n        this.modelId = modelId;\n        this.payload = payload;\n        this.type = CoreChangeType.Add;\n    }\n}\nexport class ModelStoreRemoved {\n    constructor(modelId, payload) {\n        this.modelId = modelId;\n        this.payload = payload;\n        this.type = CoreChangeType.Remove;\n    }\n}\nexport class ModelStoreUpdated {\n    constructor(modelId, payload) {\n        this.modelId = modelId;\n        this.payload = payload;\n        this.type = CoreChangeType.Update;\n    }\n}\nexport class ModelStoreHydrated {\n    constructor(modelId, payload) {\n        this.modelId = modelId;\n        this.payload = payload;\n        this.type = CoreChangeType.Hydrate;\n    }\n}\n//# sourceMappingURL=ModelStoreChange.js.map","import { __rest } from \"tslib\";\nimport { OSModelUpdatedArgs } from './OSModelUpdatedArgs';\nimport Subscribable from '../Subscribable';\nimport { ModelStoreHydrated, ModelStoreUpdated, } from '../models/ModelStoreChange';\nimport { logMethodCall } from '../../shared/utils/utils';\nexport class OSModel extends Subscribable {\n    constructor(modelName, data, modelId) {\n        super();\n        this.modelName = modelName;\n        this.modelId = modelId !== null && modelId !== void 0 ? modelId : Math.random().toString(36).substring(2);\n        this.modelName = modelName;\n        this.data = data;\n        this.onesignalId = undefined;\n        this.externalId = undefined;\n        this.awaitOneSignalIdAvailable = new Promise((resolve) => {\n            this.onesignalIdAvailableCallback = resolve;\n        });\n    }\n    /**\n     * Sets the class-level onesignalId property.\n     * IMPORTANT: this function does not update the model's `data` property.\n     * @param onesignalId - The OneSignal ID to set.\n     */\n    setOneSignalId(onesignalId) {\n        var _a;\n        logMethodCall('setOneSignalId', { onesignalId });\n        this.onesignalId = onesignalId;\n        if (onesignalId) {\n            (_a = this.onesignalIdAvailableCallback) === null || _a === void 0 ? void 0 : _a.call(this, onesignalId);\n        }\n    }\n    setExternalId(externalId) {\n        logMethodCall('setExternalId', { externalId });\n        this.externalId = externalId;\n    }\n    setApplyToRecordId(applyToRecordId) {\n        logMethodCall('setapplyToRecordId', { applyToRecordId });\n        this.applyToRecordId = applyToRecordId;\n    }\n    /**\n     * We use this method to update the model data.\n     * Results in a broadcasted update event.\n     */\n    set(property, newValue, propagate = true) {\n        logMethodCall('set', { property, newValue });\n        let oldValue;\n        if (this.data) {\n            oldValue = this.data[property];\n            this.data[property] = newValue;\n        }\n        if (propagate) {\n            const change = new ModelStoreUpdated(this.modelId, new OSModelUpdatedArgs(this, property, oldValue, newValue));\n            this.broadcast(change);\n        }\n    }\n    /**\n     * Updates the entire model data.\n     * To be called when updating the data with a remote sync.\n     */\n    hydrate(data) {\n        logMethodCall('hydrate', { data });\n        this.data = data;\n        this.broadcast(new ModelStoreHydrated(this.modelId, this));\n    }\n    /**\n     * Prepares model for storage in IndexedDB via ModelCache.\n     * @returns An encoded version of the model.\n     */\n    encode() {\n        const modelId = this.modelId;\n        const modelName = this.modelName;\n        const onesignalId = this.onesignalId;\n        const externalId = this.externalId;\n        return Object.assign({ modelId, modelName, onesignalId, externalId }, this.data);\n    }\n    /**\n     * Creates a new OSModel of type `modelName` from an encoded model with same `data` and `modelId`.\n     * @param encodedModel - An encoded model from IndexedDB.\n     * @returns OSModel object\n     */\n    static decode(encodedModel) {\n        logMethodCall('decode', { encodedModel });\n        const { modelId, modelName, onesignalId, externalId } = encodedModel, data = __rest(encodedModel, [\"modelId\", \"modelName\", \"onesignalId\", \"externalId\"]);\n        const decodedModel = new OSModel(modelName, data, modelId);\n        decodedModel.setOneSignalId(onesignalId);\n        decodedModel.setExternalId(externalId);\n        return decodedModel;\n    }\n}\n//# sourceMappingURL=OSModel.js.map","import { OSModel } from '../modelRepo/OSModel';\nimport { OSModelUpdatedArgs } from '../modelRepo/OSModelUpdatedArgs';\nimport { ModelStoreHydrated } from '../models/ModelStoreChange';\nexport function isPropertyDelta(delta) {\n    return delta.property !== undefined;\n}\nexport function isModelDelta(delta) {\n    return (delta.model !== undefined &&\n        delta.property === undefined);\n}\nexport function isPureObject(obj) {\n    return obj !== null && typeof obj === 'object' && (obj === null || obj === void 0 ? void 0 : obj.constructor) === Object;\n}\nexport function isOSModel(obj) {\n    return (obj !== null && typeof obj === 'object' && (obj === null || obj === void 0 ? void 0 : obj.constructor) === OSModel);\n}\nexport function isOSModelUpdatedArgs(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        (obj === null || obj === void 0 ? void 0 : obj.constructor) === OSModelUpdatedArgs);\n}\nexport function isModelStoreHydratedObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        (obj === null || obj === void 0 ? void 0 : obj.constructor) === ModelStoreHydrated);\n}\nexport function isIdentityObject(obj) {\n    return (obj === null || obj === void 0 ? void 0 : obj.onesignal_id) !== undefined;\n}\nexport function isFutureSubscriptionObject(obj) {\n    return (obj === null || obj === void 0 ? void 0 : obj.type) !== undefined;\n}\nexport function isCompleteSubscriptionObject(obj) {\n    return (obj === null || obj === void 0 ? void 0 : obj.type) !== undefined && (obj === null || obj === void 0 ? void 0 : obj.id) !== undefined;\n}\n//# sourceMappingURL=typePredicates.js.map","import { OSModel } from '../core/modelRepo/OSModel';\nimport { ModelName } from '../core/models/SupportedModels';\nimport Environment from '../shared/helpers/Environment';\nimport MainHelper from '../shared/helpers/MainHelper';\nimport Log from '../shared/libraries/Log';\nimport { logMethodCall } from '../shared/utils/utils';\nimport User from './User';\nimport { RequestService } from '../core/requestService/RequestService';\nimport { isCompleteSubscriptionObject } from '../core/utils/typePredicates';\nexport default class UserDirector {\n    static async initializeUser(isTemporary) {\n        logMethodCall('initializeUser', { isTemporary });\n        const existingIdentity = OneSignal.coreDirector.getIdentityModel();\n        const existingProperties = OneSignal.coreDirector.getPropertiesModel();\n        const existingUser = !!existingIdentity && !!existingProperties;\n        if (existingUser) {\n            Log.debug('User already exists, skipping initialization.');\n            return;\n        }\n        UserDirector.createUserPropertiesModel();\n        await UserDirector.createAnonymousUser(isTemporary);\n    }\n    static resetUserMetaProperties() {\n        const user = User.createOrGetInstance();\n        user.hasOneSignalId = false;\n        user.awaitOneSignalIdAvailable = undefined;\n        user.isCreatingUser = false;\n    }\n    static async createAnonymousUser(isTemporary) {\n        let identity;\n        if (isTemporary) {\n            identity = {};\n        }\n        else {\n            const userData = await UserDirector.createUserOnServer();\n            if (userData) {\n                identity = userData.identity;\n                OneSignal.coreDirector.hydrateUser(userData);\n            }\n            else {\n                return;\n            }\n        }\n        const identityOSModel = new OSModel(ModelName.Identity, identity);\n        identityOSModel.setOneSignalId(identity.onesignal_id);\n        OneSignal.coreDirector.add(ModelName.Identity, identityOSModel, false);\n        await this.copyOneSignalIdPromiseFromIdentityModel();\n    }\n    static createUserPropertiesModel() {\n        const properties = {\n            language: Environment.getLanguage(),\n            timezone_id: Intl.DateTimeFormat().resolvedOptions().timeZone,\n        };\n        const propertiesOSModel = new OSModel(ModelName.Properties, properties);\n        OneSignal.coreDirector.add(ModelName.Properties, propertiesOSModel, false);\n        return propertiesOSModel;\n    }\n    static async createUserOnServer() {\n        var _a;\n        const user = User.createOrGetInstance();\n        if (user.isCreatingUser) {\n            return;\n        }\n        user.isCreatingUser = true;\n        try {\n            const appId = await MainHelper.getAppId();\n            const pushSubscription = await OneSignal.coreDirector.getPushSubscriptionModel();\n            let subscriptionId;\n            if (isCompleteSubscriptionObject(pushSubscription === null || pushSubscription === void 0 ? void 0 : pushSubscription.data)) {\n                subscriptionId = pushSubscription === null || pushSubscription === void 0 ? void 0 : pushSubscription.data.id;\n            }\n            const userData = await UserDirector.getAllUserData();\n            const response = await RequestService.createUser({ appId, subscriptionId }, userData);\n            user.isCreatingUser = false;\n            const status = response.status;\n            const result = response.result;\n            if (status >= 200 && status < 300) {\n                const onesignalId = (_a = userData.identity) === null || _a === void 0 ? void 0 : _a.onesignal_id;\n                if (onesignalId) {\n                    OneSignal.coreDirector.getNewRecordsState().add(onesignalId);\n                }\n                const payloadSubcriptionToken = userData.subscriptions[0].token;\n                const resultSubscription = result.subscriptions.find((sub) => sub.token === payloadSubcriptionToken);\n                if (resultSubscription) {\n                    if (isCompleteSubscriptionObject(resultSubscription)) {\n                        OneSignal.coreDirector\n                            .getNewRecordsState()\n                            .add(resultSubscription.id);\n                    }\n                }\n            }\n            return result;\n        }\n        catch (e) {\n            Log.error(e);\n        }\n    }\n    static async createAndHydrateUser() {\n        const userData = await UserDirector.createUserOnServer();\n        if (userData) {\n            OneSignal.coreDirector.hydrateUser(userData);\n        }\n    }\n    static async getAllUserData() {\n        logMethodCall('LoginManager.getAllUserData');\n        const identity = OneSignal.coreDirector.getIdentityModel();\n        const properties = OneSignal.coreDirector.getPropertiesModel();\n        const subscriptions = await OneSignal.coreDirector.getAllSubscriptionsModels();\n        const userData = {};\n        userData.identity = identity === null || identity === void 0 ? void 0 : identity.data;\n        userData.properties = properties === null || properties === void 0 ? void 0 : properties.data;\n        userData.subscriptions = subscriptions === null || subscriptions === void 0 ? void 0 : subscriptions.map((subscription) => subscription.data);\n        return userData;\n    }\n    static async copyOneSignalIdPromiseFromIdentityModel() {\n        var _a;\n        const user = User.createOrGetInstance();\n        // copy the onesignal id promise to the user\n        const identity = OneSignal.coreDirector.getIdentityModel();\n        user.awaitOneSignalIdAvailable = identity === null || identity === void 0 ? void 0 : identity.awaitOneSignalIdAvailable;\n        (_a = user.awaitOneSignalIdAvailable) === null || _a === void 0 ? void 0 : _a.then((onesignalId) => {\n            user.hasOneSignalId = true;\n            user.onesignalId = onesignalId;\n        });\n    }\n    static async updateModelWithCurrentUserOneSignalId(model) {\n        const user = User.createOrGetInstance();\n        // wait for the user's onesignal id to be loaded\n        await user.awaitOneSignalIdAvailable;\n        model.setOneSignalId(user.onesignalId);\n    }\n}\n//# sourceMappingURL=UserDirector.js.map","import { OSModel } from '../core/modelRepo/OSModel';\nimport { ModelName } from '../core/models/SupportedModels';\nimport { SubscriptionType, } from '../core/models/SubscriptionModels';\nimport { InvalidArgumentError, InvalidArgumentReason, } from '../shared/errors/InvalidArgumentError';\nimport { logMethodCall, isValidEmail } from '../shared/utils/utils';\nimport UserDirector from './UserDirector';\nexport default class User {\n    constructor() {\n        this.hasOneSignalId = false;\n        this.isCreatingUser = false;\n    }\n    /**\n     * Creates a user singleton\n     * @returns - User singleton\n     */\n    static createOrGetInstance() {\n        if (!User.singletonInstance) {\n            User.singletonInstance = new User();\n            UserDirector.initializeUser(true)\n                .then(() => {\n                UserDirector.copyOneSignalIdPromiseFromIdentityModel().catch((e) => {\n                    console.error(e);\n                });\n            })\n                .catch((e) => {\n                console.error(e);\n            });\n        }\n        return User.singletonInstance;\n    }\n    /* PUBLIC API METHODS */\n    addAlias(label, id) {\n        logMethodCall('addAlias', { label, id });\n        if (typeof label !== 'string') {\n            throw new InvalidArgumentError('label', InvalidArgumentReason.WrongType);\n        }\n        if (typeof id !== 'string') {\n            throw new InvalidArgumentError('id', InvalidArgumentReason.WrongType);\n        }\n        if (!label) {\n            throw new InvalidArgumentError('label', InvalidArgumentReason.Empty);\n        }\n        if (!id) {\n            throw new InvalidArgumentError('id', InvalidArgumentReason.Empty);\n        }\n        this.addAliases({ [label]: id });\n    }\n    addAliases(aliases) {\n        logMethodCall('addAliases', { aliases });\n        if (!aliases || Object.keys(aliases).length === 0) {\n            throw new InvalidArgumentError('aliases', InvalidArgumentReason.Empty);\n        }\n        Object.keys(aliases).forEach(async (label) => {\n            if (typeof label !== 'string') {\n                throw new InvalidArgumentError('label', InvalidArgumentReason.WrongType);\n            }\n        });\n        const identityModel = OneSignal.coreDirector.getIdentityModel();\n        identityModel === null || identityModel === void 0 ? void 0 : identityModel.setApplyToRecordId(identityModel === null || identityModel === void 0 ? void 0 : identityModel.onesignalId);\n        Object.keys(aliases).forEach(async (label) => {\n            identityModel === null || identityModel === void 0 ? void 0 : identityModel.set(label, aliases[label]);\n        });\n    }\n    removeAlias(label) {\n        logMethodCall('removeAlias', { label });\n        if (typeof label !== 'string') {\n            throw new InvalidArgumentError('label', InvalidArgumentReason.WrongType);\n        }\n        if (!label) {\n            throw new InvalidArgumentError('label', InvalidArgumentReason.Empty);\n        }\n        this.removeAliases([label]);\n    }\n    removeAliases(aliases) {\n        logMethodCall('removeAliases', { aliases });\n        if (!aliases || aliases.length === 0) {\n            throw new InvalidArgumentError('aliases', InvalidArgumentReason.Empty);\n        }\n        const identityModel = OneSignal.coreDirector.getIdentityModel();\n        identityModel === null || identityModel === void 0 ? void 0 : identityModel.setApplyToRecordId(identityModel === null || identityModel === void 0 ? void 0 : identityModel.onesignalId);\n        aliases.forEach(async (alias) => {\n            identityModel === null || identityModel === void 0 ? void 0 : identityModel.set(alias, undefined);\n        });\n    }\n    async addEmail(email) {\n        var _a, _b, _c;\n        logMethodCall('addEmail', { email });\n        if (typeof email !== 'string') {\n            throw new InvalidArgumentError('email', InvalidArgumentReason.WrongType);\n        }\n        if (!email) {\n            throw new InvalidArgumentError('email', InvalidArgumentReason.Empty);\n        }\n        if (!isValidEmail(email)) {\n            throw new InvalidArgumentError('email', InvalidArgumentReason.Malformed);\n        }\n        const subscription = {\n            type: SubscriptionType.Email,\n            token: email,\n        };\n        const newSubscription = new OSModel(ModelName.Subscriptions, subscription);\n        if (((_a = User.singletonInstance) === null || _a === void 0 ? void 0 : _a.isCreatingUser) ||\n            ((_b = User.singletonInstance) === null || _b === void 0 ? void 0 : _b.hasOneSignalId)) {\n            // existing user\n            newSubscription.setOneSignalId((_c = User.singletonInstance) === null || _c === void 0 ? void 0 : _c.onesignalId);\n            const identityModel = OneSignal.coreDirector.getIdentityModel();\n            if (identityModel.data.external_id) {\n                newSubscription.setExternalId(identityModel.data.external_id);\n            }\n            OneSignal.coreDirector.add(ModelName.Subscriptions, newSubscription, true);\n        }\n        else {\n            // new user\n            OneSignal.coreDirector.add(ModelName.Subscriptions, newSubscription, false);\n            await UserDirector.createAndHydrateUser();\n        }\n        UserDirector.updateModelWithCurrentUserOneSignalId(newSubscription).catch((e) => {\n            throw e;\n        });\n        const identityModel = OneSignal.coreDirector.getIdentityModel();\n        if (identityModel.data.external_id) {\n            newSubscription.setExternalId(identityModel.data.external_id);\n        }\n    }\n    async addSms(sms) {\n        var _a, _b, _c;\n        logMethodCall('addSms', { sms });\n        if (typeof sms !== 'string') {\n            throw new InvalidArgumentError('sms', InvalidArgumentReason.WrongType);\n        }\n        if (!sms) {\n            throw new InvalidArgumentError('sms', InvalidArgumentReason.Empty);\n        }\n        const subscription = {\n            type: SubscriptionType.SMS,\n            token: sms,\n        };\n        const newSubscription = new OSModel(ModelName.Subscriptions, subscription);\n        if (((_a = User.singletonInstance) === null || _a === void 0 ? void 0 : _a.isCreatingUser) ||\n            ((_b = User.singletonInstance) === null || _b === void 0 ? void 0 : _b.hasOneSignalId)) {\n            // existing user\n            newSubscription.setOneSignalId((_c = User.singletonInstance) === null || _c === void 0 ? void 0 : _c.onesignalId);\n            const identityModel = OneSignal.coreDirector.getIdentityModel();\n            if (identityModel.data.external_id) {\n                newSubscription.setExternalId(identityModel.data.external_id);\n            }\n            OneSignal.coreDirector.add(ModelName.Subscriptions, newSubscription, true);\n        }\n        else {\n            // new user\n            OneSignal.coreDirector.add(ModelName.Subscriptions, newSubscription, false);\n            await UserDirector.createAndHydrateUser();\n        }\n        UserDirector.updateModelWithCurrentUserOneSignalId(newSubscription).catch((e) => {\n            throw e;\n        });\n        const identityModel = OneSignal.coreDirector.getIdentityModel();\n        if (identityModel.data.external_id) {\n            newSubscription.setExternalId(identityModel.data.external_id);\n        }\n    }\n    removeEmail(email) {\n        logMethodCall('removeEmail', { email });\n        if (typeof email !== 'string') {\n            throw new InvalidArgumentError('email', InvalidArgumentReason.WrongType);\n        }\n        if (!email) {\n            throw new InvalidArgumentError('email', InvalidArgumentReason.Empty);\n        }\n        const emailSubscriptions = OneSignal.coreDirector.getEmailSubscriptionModels();\n        const modelIds = Object.keys(emailSubscriptions);\n        modelIds.forEach(async (modelId) => {\n            var _a;\n            const model = emailSubscriptions[modelId];\n            if (((_a = model.data) === null || _a === void 0 ? void 0 : _a.token) === email) {\n                OneSignal.coreDirector.remove(ModelName.Subscriptions, modelId);\n            }\n        });\n    }\n    removeSms(smsNumber) {\n        logMethodCall('removeSms', { smsNumber });\n        if (typeof smsNumber !== 'string') {\n            throw new InvalidArgumentError('smsNumber', InvalidArgumentReason.WrongType);\n        }\n        if (!smsNumber) {\n            throw new InvalidArgumentError('smsNumber', InvalidArgumentReason.Empty);\n        }\n        const smsSubscriptions = OneSignal.coreDirector.getSmsSubscriptionModels();\n        const modelIds = Object.keys(smsSubscriptions);\n        modelIds.forEach(async (modelId) => {\n            var _a;\n            const model = smsSubscriptions[modelId];\n            if (((_a = model.data) === null || _a === void 0 ? void 0 : _a.token) === smsNumber) {\n                OneSignal.coreDirector.remove(ModelName.Subscriptions, modelId);\n            }\n        });\n    }\n    addTag(key, value) {\n        logMethodCall('addTag', { key, value });\n        if (typeof key !== 'string') {\n            throw new InvalidArgumentError('key', InvalidArgumentReason.WrongType);\n        }\n        if (typeof value !== 'string') {\n            throw new InvalidArgumentError('value', InvalidArgumentReason.WrongType);\n        }\n        if (!key) {\n            throw new InvalidArgumentError('key', InvalidArgumentReason.Empty);\n        }\n        if (!value) {\n            throw new InvalidArgumentError('value', InvalidArgumentReason.Empty, 'Did you mean to call removeTag?');\n        }\n        this.addTags({ [key]: value });\n    }\n    addTags(tags) {\n        var _a;\n        logMethodCall('addTags', { tags });\n        if (typeof tags !== 'object') {\n            throw new InvalidArgumentError('tags', InvalidArgumentReason.WrongType);\n        }\n        if (!tags) {\n            throw new InvalidArgumentError('tags', InvalidArgumentReason.Empty);\n        }\n        const propertiesModel = OneSignal.coreDirector.getPropertiesModel();\n        tags = Object.assign(Object.assign({}, (_a = propertiesModel === null || propertiesModel === void 0 ? void 0 : propertiesModel.data) === null || _a === void 0 ? void 0 : _a.tags), tags);\n        propertiesModel === null || propertiesModel === void 0 ? void 0 : propertiesModel.set('tags', tags);\n    }\n    removeTag(tagKey) {\n        logMethodCall('removeTag', { tagKey });\n        if (typeof tagKey !== 'string') {\n            throw new InvalidArgumentError('tagKey', InvalidArgumentReason.WrongType);\n        }\n        if (typeof tagKey === 'undefined') {\n            throw new InvalidArgumentError('tagKey', InvalidArgumentReason.Empty);\n        }\n        this.removeTags([tagKey]);\n    }\n    removeTags(tagKeys) {\n        var _a;\n        logMethodCall('removeTags', { tagKeys });\n        if (!tagKeys || tagKeys.length === 0) {\n            throw new InvalidArgumentError('tagKeys', InvalidArgumentReason.Empty);\n        }\n        const propertiesModel = OneSignal.coreDirector.getPropertiesModel();\n        const tagsCopy = JSON.parse(JSON.stringify((_a = propertiesModel === null || propertiesModel === void 0 ? void 0 : propertiesModel.data) === null || _a === void 0 ? void 0 : _a.tags));\n        if (tagsCopy) {\n            tagKeys.forEach((tagKey) => {\n                tagsCopy[tagKey] = '';\n            });\n            propertiesModel === null || propertiesModel === void 0 ? void 0 : propertiesModel.setApplyToRecordId(propertiesModel === null || propertiesModel === void 0 ? void 0 : propertiesModel.onesignalId);\n            propertiesModel === null || propertiesModel === void 0 ? void 0 : propertiesModel.set('tags', tagsCopy);\n        }\n    }\n    getTags() {\n        var _a, _b;\n        logMethodCall('getTags');\n        return (_b = (_a = OneSignal.coreDirector.getPropertiesModel()) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.tags;\n    }\n    setLanguage(language) {\n        logMethodCall('setLanguage', { language });\n        if (typeof language !== 'string') {\n            throw new InvalidArgumentError('language', InvalidArgumentReason.WrongType);\n        }\n        if (!language) {\n            throw new InvalidArgumentError('language', InvalidArgumentReason.Empty);\n        }\n        const propertiesModel = OneSignal.coreDirector.getPropertiesModel();\n        propertiesModel === null || propertiesModel === void 0 ? void 0 : propertiesModel.set('language', language);\n    }\n    getLanguage() {\n        var _a, _b;\n        logMethodCall('getLanguage');\n        return (_b = (_a = OneSignal.coreDirector.getPropertiesModel()) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.language;\n    }\n}\nUser.singletonInstance = undefined;\n//# sourceMappingURL=User.js.map","/**\n * TO DO: initialize a class specific static Emitter (instead of using global OneSignal.emitter)\n * and update everywhere that event is emitted to use the new emitter (e.g: OneSignal.user.emitter.emit())\n */\nexport class EventListenerBase {\n}\n//# sourceMappingURL=EventListenerBase.js.map","import { ValidatorUtils } from '../page/utils/ValidatorUtils';\nimport { InvalidArgumentError, InvalidArgumentReason, } from '../shared/errors/InvalidArgumentError';\nimport { InvalidStateError, InvalidStateReason, } from '../shared/errors/InvalidStateError';\nimport EventHelper from '../shared/helpers/EventHelper';\nimport Log from '../shared/libraries/Log';\nimport Database from '../shared/services/Database';\nimport { awaitOneSignalInitAndSupported, logMethodCall, } from '../shared/utils/utils';\nimport { isCompleteSubscriptionObject } from '../core/utils/typePredicates';\nimport { EventListenerBase } from '../page/userModel/EventListenerBase';\nexport default class PushSubscriptionNamespace extends EventListenerBase {\n    constructor(initialize, subscription, permission) {\n        super();\n        if (!initialize || !subscription) {\n            Log.warn(`PushSubscriptionNamespace: skipping initialization. One or more required params are falsy: initialize: ${initialize}, subscription: ${subscription}`);\n            return;\n        }\n        this._optedIn = !subscription.optedOut;\n        this._permission = permission;\n        this._token = subscription.subscriptionToken;\n        OneSignal.coreDirector\n            .getPushSubscriptionModel()\n            .then((pushModel) => {\n            if (pushModel && isCompleteSubscriptionObject(pushModel.data)) {\n                this._id = pushModel.data.id;\n            }\n        })\n            .catch((e) => {\n            Log.error(e);\n        });\n        OneSignal.emitter.on(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, async (change) => {\n            this._id = change === null || change === void 0 ? void 0 : change.current.id;\n            this._token = change === null || change === void 0 ? void 0 : change.current.token;\n        });\n        OneSignal.emitter.on(OneSignal.EVENTS.NOTIFICATION_PERMISSION_CHANGED_AS_STRING, async (permission) => {\n            this._permission = permission;\n        });\n    }\n    get id() {\n        return this._id;\n    }\n    get token() {\n        return this._token;\n    }\n    get optedIn() {\n        return !!this._optedIn && this._permission === 'granted';\n    }\n    async optIn() {\n        logMethodCall('optIn');\n        await awaitOneSignalInitAndSupported();\n        this._optedIn = true;\n        const permissionStatus = await OneSignal.context.permissionManager.getPermissionStatus();\n        if (permissionStatus !== 'granted') {\n            // TO DO: use user-config options prompting method\n            await OneSignal.Notifications.requestPermission();\n            return;\n        }\n        await this._enable(true);\n    }\n    async optOut() {\n        logMethodCall('optOut');\n        await awaitOneSignalInitAndSupported();\n        this._optedIn = false;\n        await this._enable(false);\n    }\n    addEventListener(event, listener) {\n        OneSignal.emitter.on(event, listener);\n    }\n    removeEventListener(event, listener) {\n        OneSignal.emitter.off(event, listener);\n    }\n    /* P R I V A T E */\n    async _enable(enabled) {\n        await awaitOneSignalInitAndSupported();\n        const appConfig = await Database.getAppConfig();\n        const subscriptionFromDb = await Database.getSubscription();\n        if (!appConfig.appId) {\n            throw new InvalidStateError(InvalidStateReason.MissingAppId);\n        }\n        if (!ValidatorUtils.isValidBoolean(enabled)) {\n            throw new InvalidArgumentError('enabled', InvalidArgumentReason.Malformed);\n        }\n        subscriptionFromDb.optedOut = !enabled;\n        await Database.setSubscription(subscriptionFromDb);\n        EventHelper.onInternalSubscriptionSet(subscriptionFromDb.optedOut).catch((e) => {\n            Log.error(e);\n        });\n        EventHelper.checkAndTriggerSubscriptionChanged().catch((e) => {\n            Log.error(e);\n        });\n    }\n}\n//# sourceMappingURL=PushSubscriptionNamespace.js.map","export var NotificationPermission;\n(function (NotificationPermission) {\n    /**\n     * The user has not granted notification permissions and may have just dismissed the notification permission prompt.\n     */\n    NotificationPermission[\"Default\"] = \"default\";\n    /**\n     * The user has granted notification permissions.\n     */\n    NotificationPermission[\"Granted\"] = \"granted\";\n    /**\n     * The user has blocked notifications.\n     */\n    NotificationPermission[\"Denied\"] = \"denied\";\n})(NotificationPermission || (NotificationPermission = {}));\n//# sourceMappingURL=NotificationPermission.js.map","import OneSignalError from './OneSignalError';\nexport var PushPermissionNotGrantedErrorReason;\n(function (PushPermissionNotGrantedErrorReason) {\n    PushPermissionNotGrantedErrorReason[PushPermissionNotGrantedErrorReason[\"Blocked\"] = 0] = \"Blocked\";\n    PushPermissionNotGrantedErrorReason[PushPermissionNotGrantedErrorReason[\"Dismissed\"] = 1] = \"Dismissed\";\n    PushPermissionNotGrantedErrorReason[PushPermissionNotGrantedErrorReason[\"Default\"] = 2] = \"Default\";\n})(PushPermissionNotGrantedErrorReason || (PushPermissionNotGrantedErrorReason = {}));\nexport default class PushPermissionNotGrantedError extends OneSignalError {\n    constructor(reason) {\n        let errorMessage;\n        switch (reason) {\n            case PushPermissionNotGrantedErrorReason.Dismissed:\n                errorMessage = 'The user dismissed the permission prompt.';\n                break;\n            case PushPermissionNotGrantedErrorReason.Blocked:\n                errorMessage = 'Notification permissions are blocked.';\n                break;\n            case PushPermissionNotGrantedErrorReason.Default:\n                errorMessage = 'Notification permissions have not been granted yet.';\n                break;\n        }\n        super(errorMessage);\n        this.reason = reason;\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n         * #extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, PushPermissionNotGrantedError.prototype);\n    }\n}\n//# sourceMappingURL=PushPermissionNotGrantedError.js.map","import OneSignalError from './OneSignalError';\nexport var SubscriptionErrorReason;\n(function (SubscriptionErrorReason) {\n    SubscriptionErrorReason[SubscriptionErrorReason[\"InvalidSafariSetup\"] = 0] = \"InvalidSafariSetup\";\n    SubscriptionErrorReason[SubscriptionErrorReason[\"Blocked\"] = 1] = \"Blocked\";\n    SubscriptionErrorReason[SubscriptionErrorReason[\"Dismissed\"] = 2] = \"Dismissed\";\n})(SubscriptionErrorReason || (SubscriptionErrorReason = {}));\nexport default class SubscriptionError extends OneSignalError {\n    constructor(reason) {\n        let errorMessage;\n        switch (reason) {\n            case SubscriptionErrorReason.InvalidSafariSetup:\n                errorMessage =\n                    `The Safari site URL, icon size, or push certificate ` +\n                        `is invalid, or Safari is in a private session.`;\n                break;\n            case SubscriptionErrorReason.Blocked:\n                errorMessage = 'Notification permissions are blocked.';\n                break;\n            case SubscriptionErrorReason.Dismissed:\n                errorMessage = 'The notification permission prompt was dismissed.';\n                break;\n        }\n        super(errorMessage);\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n         * #extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, SubscriptionError.prototype);\n    }\n}\n//# sourceMappingURL=SubscriptionError.js.map","import User from './User';\nimport PushSubscriptionNamespace from './PushSubscriptionNamespace';\nimport { EventListenerBase } from '../page/userModel/EventListenerBase';\nimport Emitter from '../shared/libraries/Emitter';\nexport default class UserNamespace extends EventListenerBase {\n    constructor(initialize, subscription, permission) {\n        super();\n        this.PushSubscription = new PushSubscriptionNamespace(false);\n        if (initialize) {\n            this._currentUser = User.createOrGetInstance();\n            this.PushSubscription = new PushSubscriptionNamespace(true, subscription, permission);\n        }\n    }\n    /* P U B L I C   A P I  */\n    get onesignalId() {\n        var _a;\n        return (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.onesignalId;\n    }\n    get externalId() {\n        var _a;\n        const identityModel = OneSignal.coreDirector.getIdentityModel();\n        return (_a = identityModel === null || identityModel === void 0 ? void 0 : identityModel.data) === null || _a === void 0 ? void 0 : _a.external_id;\n    }\n    addAlias(label, id) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.addAlias(label, id);\n    }\n    addAliases(aliases) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.addAliases(aliases);\n    }\n    removeAlias(label) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.removeAlias(label);\n    }\n    removeAliases(labels) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.removeAliases(labels);\n    }\n    addEmail(email) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.addEmail(email);\n    }\n    removeEmail(email) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.removeEmail(email);\n    }\n    addSms(smsNumber) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.addSms(smsNumber);\n    }\n    removeSms(smsNumber) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.removeSms(smsNumber);\n    }\n    addTag(key, value) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.addTag(key, value);\n    }\n    addTags(tags) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.addTags(tags);\n    }\n    removeTag(key) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.removeTag(key);\n    }\n    removeTags(keys) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.removeTags(keys);\n    }\n    getTags() {\n        var _a;\n        return ((_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.getTags()) || {};\n    }\n    setLanguage(language) {\n        var _a;\n        (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.setLanguage(language);\n    }\n    getLanguage() {\n        var _a;\n        return ((_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.getLanguage()) || '';\n    }\n    addEventListener(event, listener) {\n        UserNamespace.emitter.on(event, listener);\n    }\n    removeEventListener(event, listener) {\n        UserNamespace.emitter.off(event, listener);\n    }\n}\nUserNamespace.emitter = new Emitter();\n//# sourceMappingURL=UserNamespace.js.map","import Log from '../libraries/Log';\nimport { CustomLinkManager } from '../managers/CustomLinkManager';\nimport Database from '../services/Database';\nimport LimitStore from '../services/LimitStore';\nimport BrowserUtils from '../utils/BrowserUtils';\nimport OneSignalUtils from '../utils/OneSignalUtils';\nimport PromptsHelper from './PromptsHelper';\nimport OneSignalEvent from '../services/OneSignalEvent';\nimport MainHelper from './MainHelper';\nimport { awaitOneSignalInitAndSupported } from '../utils/utils';\nimport UserNamespace from '../../onesignal/UserNamespace';\nexport default class EventHelper {\n    static onNotificationPermissionChange() {\n        EventHelper.checkAndTriggerSubscriptionChanged();\n    }\n    static async onInternalSubscriptionSet(optedOut) {\n        LimitStore.put('subscription.optedOut', optedOut);\n    }\n    static async checkAndTriggerSubscriptionChanged() {\n        var _a;\n        OneSignalUtils.logMethodCall('checkAndTriggerSubscriptionChanged');\n        const context = OneSignal.context;\n        // isPushEnabled = subscribed && is not opted out\n        const isPushEnabled = await OneSignal.context.subscriptionManager.isPushNotificationsEnabled();\n        // isOptedIn = native permission granted && is not opted out\n        const isOptedIn = await OneSignal.context.subscriptionManager.isOptedIn();\n        const appState = await Database.getAppState();\n        const { lastKnownPushEnabled, lastKnownPushId, lastKnownPushToken, lastKnownOptedIn, } = appState;\n        const currentPushToken = await MainHelper.getCurrentPushToken();\n        const pushModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n        const pushSubscriptionId = (_a = pushModel === null || pushModel === void 0 ? void 0 : pushModel.data) === null || _a === void 0 ? void 0 : _a.id;\n        const didStateChange = lastKnownPushEnabled === null ||\n            isPushEnabled !== lastKnownPushEnabled ||\n            currentPushToken !== lastKnownPushToken ||\n            pushSubscriptionId !== lastKnownPushId;\n        if (!didStateChange) {\n            return;\n        }\n        // update notification_types via core module\n        await context.subscriptionManager.updateNotificationTypes();\n        appState.lastKnownPushEnabled = isPushEnabled;\n        appState.lastKnownPushToken = currentPushToken;\n        appState.lastKnownPushId = pushSubscriptionId;\n        appState.lastKnownOptedIn = isOptedIn;\n        await Database.setAppState(appState);\n        const change = {\n            previous: {\n                id: lastKnownPushId,\n                token: lastKnownPushToken,\n                // default to true if not stored yet\n                optedIn: lastKnownOptedIn !== null && lastKnownOptedIn !== void 0 ? lastKnownOptedIn : true,\n            },\n            current: {\n                id: pushSubscriptionId,\n                token: currentPushToken,\n                optedIn: isOptedIn,\n            },\n        };\n        Log.info('Push Subscription state changed: ', change);\n        EventHelper.triggerSubscriptionChanged(change);\n    }\n    static async _onSubscriptionChanged(change) {\n        var _a, _b, _c;\n        EventHelper.onSubscriptionChanged_showWelcomeNotification((_a = change === null || change === void 0 ? void 0 : change.current) === null || _a === void 0 ? void 0 : _a.optedIn, (_b = change === null || change === void 0 ? void 0 : change.current) === null || _b === void 0 ? void 0 : _b.id);\n        EventHelper.onSubscriptionChanged_sendCategorySlidedownTags((_c = change === null || change === void 0 ? void 0 : change.current) === null || _c === void 0 ? void 0 : _c.optedIn);\n        EventHelper.onSubscriptionChanged_evaluateNotifyButtonDisplayPredicate();\n        EventHelper.onSubscriptionChanged_updateCustomLink();\n    }\n    static async onSubscriptionChanged_sendCategorySlidedownTags(isSubscribed) {\n        var _a, _b;\n        if (isSubscribed !== true) {\n            return;\n        }\n        const prompts = (_b = (_a = OneSignal.context.appConfig.userConfig.promptOptions) === null || _a === void 0 ? void 0 : _a.slidedown) === null || _b === void 0 ? void 0 : _b.prompts;\n        if (PromptsHelper.isCategorySlidedownConfigured(prompts)) {\n            await OneSignal.context.tagManager.sendTags();\n        }\n    }\n    /**\n     * NOTE: This uses the OneSignal REST API POST /notifications with\n     * include_player_ids. This field will be dropped by 2025 so a\n     * replacement will needed by then.\n     */\n    static async onSubscriptionChanged_showWelcomeNotification(isSubscribed, pushSubscriptionId) {\n        var _a;\n        if (OneSignal.__doNotShowWelcomeNotification) {\n            Log.debug('Not showing welcome notification because user has previously subscribed.');\n            return;\n        }\n        const welcome_notification_opts = (_a = OneSignal.config) === null || _a === void 0 ? void 0 : _a.userConfig.welcomeNotification;\n        const welcome_notification_disabled = welcome_notification_opts !== undefined &&\n            welcome_notification_opts['disable'] === true;\n        if (welcome_notification_disabled) {\n            return;\n        }\n        if (isSubscribed !== true) {\n            return;\n        }\n        if (!pushSubscriptionId) {\n            return;\n        }\n        let title = welcome_notification_opts !== undefined &&\n            welcome_notification_opts['title'] !== undefined &&\n            welcome_notification_opts['title'] !== null\n            ? welcome_notification_opts['title']\n            : '';\n        let message = welcome_notification_opts !== undefined &&\n            welcome_notification_opts['message'] !== undefined &&\n            welcome_notification_opts['message'] !== null &&\n            welcome_notification_opts['message'].length > 0\n            ? welcome_notification_opts['message']\n            : 'Thanks for subscribing!';\n        const unopenableWelcomeNotificationUrl = new URL(location.href).origin + '?_osp=do_not_open';\n        const url = welcome_notification_opts &&\n            welcome_notification_opts['url'] &&\n            welcome_notification_opts['url'].length > 0\n            ? welcome_notification_opts['url']\n            : unopenableWelcomeNotificationUrl;\n        title = BrowserUtils.decodeHtmlEntities(title);\n        message = BrowserUtils.decodeHtmlEntities(message);\n        Log.debug('Sending welcome notification.');\n        MainHelper.showLocalNotification(title, message, url, undefined, { __isOneSignalWelcomeNotification: true }, undefined);\n        OneSignalEvent.trigger(OneSignal.EVENTS.WELCOME_NOTIFICATION_SENT, {\n            title: title,\n            message: message,\n            url: url,\n        });\n    }\n    static async onSubscriptionChanged_evaluateNotifyButtonDisplayPredicate() {\n        if (!OneSignal.config.userConfig.notifyButton)\n            return;\n        const displayPredicate = OneSignal.config.userConfig.notifyButton.displayPredicate;\n        if (displayPredicate &&\n            typeof displayPredicate === 'function' &&\n            OneSignal.notifyButton) {\n            const predicateResult = await displayPredicate();\n            if (predicateResult !== false) {\n                Log.debug('Showing notify button because display predicate returned true.');\n                OneSignal.notifyButton.launcher.show();\n            }\n            else {\n                Log.debug('Hiding notify button because display predicate returned false.');\n                OneSignal.notifyButton.launcher.hide();\n            }\n        }\n    }\n    static async onSubscriptionChanged_updateCustomLink() {\n        if (OneSignal.config.userConfig.promptOptions) {\n            new CustomLinkManager(OneSignal.config.userConfig.promptOptions.customlink).initialize();\n        }\n    }\n    static triggerSubscriptionChanged(change) {\n        OneSignalEvent.trigger(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, change);\n    }\n    static triggerUserChanged(change) {\n        OneSignalEvent.trigger(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, change, UserNamespace.emitter);\n    }\n    static triggerNotificationClick(event) {\n        const publicEvent = {\n            notification: event.notification,\n            result: event.result,\n        };\n        return OneSignalEvent.trigger(OneSignal.EVENTS.NOTIFICATION_CLICKED, publicEvent);\n    }\n    /**\n     * When notifications are clicked, because the site isn't open, the notification is stored in the database. The next\n     * time the page opens, the event is triggered if its less than 5 minutes (usually page opens instantly from click).\n     */\n    static async fireStoredNotificationClicks() {\n        await awaitOneSignalInitAndSupported();\n        const url = OneSignal.config.pageUrl ||\n            OneSignal.config.userConfig.pageUrl ||\n            document.URL;\n        async function fireEventWithNotification(selectedEvent) {\n            // Remove the notification from the recently clicked list\n            // Once this page processes this retroactively provided clicked event, nothing should get the same event\n            const appState = await Database.getAppState();\n            appState.pendingNotificationClickEvents[selectedEvent.result.url] = null;\n            await Database.setAppState(appState);\n            const timestamp = selectedEvent.timestamp;\n            if (timestamp) {\n                const minutesSinceNotificationClicked = (Date.now() - timestamp) / 1000 / 60;\n                if (minutesSinceNotificationClicked > 5)\n                    return;\n            }\n            EventHelper.triggerNotificationClick(selectedEvent);\n        }\n        const appState = await Database.getAppState();\n        /* Is the flag notificationClickHandlerMatch: origin enabled?\n    \n           If so, this means we should provide a retroactive notification.clicked event as long as there exists any recently clicked\n           notification that matches this site's origin.\n    \n           Otherwise, the default behavior is to only provide a retroactive notification.clicked event if this page's URL exactly\n           matches the notification's URL.\n        */\n        const notificationClickHandlerMatch = await Database.get('Options', 'notificationClickHandlerMatch');\n        if (notificationClickHandlerMatch === 'origin') {\n            for (const clickedNotificationUrl of Object.keys(appState.pendingNotificationClickEvents)) {\n                // Using notificationClickHandlerMatch: 'origin', as long as the notification's URL's origin matches our current tab's origin,\n                // fire the clicked event\n                if (new URL(clickedNotificationUrl).origin === location.origin) {\n                    const clickedNotification = appState.pendingNotificationClickEvents[clickedNotificationUrl];\n                    await fireEventWithNotification(clickedNotification);\n                }\n            }\n        }\n        else {\n            /*\n              If a user is on https://site.com, document.URL and location.href both report the page's URL as https://site.com/.\n              This causes checking for notifications for the current URL to fail, since there is a notification for https://site.com,\n              but there is no notification for https://site.com/.\n      \n              As a workaround, if there are no notifications for https://site.com/, we'll do a check for https://site.com.\n            */\n            let pageClickedNotifications = appState.pendingNotificationClickEvents[url];\n            if (pageClickedNotifications) {\n                await fireEventWithNotification(pageClickedNotifications);\n            }\n            else if (!pageClickedNotifications && url.endsWith('/')) {\n                const urlWithoutTrailingSlash = url.substring(0, url.length - 1);\n                pageClickedNotifications =\n                    appState.pendingNotificationClickEvents[urlWithoutTrailingSlash];\n                if (pageClickedNotifications) {\n                    await fireEventWithNotification(pageClickedNotifications);\n                }\n            }\n        }\n    }\n    static async checkAndTriggerUserChanged() {\n        var _a;\n        OneSignalUtils.logMethodCall('checkAndTriggerUserChanged');\n        const userState = await Database.getUserState();\n        const { previousOneSignalId, previousExternalId } = userState;\n        const identityModel = await OneSignal.coreDirector.getIdentityModel();\n        const currentOneSignalId = identityModel === null || identityModel === void 0 ? void 0 : identityModel.onesignalId;\n        const currentExternalId = (_a = identityModel === null || identityModel === void 0 ? void 0 : identityModel.data) === null || _a === void 0 ? void 0 : _a.external_id;\n        const didStateChange = currentOneSignalId !== previousOneSignalId ||\n            currentExternalId !== previousExternalId;\n        if (!didStateChange) {\n            return;\n        }\n        userState.previousOneSignalId = currentOneSignalId;\n        userState.previousExternalId = currentExternalId;\n        await Database.setUserState(userState);\n        const change = {\n            current: {\n                onesignalId: currentOneSignalId,\n                externalId: currentExternalId,\n            },\n        };\n        Log.info('User state changed: ', change);\n        EventHelper.triggerUserChanged(change);\n    }\n}\n//# sourceMappingURL=EventHelper.js.map","import Environment from '../helpers/Environment';\nimport { WorkerMessengerCommand } from '../libraries/WorkerMessenger';\nimport Path from '../models/Path';\nimport Database from '../services/Database';\nimport Log from '../libraries/Log';\nimport OneSignalEvent from '../services/OneSignalEvent';\nimport ServiceWorkerRegistrationError from '../errors/ServiceWorkerRegistrationError';\nimport OneSignalUtils from '../utils/OneSignalUtils';\nimport ServiceWorkerHelper, { ServiceWorkerActiveState, } from '../helpers/ServiceWorkerHelper';\nimport { Utils } from '../context/Utils';\nimport ServiceWorkerUtilHelper from '../../sw/helpers/ServiceWorkerUtilHelper';\nimport EventHelper from '../helpers/EventHelper';\nexport class ServiceWorkerManager {\n    constructor(context, config) {\n        this.context = context;\n        this.config = config;\n    }\n    /**\n     * Gets the current ServiceWorkerRegistration in the scoped configured\n     * in OneSignal.\n     * WARNING: This might be a non-OneSignal service worker, use\n     * getOneSignalRegistration() instead if you need this guarantee.\n     */\n    async getRegistration() {\n        return ServiceWorkerUtilHelper.getRegistration(this.config.registrationOptions.scope);\n    }\n    /**\n     *  Gets the OneSignal ServiceWorkerRegistration reference, if it was registered\n     */\n    async getOneSignalRegistration() {\n        const state = await this.getActiveState();\n        if (state === ServiceWorkerActiveState.OneSignalWorker) {\n            return this.getRegistration();\n        }\n        return undefined;\n    }\n    async getActiveState() {\n        const workerRegistration = await this.getRegistration();\n        if (!workerRegistration) {\n            return ServiceWorkerActiveState.None;\n        }\n        // We are now; 1. Getting the filename of the SW; 2. Checking if it is ours or a 3rd parties.\n        const swFileName = ServiceWorkerManager.activeSwFileName(workerRegistration);\n        const workerState = this.swActiveStateByFileName(swFileName);\n        return workerState;\n    }\n    // Get the file name of the active ServiceWorker\n    static activeSwFileName(workerRegistration) {\n        const serviceWorker = ServiceWorkerUtilHelper.getAvailableServiceWorker(workerRegistration);\n        if (!serviceWorker) {\n            return null;\n        }\n        const workerScriptPath = new URL(serviceWorker.scriptURL).pathname;\n        const swFileName = new Path(workerScriptPath).getFileName();\n        // If the current service worker is Akamai's\n        if (swFileName == 'akam-sw.js') {\n            // Check if its importing a ServiceWorker under it's \"othersw\" query param\n            const searchParams = new URLSearchParams(new URL(serviceWorker.scriptURL).search);\n            const importedSw = searchParams.get('othersw');\n            if (importedSw) {\n                Log.debug(\"Found a ServiceWorker under Akamai's akam-sw.js?othersw=\", importedSw);\n                return new Path(new URL(importedSw).pathname).getFileName();\n            }\n        }\n        return swFileName;\n    }\n    // Check if the ServiceWorker file name is ours or a third party's\n    swActiveStateByFileName(fileName) {\n        if (!fileName) {\n            return ServiceWorkerActiveState.None;\n        }\n        const isValidOSWorker = fileName == this.config.workerPath.getFileName() ||\n            fileName == 'OneSignalSDK.sw.js'; // For backwards compatibility with temporary v16 user model beta filename (remove after 5/5/24 deprecation)\n        if (isValidOSWorker) {\n            return ServiceWorkerActiveState.OneSignalWorker;\n        }\n        return ServiceWorkerActiveState.ThirdParty;\n    }\n    async getWorkerVersion() {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve) => {\n            this.context.workerMessenger.once(WorkerMessengerCommand.WorkerVersion, (workerVersion) => {\n                resolve(workerVersion);\n            });\n            await this.context.workerMessenger.unicast(WorkerMessengerCommand.WorkerVersion);\n        });\n    }\n    // Returns false if the OneSignal service worker can't be installed\n    // or is already installed and doesn't need updating.\n    async shouldInstallWorker() {\n        // 1. Does the browser support ServiceWorkers?\n        if (!Environment.supportsServiceWorkers())\n            return false;\n        // 2. Is OneSignal initialized?\n        if (!OneSignal.config)\n            return false;\n        // 3. Is a OneSignal ServiceWorker not installed now?\n        // If not and notification permissions are enabled we should install.\n        // This prevents an unnecessary install of the OneSignal worker which saves bandwidth\n        const workerState = await this.getActiveState();\n        Log.debug('[shouldInstallWorker] workerState', workerState);\n        if (workerState === ServiceWorkerActiveState.None ||\n            workerState === ServiceWorkerActiveState.ThirdParty) {\n            const permission = await OneSignal.context.permissionManager.getNotificationPermission(OneSignal.config.safariWebId);\n            const notificationsEnabled = permission === 'granted';\n            if (notificationsEnabled) {\n                Log.info('[shouldInstallWorker] Notification Permissions enabled, will install ServiceWorker');\n            }\n            return notificationsEnabled;\n        }\n        // 4. We have a OneSignal ServiceWorker installed, but did the path or scope of the ServiceWorker change?\n        if (await this.haveParamsChanged()) {\n            return true;\n        }\n        // 5. We have a OneSignal ServiceWorker installed, is there an update?\n        return this.workerNeedsUpdate();\n    }\n    async haveParamsChanged() {\n        // 1. No workerRegistration\n        const workerRegistration = await this.getRegistration();\n        if (!workerRegistration) {\n            Log.info('[changedServiceWorkerParams] workerRegistration not found at scope', this.config.registrationOptions.scope);\n            return true;\n        }\n        // 2. Different scope\n        const existingSwScope = new URL(workerRegistration.scope).pathname;\n        const configuredSwScope = this.config.registrationOptions.scope;\n        if (existingSwScope != configuredSwScope) {\n            Log.info('[changedServiceWorkerParams] ServiceWorker scope changing', {\n                a_old: existingSwScope,\n                b_new: configuredSwScope,\n            });\n            return true;\n        }\n        // 3. Different href?, asking if (path + filename + queryParams) is different\n        const availableWorker = ServiceWorkerUtilHelper.getAvailableServiceWorker(workerRegistration);\n        const serviceWorkerHref = ServiceWorkerHelper.getServiceWorkerHref(this.config, this.context.appConfig.appId, Environment.version());\n        // 3.1 If we can't get a scriptURL assume it is different\n        if (!(availableWorker === null || availableWorker === void 0 ? void 0 : availableWorker.scriptURL)) {\n            return true;\n        }\n        // 3.2 If the new serviceWorkerHref (page-env SDK version as query param) is different than existing worker URL\n        if (serviceWorkerHref !== availableWorker.scriptURL) {\n            Log.info('[changedServiceWorkerParams] ServiceWorker href changing:', {\n                a_old: availableWorker === null || availableWorker === void 0 ? void 0 : availableWorker.scriptURL,\n                b_new: serviceWorkerHref,\n            });\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Performs a service worker update by swapping out the current service worker\n     * with a content-identical but differently named alternate service worker\n     * file.\n     */\n    async workerNeedsUpdate() {\n        Log.info('[Service Worker Update] Checking service worker version...');\n        let workerVersion;\n        try {\n            workerVersion = await Utils.timeoutPromise(this.getWorkerVersion(), 2000);\n        }\n        catch (e) {\n            Log.info('[Service Worker Update] Worker did not reply to version query; assuming older version and updating.');\n            return true;\n        }\n        if (workerVersion !== Environment.version()) {\n            Log.info(`[Service Worker Update] Updating service worker from ${workerVersion} --> ${Environment.version()}.`);\n            return true;\n        }\n        Log.info(`[Service Worker Update] Service worker version is current at ${workerVersion} (no update required).`);\n        return false;\n    }\n    async establishServiceWorkerChannel() {\n        Log.debug('establishServiceWorkerChannel');\n        const workerMessenger = this.context.workerMessenger;\n        workerMessenger.off();\n        workerMessenger.on(WorkerMessengerCommand.NotificationWillDisplay, async (event) => {\n            Log.debug(location.origin, 'Received notification display event from service worker.');\n            const publicEvent = {\n                notification: event.notification,\n                preventDefault: function () {\n                    throw new Error('Browser does not support preventing display.');\n                },\n            };\n            await OneSignalEvent.trigger(OneSignal.EVENTS.NOTIFICATION_WILL_DISPLAY, publicEvent);\n        });\n        workerMessenger.on(WorkerMessengerCommand.NotificationClicked, async (event) => {\n            const clickedListenerCallbackCount = OneSignal.emitter.numberOfListeners(OneSignal.EVENTS.NOTIFICATION_CLICKED);\n            if (clickedListenerCallbackCount === 0) {\n                /*\n                A site's page can be open but not listening to the\n                notification.clicked event because it didn't call\n                addListenerForNotificationOpened(). In this case, if there are no\n                detected event listeners, we should save the event, instead of firing\n                it without anybody receiving it.\n      \n                Or, since addListenerForNotificationOpened() only works once (you have\n                to call it again each time), maybe it was only called once and the\n                user isn't receiving the notification.clicked event for subsequent\n                notifications on the same browser tab.\n      \n                Example: notificationClickHandlerMatch: 'origin', tab is clicked,\n                         event fires without anybody listening, calling\n                         addListenerForNotificationOpened() returns no results even\n                         though a notification was just clicked.\n              */\n                Log.debug('notification.clicked event received, but no event listeners; storing event in IndexedDb for later retrieval.');\n                /* For empty notifications without a URL, use the current document's URL */\n                let url = event.result.url;\n                if (!url) {\n                    // Least likely to modify, since modifying this property changes the page's URL\n                    url = location.href;\n                }\n                await Database.putNotificationClickedEventPendingUrlOpening(event);\n            }\n            else {\n                await EventHelper.triggerNotificationClick(event);\n            }\n        });\n        workerMessenger.on(WorkerMessengerCommand.NotificationDismissed, async (data) => {\n            await OneSignalEvent.trigger(OneSignal.EVENTS.NOTIFICATION_DISMISSED, data);\n        });\n        const isSafari = OneSignalUtils.isSafari();\n        workerMessenger.on(WorkerMessengerCommand.AreYouVisible, async (incomingPayload) => {\n            // For https sites in Chrome and Firefox service worker (SW) can get correct value directly.\n            // For Safari, unfortunately, we need this messaging workaround because SW always gets false.\n            if (isSafari) {\n                const payload = {\n                    timestamp: incomingPayload.timestamp,\n                    focused: document.hasFocus(),\n                };\n                await workerMessenger.directPostMessageToSW(WorkerMessengerCommand.AreYouVisibleResponse, payload);\n            }\n        });\n    }\n    /**\n     * Installs a newer version of the OneSignal service worker.\n     *\n     * We have a couple different models of installing service workers:\n     *\n     * a) Originally, we provided users with two worker files:\n     * OneSignalSDKWorker.js and OneSignalSDKUpdaterWorker.js. Two workers were\n     * provided so each could be swapped with the other when the worker needed to\n     * update. The contents of both workers were identical; only the filenames\n     * were different, which is enough to update the worker.\n     *\n     * Starting with version 151510, the need for two files is no longer required.\n     * We are able to update the worker automatically by always passing in the sdk\n     * version as a query parameter. This is enough for the browser to detect a\n     * change and re-install the worker.\n     *\n     * b) With AMP web push, users specify the worker file OneSignalSDKWorker.js\n     * with an app ID parameter ?appId=12345. AMP web push\n     * is vendor agnostic and doesn't know about OneSignal, so all relevant\n     * information has to be passed to the service worker, which is the only\n     * vendor-specific file.\n     *\n     * If AMP web push sees another worker like OneSignalSDKUpdaterWorker.js (deprecated), or\n     * even the same OneSignalSDKWorker.js without the app ID query parameter, the\n     * user is considered unsubscribed.\n     *\n     * c) Due to b's restriction, we must always install\n     * OneSignalSDKWorker.js?appId=xxx. We also have to appropriately handle the\n     * legacy case:\n     *\n     *    c-1) Where developers running progressive web apps force-register\n     *    OneSignalSDKWorker.js\n     *\n     * Actually, users can customize the file names of the Service Worker but\n     * it's up to them to be consistent with their naming. For AMP web push, users\n     * can specify the full string to expect for the service worker. They can add\n     * additional query parameters, but this must then stay consistent.\n     */\n    async installWorker() {\n        if (!(await this.shouldInstallWorker())) {\n            return this.getOneSignalRegistration();\n        }\n        Log.info('Installing worker...');\n        const workerState = await this.getActiveState();\n        if (workerState === ServiceWorkerActiveState.ThirdParty) {\n            Log.info(`[Service Worker Installation] 3rd party service worker detected.`);\n        }\n        const workerHref = ServiceWorkerHelper.getServiceWorkerHref(this.config, this.context.appConfig.appId, Environment.version());\n        const scope = `${OneSignalUtils.getBaseUrl()}${this.config.registrationOptions.scope}`;\n        Log.info(`[Service Worker Installation] Installing service worker ${workerHref} ${scope}.`);\n        let registration;\n        try {\n            registration = await navigator.serviceWorker.register(workerHref, {\n                scope,\n            });\n        }\n        catch (error) {\n            Log.error(`[Service Worker Installation] Installing service worker failed ${error}`);\n            registration = await this.fallbackToUserModelBetaWorker();\n        }\n        Log.debug(`[Service Worker Installation] Service worker installed. Waiting for activation`);\n        await ServiceWorkerUtilHelper.waitUntilActive(registration);\n        Log.debug(`[Service Worker Installation] Service worker active`);\n        await this.establishServiceWorkerChannel();\n        return registration;\n    }\n    async fallbackToUserModelBetaWorker() {\n        const BETA_WORKER_NAME = 'OneSignalSDK.sw.js';\n        const configWithBetaWorkerName = {\n            workerPath: new Path(`/${BETA_WORKER_NAME}`),\n            registrationOptions: this.config.registrationOptions,\n        };\n        const workerHref = ServiceWorkerHelper.getServiceWorkerHref(configWithBetaWorkerName, this.context.appConfig.appId, Environment.version());\n        const scope = `${OneSignalUtils.getBaseUrl()}${this.config.registrationOptions.scope}`;\n        Log.info(`[Service Worker Installation] Attempting to install v16 Beta Worker ${workerHref} ${scope}.`);\n        try {\n            const registration = await navigator.serviceWorker.register(workerHref, {\n                scope,\n            });\n            const DEPRECATION_ERROR = `\n        [Service Worker Installation] Successfully installed v16 Beta Worker.\n        Deprecation warning: support for the v16 beta worker name of ${BETA_WORKER_NAME}\n        will be removed May 5 2024. We have decided to keep the v15 name.\n        To avoid breaking changes for your users, please host both worker files:\n        OneSignalSDK.sw.js & OneSignalSDKWorker.js.\n      `;\n            Log.error(DEPRECATION_ERROR);\n            return registration;\n        }\n        catch (error) {\n            const response = await fetch(workerHref);\n            if (response.status === 403 || response.status === 404) {\n                throw new ServiceWorkerRegistrationError(response.status, response.statusText);\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=ServiceWorkerManager.js.map","import OneSignalError from './OneSignalError';\nexport default class NotImplementedError extends OneSignalError {\n    constructor() {\n        super('This code is not implemented yet.');\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, NotImplementedError.prototype);\n    }\n}\n//# sourceMappingURL=NotImplementedError.js.map","export class RawPushSubscription {\n    /**\n     * Given a native W3C browser push subscription, takes the endpoint, p256dh,\n     * and auth.\n     *\n     * @param pushSubscription A native browser W3C push subscription.\n     */\n    static setFromW3cSubscription(pushSubscription) {\n        const rawPushSubscription = new RawPushSubscription();\n        if (pushSubscription) {\n            rawPushSubscription.w3cEndpoint = new URL(pushSubscription.endpoint);\n            // Retrieve p256dh and auth for encrypted web push protocol\n            if (pushSubscription.getKey) {\n                // p256dh and auth are both ArrayBuffer\n                let p256dh = null;\n                try {\n                    p256dh = pushSubscription.getKey('p256dh');\n                }\n                catch (e) {\n                    // User is most likely running < Chrome < 50\n                }\n                let auth = null;\n                try {\n                    auth = pushSubscription.getKey('auth');\n                }\n                catch (e) {\n                    // User is most likely running < Firefox 45\n                }\n                if (p256dh) {\n                    // Base64 encode the ArrayBuffer (not URL-Safe, using standard Base64)\n                    const p256dh_base64encoded = btoa(String.fromCharCode.apply(null, new Uint8Array(p256dh)));\n                    rawPushSubscription.w3cP256dh = p256dh_base64encoded;\n                }\n                if (auth) {\n                    // Base64 encode the ArrayBuffer (not URL-Safe, using standard Base64)\n                    const auth_base64encoded = btoa(String.fromCharCode.apply(null, new Uint8Array(auth)));\n                    rawPushSubscription.w3cAuth = auth_base64encoded;\n                }\n            }\n        }\n        return rawPushSubscription;\n    }\n    /**\n     * Given a native browser Safari push subscription, sets the device token\n     * property.\n     *\n     * @param safariDeviceToken A native browser Safari push subscription.\n     */\n    setFromSafariSubscription(safariDeviceToken) {\n        if (!safariDeviceToken) {\n            return;\n        }\n        this.safariDeviceToken = safariDeviceToken;\n    }\n    serialize() {\n        const serializedBundle = {\n            /* Old Parameters */\n            w3cEndpoint: this.w3cEndpoint ? this.w3cEndpoint.toString() : null,\n            w3cP256dh: this.w3cP256dh,\n            w3cAuth: this.w3cAuth,\n            safariDeviceToken: this.safariDeviceToken,\n        };\n        return serializedBundle;\n    }\n    // TODO: had a hard to debug bug here due to \"any\" type bypassing typescript validation.\n    // Check the usage and maybe change with strict type\n    static deserialize(bundle) {\n        const subscription = new RawPushSubscription();\n        if (!bundle) {\n            return subscription;\n        }\n        try {\n            subscription.w3cEndpoint = new URL(bundle.w3cEndpoint);\n        }\n        catch (e) {\n            // w3cEndpoint will be null for Safari\n        }\n        subscription.w3cP256dh = bundle.w3cP256dh;\n        subscription.w3cAuth = bundle.w3cAuth;\n        subscription.safariDeviceToken = bundle.safariDeviceToken;\n        return subscription;\n    }\n}\n//# sourceMappingURL=RawPushSubscription.js.map","import Database from '../services/Database';\nimport Environment from '../helpers/Environment';\nimport OneSignalEvent from '../services/OneSignalEvent';\nimport { ServiceWorkerActiveState } from '../helpers/ServiceWorkerHelper';\nimport SdkEnvironment from './SdkEnvironment';\nimport { NotificationPermission } from '../models/NotificationPermission';\nimport { SubscriptionStateKind } from '../models/SubscriptionStateKind';\nimport { WindowEnvironmentKind } from '../models/WindowEnvironmentKind';\nimport { PermissionUtils } from '../utils/PermissionUtils';\nimport { base64ToUint8Array } from '../utils/Encoding';\nimport { InvalidStateError, InvalidStateReason, } from '../errors/InvalidStateError';\nimport NotImplementedError from '../errors/NotImplementedError';\nimport PushPermissionNotGrantedError, { PushPermissionNotGrantedErrorReason, } from '../errors/PushPermissionNotGrantedError';\nimport { SdkInitError, SdkInitErrorKind } from '../errors/SdkInitError';\nimport ServiceWorkerRegistrationError from '../errors/ServiceWorkerRegistrationError';\nimport SubscriptionError, { SubscriptionErrorReason, } from '../errors/SubscriptionError';\nimport Log from '../libraries/Log';\nimport { RawPushSubscription } from '../models/RawPushSubscription';\nimport FuturePushSubscriptionRecord from '../../page/userModel/FuturePushSubscriptionRecord';\nimport { SessionOrigin } from '../models/Session';\nimport { executeCallback, logMethodCall } from '../utils/utils';\nimport UserDirector from '../../onesignal/UserDirector';\nimport { isCompleteSubscriptionObject } from '../../core/utils/typePredicates';\nimport { bowserCastle } from '../utils/bowserCastle';\nexport class SubscriptionManager {\n    constructor(context, config) {\n        this.safariPermissionPromptFailed = false;\n        this.context = context;\n        this.config = config;\n    }\n    /**\n     * Returns a promise that resolves to true if all required conditions for push messaging are met; otherwise, false.\n     * @returns {Promise<boolean>}\n     */\n    async isPushNotificationsEnabled() {\n        const subscriptionState = await this.getSubscriptionState();\n        return subscriptionState.subscribed && !subscriptionState.optedOut;\n    }\n    /**\n     * isOptedIn - true if the user has granted permission and has not opted out.\n     * IMPORTANT: This method is not the same as isPushNotificationsEnabled(). isPushNotificationsEnabled() represents\n     * the current state of the user's subscription, while isOptedIn() represents the user's intention.\n     * @returns {Promise<boolean>}\n     */\n    async isOptedIn() {\n        const subscriptionState = await this.getSubscriptionState();\n        const permission = await OneSignal.context.permissionManager.getPermissionStatus();\n        return permission === 'granted' && !subscriptionState.optedOut;\n    }\n    /**\n     * Legacy method for determining if the user is subscribed.\n     * @param callback\n     * @returns\n     */\n    async isOptedOut(callback) {\n        logMethodCall('isOptedOut', callback);\n        const { optedOut } = await Database.getSubscription();\n        executeCallback(callback, optedOut);\n        return optedOut;\n    }\n    /**\n     * Subscribes for a web push subscription.\n     *\n     * This method can be called from the page context or a webpage a service worker context\n     * and will select the correct method.\n     */\n    async subscribe(subscriptionStrategy) {\n        const env = SdkEnvironment.getWindowEnv();\n        let rawPushSubscription;\n        switch (env) {\n            case WindowEnvironmentKind.ServiceWorker:\n                rawPushSubscription =\n                    await this.subscribeFcmFromWorker(subscriptionStrategy);\n                break;\n            case WindowEnvironmentKind.Host:\n                /*\n                  Check our notification permission before subscribing.\n        \n                  - If notifications are blocked, we can't subscribe.\n                  - If notifications are granted, the user should be completely resubscribed.\n                  - If notifications permissions are untouched, the user will be prompted and then\n                    subscribed.\n        \n                  Subscribing is only possible on the top-level frame, so there's no permission ambiguity\n                  here.\n                */\n                if ((await OneSignal.context.permissionManager.getPermissionStatus()) ===\n                    NotificationPermission.Denied)\n                    throw new PushPermissionNotGrantedError(PushPermissionNotGrantedErrorReason.Blocked);\n                if (Environment.useSafariLegacyPush()) {\n                    rawPushSubscription = await this.subscribeSafari();\n                    await this._updatePushSubscriptionModelWithRawSubscription(rawPushSubscription);\n                    /* Now that permissions have been granted, install the service worker */\n                    Log.info('Installing SW on Safari');\n                    try {\n                        await this.context.serviceWorkerManager.installWorker();\n                        Log.info('SW on Safari successfully installed');\n                    }\n                    catch (e) {\n                        Log.error('SW on Safari failed to install.');\n                    }\n                }\n                else {\n                    rawPushSubscription =\n                        await this.subscribeFcmFromPage(subscriptionStrategy);\n                    await this._updatePushSubscriptionModelWithRawSubscription(rawPushSubscription);\n                }\n                break;\n            default:\n                throw new InvalidStateError(InvalidStateReason.UnsupportedEnvironment);\n        }\n        return rawPushSubscription;\n    }\n    async _updatePushSubscriptionModelWithRawSubscription(rawPushSubscription) {\n        const pushModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n        if (!pushModel) {\n            OneSignal.coreDirector.generatePushSubscriptionModel(rawPushSubscription);\n            await UserDirector.createAndHydrateUser();\n            return;\n        }\n        else {\n            // resubscribing. update existing push subscription model\n            const serializedSubscriptionRecord = new FuturePushSubscriptionRecord(rawPushSubscription).serialize();\n            const keys = Object.keys(serializedSubscriptionRecord);\n            for (let i = 0; i < keys.length; i++) {\n                const key = keys[i];\n                if (serializedSubscriptionRecord[key]) {\n                    pushModel.set(key, serializedSubscriptionRecord[key]);\n                }\n            }\n        }\n    }\n    async updateNotificationTypes() {\n        const notificationTypes = await this.getNotificationTypes();\n        await this.updatePushSubscriptionNotificationTypes(notificationTypes);\n    }\n    async getNotificationTypes() {\n        const { optedOut } = await Database.getSubscription();\n        if (optedOut) {\n            return SubscriptionStateKind.UserOptedOut;\n        }\n        const permission = await OneSignal.context.permissionManager.getPermissionStatus();\n        if (permission === 'granted') {\n            return SubscriptionStateKind.Subscribed;\n        }\n        return SubscriptionStateKind.NoNativePermission;\n    }\n    async updatePushSubscriptionNotificationTypes(notificationTypes) {\n        const pushModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n        if (!pushModel) {\n            Log.info('No Push Subscription yet to update notification_types.');\n            return;\n        }\n        pushModel.set('notification_types', notificationTypes);\n        pushModel.set('enabled', notificationTypes === SubscriptionStateKind.Subscribed);\n    }\n    /**\n     * Creates a device record from the provided raw push subscription and forwards this device record\n     * to OneSignal to create or update the device ID.\n     *\n     * @param rawPushSubscription The raw push subscription obtained from calling subscribe(). This\n     * can be null, in which case OneSignal's device record is set to unsubscribed.\n     *\n     * @param subscriptionState TODO: This is no longer used here and needs some refactoring to\n     * put this back into place.\n     * Describes whether the device record is subscribed, unsubscribed, or in\n     * another state. By default, this is set from the availability of rawPushSubscription (exists:\n     * Subscribed, null: Unsubscribed). Other use cases may result in creation of a device record that\n     * warrants a special subscription state. For example, a device ID can be retrieved by providing\n     * an identifier, and a new device record will be created if the identifier didn't exist. These\n     * records are marked with a special subscription state for tracking purposes.\n     */\n    async registerSubscription(pushSubscription, _subscriptionState) {\n        /*\n          This may be called after the RawPushSubscription has been serialized across a postMessage\n          frame. This means it will only have object properties and none of the functions. We have to\n          recreate the RawPushSubscription.\n    \n          Keep in mind pushSubscription can be null in cases where resubscription isn't possible\n          (blocked permission).\n        */\n        if (pushSubscription) {\n            pushSubscription = RawPushSubscription.deserialize(pushSubscription);\n        }\n        if (await this.isAlreadyRegisteredWithOneSignal()) {\n            await this.context.updateManager.sendPushDeviceRecordUpdate();\n        }\n        else {\n            this.context.sessionManager.upsertSession(SessionOrigin.UserCreate);\n        }\n        const subscription = await Database.getSubscription();\n        // User Model: TO DO: Remove this once we have a better way to determine if the user is subscribed\n        subscription.deviceId = '99999999-9999-9999-9999-999999999999';\n        subscription.optedOut = false;\n        if (pushSubscription) {\n            if (Environment.useSafariLegacyPush()) {\n                subscription.subscriptionToken = pushSubscription.safariDeviceToken;\n            }\n            else {\n                subscription.subscriptionToken = pushSubscription.w3cEndpoint\n                    ? pushSubscription.w3cEndpoint.toString()\n                    : null;\n            }\n        }\n        else {\n            subscription.subscriptionToken = null;\n        }\n        await Database.setSubscription(subscription);\n        if (SdkEnvironment.getWindowEnv() !== WindowEnvironmentKind.ServiceWorker) {\n            OneSignalEvent.trigger(OneSignal.EVENTS.REGISTERED);\n        }\n        if (typeof OneSignal !== 'undefined') {\n            OneSignal._sessionInitAlreadyRunning = false;\n        }\n        return subscription;\n    }\n    /**\n     * Used before subscribing for push, we request notification permissions\n     * before installing the service worker to prevent non-subscribers from\n     * querying our server for an updated service worker every 24 hours.\n     */\n    static async requestPresubscribeNotificationPermission() {\n        return await SubscriptionManager.requestNotificationPermission();\n    }\n    async unsubscribe(strategy) {\n        if (strategy === 0 /* UnsubscriptionStrategy.DestroySubscription */) {\n            throw new NotImplementedError();\n        }\n        else if (strategy === 1 /* UnsubscriptionStrategy.MarkUnsubscribed */) {\n            if (SdkEnvironment.getWindowEnv() === WindowEnvironmentKind.ServiceWorker) {\n                await Database.put('Options', { key: 'optedOut', value: true });\n            }\n            else {\n                throw new NotImplementedError();\n            }\n        }\n        else {\n            throw new NotImplementedError();\n        }\n    }\n    /**\n     * Calls Notification.requestPermission(), but returns a Promise instead of\n     * accepting a callback like the actual Notification.requestPermission();\n     *\n     * window.Notification.requestPermission: The callback was deprecated since Gecko 46 in favor of a Promise\n     */\n    static async requestNotificationPermission() {\n        const results = await window.Notification.requestPermission();\n        // TODO: Clean up our custom NotificationPermission enum\n        //         in favor of TS union type NotificationPermission instead of converting\n        return results;\n    }\n    async isAlreadyRegisteredWithOneSignal() {\n        const { deviceId } = await Database.getSubscription();\n        return !!deviceId;\n    }\n    async subscribeSafariPromptPermission() {\n        const requestPermission = (url) => {\n            return new Promise((resolve) => {\n                window.safari.pushNotification.requestPermission(url, this.config.safariWebId, { app_id: this.config.appId }, (response) => {\n                    if (response && response.deviceToken) {\n                        resolve(response.deviceToken.toLowerCase());\n                    }\n                    else {\n                        resolve(null);\n                    }\n                });\n            });\n        };\n        if (!this.safariPermissionPromptFailed) {\n            return requestPermission(`${SdkEnvironment.getOneSignalApiUrl().toString()}/safari/apps/${this.config.appId}`);\n        }\n        else {\n            // If last attempt failed, retry with the legacy URL\n            return requestPermission(`${SdkEnvironment.getOneSignalApiUrl().toString()}/safari`);\n        }\n    }\n    async subscribeSafari() {\n        const pushSubscriptionDetails = new RawPushSubscription();\n        if (!this.config.safariWebId) {\n            throw new SdkInitError(SdkInitErrorKind.MissingSafariWebId);\n        }\n        const { deviceToken: existingDeviceToken } = window.safari.pushNotification.permission(this.config.safariWebId);\n        if (existingDeviceToken) {\n            pushSubscriptionDetails.setFromSafariSubscription(existingDeviceToken.toLowerCase());\n            return pushSubscriptionDetails;\n        }\n        /*\n          We're about to show the Safari native permission request. It can fail for a number of\n          reasons, e.g.:\n            - Setup-related reasons when developers just starting to get set up\n              - Address bar URL doesn't match safari certificate allowed origins (case-sensitive)\n              - Safari web ID doesn't match provided web ID\n              - Browsing in a Safari private window\n              - Bad icon DPI\n    \n          but shouldn't fail for sites that have already gotten Safari working.\n    \n          We'll show the permissionPromptDisplay event if the Safari user isn't already subscribed,\n          otherwise an already subscribed Safari user would not see the permission request again.\n        */\n        OneSignalEvent.trigger(OneSignal.EVENTS.PERMISSION_PROMPT_DISPLAYED);\n        const deviceToken = await this.subscribeSafariPromptPermission();\n        PermissionUtils.triggerNotificationPermissionChanged();\n        if (deviceToken) {\n            pushSubscriptionDetails.setFromSafariSubscription(deviceToken);\n        }\n        else {\n            this.safariPermissionPromptFailed = true;\n            throw new SubscriptionError(SubscriptionErrorReason.InvalidSafariSetup);\n        }\n        return pushSubscriptionDetails;\n    }\n    async subscribeFcmFromPage(subscriptionStrategy) {\n        /*\n          Before installing the service worker, request notification permissions. If\n          the visitor doesn't grant permissions, this saves bandwidth bleeding from\n          an unused install service worker periodically fetching an updated version\n          from our CDN.\n        */\n        /*\n          Trigger the permissionPromptDisplay event to the best of our knowledge.\n        */\n        if (SdkEnvironment.getWindowEnv() === WindowEnvironmentKind.Host &&\n            Notification.permission === NotificationPermission.Default) {\n            await OneSignalEvent.trigger(OneSignal.EVENTS.PERMISSION_PROMPT_DISPLAYED);\n            const permission = await SubscriptionManager.requestPresubscribeNotificationPermission();\n            /*\n              The native event handler does not broadcast an event for dismissing the\n              prompt, because going from \"default\" permissions to \"default\"\n              permissions isn't a change. We specifically broadcast \"default\" to \"default\" changes.\n             */\n            const forcePermissionChangeEvent = permission === NotificationPermission.Default;\n            await PermissionUtils.triggerNotificationPermissionChanged(forcePermissionChangeEvent);\n            // If the user did not grant push permissions, throw and exit\n            switch (permission) {\n                case NotificationPermission.Default:\n                    Log.debug('Exiting subscription and not registering worker because the permission was dismissed.');\n                    OneSignal._sessionInitAlreadyRunning = false;\n                    throw new PushPermissionNotGrantedError(PushPermissionNotGrantedErrorReason.Dismissed);\n                case NotificationPermission.Denied:\n                    Log.debug('Exiting subscription and not registering worker because the permission was blocked.');\n                    OneSignal._sessionInitAlreadyRunning = false;\n                    throw new PushPermissionNotGrantedError(PushPermissionNotGrantedErrorReason.Blocked);\n            }\n        }\n        /* Now that permissions have been granted, install the service worker */\n        let workerRegistration;\n        try {\n            workerRegistration =\n                await this.context.serviceWorkerManager.installWorker();\n        }\n        catch (err) {\n            if (err instanceof ServiceWorkerRegistrationError) {\n                // TODO: This doesn't register the subscription any more, most likely broke\n                // in some refactoring in the v16 major release. It would be useful if a\n                // subscription was created so the customer knows this failed by seeing\n                // subscriptions in this state on the OneSignal dashboard.\n                if (err.status === 403) {\n                    await this.context.subscriptionManager.registerFailedSubscription(SubscriptionStateKind.ServiceWorkerStatus403, this.context);\n                }\n                else if (err.status === 404) {\n                    await this.context.subscriptionManager.registerFailedSubscription(SubscriptionStateKind.ServiceWorkerStatus404, this.context);\n                }\n            }\n            throw err;\n        }\n        if (!workerRegistration) {\n            throw new Error('OneSignal service worker not found!');\n        }\n        Log.debug('[Subscription Manager] Service worker is ready to continue subscribing.');\n        return await this.subscribeWithVapidKey(workerRegistration.pushManager, subscriptionStrategy);\n    }\n    async subscribeFcmFromWorker(subscriptionStrategy) {\n        /*\n          We're running inside of the service worker.\n    \n          Check to make sure our registration is activated, otherwise we can't\n          subscribe for push.\n    \n          HACK: Firefox doesn't set self.registration.active in the service worker\n          context. From a non-service worker context, like\n          navigator.serviceWorker.getRegistration().active, the property actually is\n          set, but it's just not set within the service worker context.\n    \n          Because of this, we're not able to check for this property on Firefox.\n         */\n        const swRegistration = self.registration;\n        if (!swRegistration.active && bowserCastle().name !== 'firefox') {\n            throw new InvalidStateError(InvalidStateReason.ServiceWorkerNotActivated);\n            /*\n              Or should we wait for the service worker to be ready?\n      \n              await new Promise(resolve => self.onactivate = resolve);\n             */\n        }\n        /*\n          Check to make sure push permissions have been granted.\n         */\n        const pushPermission = await swRegistration.pushManager.permissionState({\n            userVisibleOnly: true,\n        });\n        if (pushPermission === 'denied') {\n            throw new PushPermissionNotGrantedError(PushPermissionNotGrantedErrorReason.Blocked);\n        }\n        else if (pushPermission === 'prompt') {\n            throw new PushPermissionNotGrantedError(PushPermissionNotGrantedErrorReason.Default);\n        }\n        return await this.subscribeWithVapidKey(swRegistration.pushManager, subscriptionStrategy);\n    }\n    /**\n     * Returns the correct VAPID key to use for subscription based on the browser type.\n     *\n     * If the VAPID key isn't present, undefined is returned instead of null.\n     */\n    getVapidKeyForBrowser() {\n        // Specifically return undefined instead of null if the key isn't available\n        let key = undefined;\n        if (bowserCastle().name === 'firefox') {\n            /*\n              Firefox uses VAPID for application identification instead of\n              authentication, and so all apps share an identification key.\n             */\n            key = this.config.onesignalVapidPublicKey;\n        }\n        else {\n            /*\n              Chrome and Chrome-like browsers including Opera and Yandex use VAPID for\n              authentication, and so each app uses a uniquely generated key.\n             */\n            key = this.config.vapidPublicKey;\n        }\n        if (key) {\n            return base64ToUint8Array(key).buffer;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Uses the browser's PushManager interface to actually subscribe for a web push subscription.\n     *\n     * @param pushManager An instance of the browser's push manager, either from the page or from the\n     * service worker.\n     *\n     * @param subscriptionStrategy Given an existing push subscription, describes whether the existing\n     * push subscription is resubscribed as-is leaving it unchanged, or unsubscribed to make room for\n     * a new push subscription.\n     */\n    async subscribeWithVapidKey(pushManager, subscriptionStrategy) {\n        /*\n          Always try subscribing using VAPID by providing an applicationServerKey, except for cases\n          where the user is already subscribed, handled below.\n         */\n        const existingPushSubscription = await pushManager.getSubscription();\n        /* Depending on the subscription strategy, handle existing subscription in various ways */\n        switch (subscriptionStrategy) {\n            case 0 /* SubscriptionStrategyKind.ResubscribeExisting */:\n                if (!existingPushSubscription)\n                    break;\n                if (existingPushSubscription.options) {\n                    Log.debug(\"[Subscription Manager] An existing push subscription exists and it's options is not null.\");\n                }\n                else {\n                    Log.debug('[Subscription Manager] An existing push subscription exists and options is null. ' +\n                        'Unsubscribing from push first now.');\n                    /*\n                      NOTE: Only applies to rare edge case of migrating from senderId to a VAPID subscription\n                      There isn't a great solution if PushSubscriptionOptions (supported on Chrome 54+) isn't\n                      supported.\n          \n                      We want to subscribe the user, but we don't know whether the user was subscribed via\n                      GCM's manifest.json or FCM's VAPID.\n          \n                      This bug (https://bugs.chromium.org/p/chromium/issues/detail?id=692577) shows that a\n                      mismatched sender ID error is possible if you subscribe via FCM's VAPID while the user\n                      was originally subscribed via GCM's manifest.json (fails silently).\n          \n                      Because of this, we should unsubscribe the user from push first and then resubscribe\n                      them.\n                    */\n                    /* We're unsubscribing, so we want to store the created at timestamp */\n                    await SubscriptionManager.doPushUnsubscribe(existingPushSubscription);\n                }\n                break;\n            case 1 /* SubscriptionStrategyKind.SubscribeNew */:\n                /* Since we want a new subscription every time with this strategy, just unsubscribe. */\n                if (existingPushSubscription) {\n                    await SubscriptionManager.doPushUnsubscribe(existingPushSubscription);\n                }\n                break;\n        }\n        // Actually subscribe the user to push\n        const [newPushSubscription, isNewSubscription] = await SubscriptionManager.doPushSubscribe(pushManager, this.getVapidKeyForBrowser());\n        // Update saved create and expired times\n        await SubscriptionManager.updateSubscriptionTime(isNewSubscription, newPushSubscription.expirationTime);\n        // Create our own custom object from the browser's native PushSubscription object\n        const pushSubscriptionDetails = RawPushSubscription.setFromW3cSubscription(newPushSubscription);\n        return pushSubscriptionDetails;\n    }\n    static async updateSubscriptionTime(updateCreatedAt, expirationTime) {\n        const bundle = await Database.getSubscription();\n        if (updateCreatedAt) {\n            bundle.createdAt = new Date().getTime();\n        }\n        bundle.expirationTime = expirationTime;\n        await Database.setSubscription(bundle);\n    }\n    static async doPushUnsubscribe(pushSubscription) {\n        Log.debug('[Subscription Manager] Unsubscribing existing push subscription.');\n        const result = await pushSubscription.unsubscribe();\n        Log.debug(`[Subscription Manager] Unsubscribing existing push subscription result: ${result}`);\n        return result;\n    }\n    // Subscribes the ServiceWorker for a pushToken.\n    // If there is an error doing so unsubscribe from existing and try again\n    //    - This handles subscribing to new server VAPID key if it has changed.\n    // return type - [PushSubscription, createdNewPushSubscription(boolean)]\n    static async doPushSubscribe(pushManager, applicationServerKey) {\n        if (!applicationServerKey) {\n            throw new Error(\"Missing required 'applicationServerKey' to subscribe for push notifications!\");\n        }\n        const subscriptionOptions = {\n            userVisibleOnly: true,\n            applicationServerKey: applicationServerKey,\n        };\n        Log.debug('[Subscription Manager] Subscribing to web push with these options:', subscriptionOptions);\n        try {\n            const existingSubscription = await pushManager.getSubscription();\n            return [\n                await pushManager.subscribe(subscriptionOptions),\n                !existingSubscription,\n            ];\n        }\n        catch (e) {\n            if (e.name == 'InvalidStateError') {\n                // This exception is thrown if the key for the existing applicationServerKey is different,\n                //    so we must unregister first.\n                // In Chrome, e.message contains will be the following in this case for reference;\n                // Registration failed - A subscription with a different applicationServerKey (or gcm_sender_id) already exists;\n                //    to change the applicationServerKey, unsubscribe then resubscribe.\n                Log.warn(\"[Subscription Manager] Couldn't re-subscribe due to applicationServerKey changing, \" +\n                    'unsubscribe and attempting to subscribe with new key.', e);\n                const subscription = await pushManager.getSubscription();\n                if (subscription) {\n                    await SubscriptionManager.doPushUnsubscribe(subscription);\n                }\n                return [await pushManager.subscribe(subscriptionOptions), true];\n            }\n            else\n                throw e; // If some other error, bubble the exception up\n        }\n    }\n    async isSubscriptionExpiring() {\n        const serviceWorkerState = await this.context.serviceWorkerManager.getActiveState();\n        if (!(serviceWorkerState === ServiceWorkerActiveState.OneSignalWorker)) {\n            /* If the service worker isn't activated, there's no subscription to look for */\n            return false;\n        }\n        const serviceWorkerRegistration = await this.context.serviceWorkerManager.getOneSignalRegistration();\n        if (!serviceWorkerRegistration)\n            return false;\n        // It's possible to get here in Safari 11.1+ version\n        //   since they released support for service workers but not push api.\n        if (!serviceWorkerRegistration.pushManager)\n            return false;\n        const pushSubscription = await serviceWorkerRegistration.pushManager.getSubscription();\n        // Not subscribed to web push\n        if (!pushSubscription)\n            return false;\n        // No push subscription expiration time\n        if (!pushSubscription.expirationTime)\n            return false;\n        let { createdAt: subscriptionCreatedAt } = await Database.getSubscription();\n        if (!subscriptionCreatedAt) {\n            /* If we don't have a record of when the subscription was created, set it into the future to\n            guarantee expiration and obtain a new subscription */\n            const ONE_YEAR = 1000 * 60 * 60 * 24 * 365;\n            subscriptionCreatedAt = new Date().getTime() + ONE_YEAR;\n        }\n        const midpointExpirationTime = subscriptionCreatedAt +\n            (pushSubscription.expirationTime - subscriptionCreatedAt) / 2;\n        return (!!pushSubscription.expirationTime &&\n            /* The current time (in UTC) is past the expiration time (also in UTC) */\n            (new Date().getTime() >= pushSubscription.expirationTime ||\n                new Date().getTime() >= midpointExpirationTime));\n    }\n    /**\n     * Returns an object describing the user's actual push subscription state and opt-out status.\n     */\n    async getSubscriptionState() {\n        const windowEnv = SdkEnvironment.getWindowEnv();\n        switch (windowEnv) {\n            case WindowEnvironmentKind.ServiceWorker: {\n                const pushSubscription = await self.registration.pushManager.getSubscription();\n                const { optedOut } = await Database.getSubscription();\n                return {\n                    subscribed: !!pushSubscription,\n                    optedOut: !!optedOut,\n                };\n            }\n            default: {\n                /* Regular browser window environments */\n                return this.getSubscriptionStateFromBrowserContext();\n            }\n        }\n    }\n    async getSubscriptionStateFromBrowserContext() {\n        var _a, _b;\n        const { optedOut, subscriptionToken } = await Database.getSubscription();\n        const pushSubscriptionOSModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n        const isValidPushSubscription = isCompleteSubscriptionObject(pushSubscriptionOSModel === null || pushSubscriptionOSModel === void 0 ? void 0 : pushSubscriptionOSModel.data) &&\n            !!(pushSubscriptionOSModel === null || pushSubscriptionOSModel === void 0 ? void 0 : pushSubscriptionOSModel.onesignalId);\n        if (Environment.useSafariLegacyPush()) {\n            const subscriptionState = (_b = (_a = window.safari) === null || _a === void 0 ? void 0 : _a.pushNotification) === null || _b === void 0 ? void 0 : _b.permission(this.config.safariWebId);\n            const isSubscribedToSafari = !!(isValidPushSubscription &&\n                subscriptionToken &&\n                (subscriptionState === null || subscriptionState === void 0 ? void 0 : subscriptionState.permission) === 'granted' &&\n                (subscriptionState === null || subscriptionState === void 0 ? void 0 : subscriptionState.deviceToken));\n            return {\n                subscribed: isSubscribedToSafari,\n                optedOut: !!optedOut,\n            };\n        }\n        const workerRegistration = await this.context.serviceWorkerManager.getOneSignalRegistration();\n        const notificationPermission = await this.context.permissionManager.getNotificationPermission(this.context.appConfig.safariWebId);\n        if (!workerRegistration) {\n            /* You can't be subscribed without a service worker registration */\n            return {\n                subscribed: false,\n                optedOut: !!optedOut,\n            };\n        }\n        /*\n         * Removing pushSubscription from this method due to inconsistent behavior between browsers.\n         * Doesn't matter for re-subscribing, worker is present and active.\n         * Previous implementation for reference:\n         * const pushSubscription = await workerRegistration.pushManager.getSubscription();\n         * const isPushEnabled = !!(\n         *   pushSubscription &&\n         *   deviceId &&\n         *   notificationPermission === NotificationPermission.Granted\n         * );\n         */\n        const isPushEnabled = !!(isValidPushSubscription &&\n            subscriptionToken &&\n            notificationPermission === NotificationPermission.Granted);\n        return {\n            subscribed: isPushEnabled,\n            optedOut: !!optedOut,\n        };\n    }\n    /**\n     * Broadcasting to the server the fact user tried to subscribe but there was an error during service worker registration.\n     * Do it only once for the first page view.\n     * @param subscriptionState Describes what went wrong with the service worker installation.\n     */\n    async registerFailedSubscription(subscriptionState, context) {\n        if (context.pageViewManager.isFirstPageView()) {\n            context.subscriptionManager.registerSubscription(new RawPushSubscription(), subscriptionState);\n            context.pageViewManager.incrementPageViewCount();\n        }\n    }\n}\n//# sourceMappingURL=SubscriptionManager.js.map","import { ServiceWorkerManager } from '../managers/ServiceWorkerManager';\nimport { SubscriptionManager, } from '../managers/SubscriptionManager';\nimport Path from '../models/Path';\nexport class ContextHelper {\n    static getServiceWorkerManager(context) {\n        const config = context.appConfig;\n        const serviceWorkerManagerConfig = {\n            workerPath: new Path(`OneSignalSDKWorker.js`),\n            registrationOptions: { scope: '/' },\n        };\n        if (config.userConfig) {\n            if (config.userConfig.path) {\n                serviceWorkerManagerConfig.workerPath = new Path(`${config.userConfig.path}${config.userConfig.serviceWorkerPath}`);\n            }\n            if (config.userConfig.serviceWorkerParam) {\n                serviceWorkerManagerConfig.registrationOptions =\n                    config.userConfig.serviceWorkerParam;\n            }\n        }\n        return new ServiceWorkerManager(context, serviceWorkerManagerConfig);\n    }\n    static getSubscriptionManager(context) {\n        const config = context.appConfig;\n        const subscriptionManagerConfig = {\n            safariWebId: config.safariWebId,\n            appId: config.appId,\n            vapidPublicKey: config.vapidPublicKey,\n            onesignalVapidPublicKey: config.onesignalVapidPublicKey,\n        };\n        return new SubscriptionManager(context, subscriptionManagerConfig);\n    }\n}\nexport default ContextHelper;\n//# sourceMappingURL=ContextHelper.js.map","import { SubscriptionStateKind } from '../models/SubscriptionStateKind';\nimport Log from '../libraries/Log';\nimport { SessionOrigin } from '../models/Session';\nimport OneSignalApiShared from '../api/OneSignalApiShared';\nimport User from '../../onesignal/User';\nimport FuturePushSubscriptionRecord from '../../page/userModel/FuturePushSubscriptionRecord';\nimport { isCompleteSubscriptionObject } from '../../core/utils/typePredicates';\nimport { logMethodCall } from '../utils/utils';\nexport class UpdateManager {\n    constructor(context) {\n        this.context = context;\n        this.onSessionSent = context.pageViewManager.getPageViewCount() > 1;\n    }\n    async sendPushDeviceRecordUpdate() {\n        var _a;\n        if (!((_a = User.singletonInstance) === null || _a === void 0 ? void 0 : _a.hasOneSignalId)) {\n            Log.debug('Not sending the update because user is not registered with OneSignal (no onesignal_id)');\n            return;\n        }\n        if (!this.onSessionSent) {\n            await this.sendOnSessionUpdate();\n        }\n    }\n    // If user has been subscribed before, send the on_session update to our backend on the first page view.\n    async sendOnSessionUpdate() {\n        var _a;\n        if (this.onSessionSent) {\n            return;\n        }\n        if (!this.context.pageViewManager.isFirstPageView()) {\n            return;\n        }\n        const existingUser = await this.context.subscriptionManager.isAlreadyRegisteredWithOneSignal();\n        if (!existingUser) {\n            Log.debug('Not sending the on session because user is not registered with OneSignal (no device id)');\n            return;\n        }\n        const subscriptionModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n        if ((subscriptionModel === null || subscriptionModel === void 0 ? void 0 : subscriptionModel.data.notification_types) !==\n            SubscriptionStateKind.Subscribed &&\n            ((_a = OneSignal.config) === null || _a === void 0 ? void 0 : _a.enableOnSession) !== true) {\n            return;\n        }\n        try {\n            // Not sending on_session here but from SW instead.\n            // Not awaiting here on purpose\n            this.context.sessionManager.upsertSession(SessionOrigin.UserNewSession);\n            this.onSessionSent = true;\n        }\n        catch (e) {\n            Log.error(`Failed to update user session. Error \"${e.message}\" ${e.stack}`);\n        }\n    }\n    async sendOutcomeDirect(appId, notificationIds, outcomeName, value) {\n        logMethodCall('sendOutcomeDirect');\n        const pushSubscriptionModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n        if (pushSubscriptionModel &&\n            isCompleteSubscriptionObject(pushSubscriptionModel === null || pushSubscriptionModel === void 0 ? void 0 : pushSubscriptionModel.data)) {\n            const outcomeRequestData = {\n                id: outcomeName,\n                app_id: appId,\n                notification_ids: notificationIds,\n                direct: true,\n                subscription: {\n                    id: pushSubscriptionModel.data.id,\n                    type: FuturePushSubscriptionRecord.getSubscriptionType(),\n                },\n            };\n            if (value !== undefined) {\n                outcomeRequestData.weight = value;\n            }\n            await OneSignalApiShared.sendOutcome(outcomeRequestData);\n            return;\n        }\n        Log.warn(`Send outcome aborted because pushSubscriptionModel is not available.`);\n    }\n    async sendOutcomeInfluenced(appId, notificationIds, outcomeName, value) {\n        logMethodCall('sendOutcomeInfluenced');\n        const pushSubscriptionModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n        if (pushSubscriptionModel &&\n            isCompleteSubscriptionObject(pushSubscriptionModel === null || pushSubscriptionModel === void 0 ? void 0 : pushSubscriptionModel.data)) {\n            const outcomeRequestData = {\n                id: outcomeName,\n                app_id: appId,\n                notification_ids: notificationIds,\n                direct: false,\n                subscription: {\n                    id: pushSubscriptionModel.data.id,\n                    type: FuturePushSubscriptionRecord.getSubscriptionType(),\n                },\n            };\n            if (value !== undefined) {\n                outcomeRequestData.weight = value;\n            }\n            await OneSignalApiShared.sendOutcome(outcomeRequestData);\n            return;\n        }\n        Log.warn(`Send outcome aborted because pushSubscriptionModel is not available.`);\n    }\n    async sendOutcomeUnattributed(appId, outcomeName, value) {\n        logMethodCall('sendOutcomeUnattributed');\n        const pushSubscriptionModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n        if (pushSubscriptionModel &&\n            isCompleteSubscriptionObject(pushSubscriptionModel === null || pushSubscriptionModel === void 0 ? void 0 : pushSubscriptionModel.data)) {\n            const outcomeRequestData = {\n                id: outcomeName,\n                app_id: appId,\n                subscription: {\n                    id: pushSubscriptionModel.data.id,\n                    type: FuturePushSubscriptionRecord.getSubscriptionType(),\n                },\n            };\n            if (value !== undefined) {\n                outcomeRequestData.weight = value;\n            }\n            await OneSignalApiShared.sendOutcome(outcomeRequestData);\n            return;\n        }\n        Log.warn(`Send outcome aborted because pushSubscriptionModel is not available.`);\n    }\n}\n//# sourceMappingURL=UpdateManager.js.map","import { WorkerMessengerCommand } from '../../libraries/WorkerMessenger';\nimport { OneSignalUtils } from '../../utils/OneSignalUtils';\nimport { SubscriptionStateKind } from '../../models/SubscriptionStateKind';\nimport { SessionOrigin, } from '../../models/Session';\nimport MainHelper from '../../helpers/MainHelper';\nimport Log from '../../libraries/Log';\nimport { isCompleteSubscriptionObject } from '../../../core/utils/typePredicates';\nimport OneSignalError from '../../../shared/errors/OneSignalError';\nimport User from '../../../onesignal/User';\nimport { RequestService } from '../../../core/requestService/RequestService';\nimport AliasPair from '../../../core/requestService/AliasPair';\nimport Utils from '../../../shared/context/Utils';\nexport class SessionManager {\n    constructor(context) {\n        this.onSessionSent = false;\n        this.context = context;\n    }\n    async notifySWToUpsertSession(onesignalId, subscriptionId, sessionOrigin) {\n        var _a;\n        const payload = {\n            onesignalId,\n            subscriptionId,\n            appId: this.context.appConfig.appId,\n            sessionThreshold: this.context.appConfig.sessionThreshold || 0,\n            enableSessionDuration: !!this.context.appConfig.enableSessionDuration,\n            sessionOrigin,\n            isSafari: OneSignalUtils.isSafari(),\n            outcomesConfig: this.context.appConfig.userConfig.outcomes,\n        };\n        if ((_a = this.context.environmentInfo) === null || _a === void 0 ? void 0 : _a.isBrowserAndSupportsServiceWorkers) {\n            Log.debug('Notify SW to upsert session');\n            await this.context.workerMessenger.unicast(WorkerMessengerCommand.SessionUpsert, payload);\n        }\n        else {\n            // http w/o our iframe\n            // we probably shouldn't even be here\n            Log.debug('Notify upsert: do nothing');\n        }\n    }\n    async notifySWToDeactivateSession(onesignalId, subscriptionId, sessionOrigin) {\n        var _a;\n        const payload = {\n            appId: this.context.appConfig.appId,\n            subscriptionId,\n            onesignalId,\n            sessionThreshold: this.context.appConfig.sessionThreshold,\n            enableSessionDuration: this.context.appConfig.enableSessionDuration,\n            sessionOrigin,\n            isSafari: OneSignalUtils.isSafari(),\n            outcomesConfig: this.context.appConfig.userConfig.outcomes,\n        };\n        if ((_a = this.context.environmentInfo) === null || _a === void 0 ? void 0 : _a.isBrowserAndSupportsServiceWorkers) {\n            Log.debug('Notify SW to deactivate session');\n            await this.context.workerMessenger.unicast(WorkerMessengerCommand.SessionDeactivate, payload);\n        }\n        else {\n            // http w/o our iframe\n            // we probably shouldn't even be here\n            Log.debug('Notify deactivate: do nothing');\n        }\n    }\n    async _getOneSignalAndSubscriptionIds() {\n        const identityModel = OneSignal.coreDirector.getIdentityModel();\n        const pushSubscriptionModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n        if (!identityModel || !identityModel.onesignalId) {\n            throw new OneSignalError('Abort _getOneSignalAndSubscriptionIds: no identity');\n        }\n        if (!pushSubscriptionModel ||\n            !isCompleteSubscriptionObject(pushSubscriptionModel.data)) {\n            throw new OneSignalError('Abort _getOneSignalAndSubscriptionIds: no subscription');\n        }\n        const { onesignalId } = identityModel;\n        const { id: subscriptionId } = pushSubscriptionModel.data;\n        return { onesignalId, subscriptionId };\n    }\n    async handleVisibilityChange() {\n        var _a;\n        if (!((_a = User.singletonInstance) === null || _a === void 0 ? void 0 : _a.hasOneSignalId)) {\n            return;\n        }\n        try {\n            const visibilityState = document.visibilityState;\n            const { onesignalId, subscriptionId } = await this._getOneSignalAndSubscriptionIds();\n            if (visibilityState === 'visible') {\n                this.setupOnFocusAndOnBlurForSession();\n                Log.debug('handleVisibilityChange', 'visible', `hasFocus: ${document.hasFocus()}`);\n                if (document.hasFocus()) {\n                    await this.notifySWToUpsertSession(onesignalId, subscriptionId, SessionOrigin.VisibilityVisible);\n                }\n                return;\n            }\n            if (visibilityState === 'hidden') {\n                Log.debug('handleVisibilityChange', 'hidden');\n                if (OneSignal.cache.focusHandler && OneSignal.cache.isFocusEventSetup) {\n                    window.removeEventListener('focus', OneSignal.cache.focusHandler, true);\n                    OneSignal.cache.isFocusEventSetup = false;\n                }\n                if (OneSignal.cache.blurHandler && OneSignal.cache.isBlurEventSetup) {\n                    window.removeEventListener('blur', OneSignal.cache.blurHandler, true);\n                    OneSignal.cache.isBlurEventSetup = false;\n                }\n                await this.notifySWToDeactivateSession(onesignalId, subscriptionId, SessionOrigin.VisibilityHidden);\n                return;\n            }\n            // it should never be anything else at this point\n            Log.warn('Unhandled visibility state happened', visibilityState);\n        }\n        catch (e) {\n            Log.error('Error handling visibility change:', e);\n        }\n    }\n    async handleOnBeforeUnload() {\n        var _a;\n        if (!((_a = User.singletonInstance) === null || _a === void 0 ? void 0 : _a.hasOneSignalId)) {\n            return;\n        }\n        try {\n            // don't have much time on before unload\n            // have to skip adding device record to the payload\n            const { onesignalId, subscriptionId } = await this._getOneSignalAndSubscriptionIds();\n            const payload = {\n                appId: this.context.appConfig.appId,\n                onesignalId,\n                subscriptionId,\n                sessionThreshold: this.context.appConfig.sessionThreshold,\n                enableSessionDuration: this.context.appConfig.enableSessionDuration,\n                sessionOrigin: SessionOrigin.BeforeUnload,\n                isSafari: OneSignalUtils.isSafari(),\n                outcomesConfig: this.context.appConfig.userConfig.outcomes,\n            };\n            Log.debug('Notify SW to deactivate session (beforeunload)');\n            this.context.workerMessenger.directPostMessageToSW(WorkerMessengerCommand.SessionDeactivate, payload);\n        }\n        catch (e) {\n            Log.error('Error handling onbeforeunload:', e);\n        }\n    }\n    async handleOnFocus(e) {\n        var _a;\n        Log.debug('handleOnFocus', e);\n        if (!((_a = User.singletonInstance) === null || _a === void 0 ? void 0 : _a.hasOneSignalId)) {\n            return;\n        }\n        try {\n            /**\n             * Firefox has 2 focus events with different targets (document and window).\n             * While Chrome only has one on window.\n             * Target check is important to avoid double-firing of the event.\n             */\n            if (e.target !== window) {\n                return;\n            }\n            const { onesignalId, subscriptionId } = await this._getOneSignalAndSubscriptionIds();\n            await this.notifySWToUpsertSession(onesignalId, subscriptionId, SessionOrigin.Focus);\n        }\n        catch (e) {\n            Log.error('Error handling focus:', e);\n        }\n    }\n    async handleOnBlur(e) {\n        var _a;\n        Log.debug('handleOnBlur', e);\n        if (!((_a = User.singletonInstance) === null || _a === void 0 ? void 0 : _a.hasOneSignalId)) {\n            return;\n        }\n        try {\n            /**\n             * Firefox has 2 focus events with different targets (document and window).\n             * While Chrome only has one on window.\n             * Target check is important to avoid double-firing of the event.\n             */\n            if (e.target !== window) {\n                return;\n            }\n            const { onesignalId, subscriptionId } = await this._getOneSignalAndSubscriptionIds();\n            await this.notifySWToDeactivateSession(onesignalId, subscriptionId, SessionOrigin.Blur);\n        }\n        catch (e) {\n            Log.error('Error handling blur:', e);\n        }\n    }\n    async upsertSession(sessionOrigin) {\n        var _a, _b;\n        if ((_a = User.singletonInstance) === null || _a === void 0 ? void 0 : _a.hasOneSignalId) {\n            const { onesignalId, subscriptionId } = await this._getOneSignalAndSubscriptionIds();\n            await this.notifySWToUpsertSession(onesignalId, subscriptionId, sessionOrigin);\n        }\n        if ((_b = this.context.environmentInfo) === null || _b === void 0 ? void 0 : _b.isBrowserAndSupportsServiceWorkers) {\n            this.setupSessionEventListeners();\n        }\n        else {\n            this.onSessionSent = sessionOrigin === SessionOrigin.UserCreate;\n            OneSignal.emitter.emit(OneSignal.EVENTS.SESSION_STARTED);\n        }\n    }\n    setupSessionEventListeners() {\n        var _a;\n        // Only want these events if it's using subscription workaround\n        if (!((_a = this.context.environmentInfo) === null || _a === void 0 ? void 0 : _a.isBrowserAndSupportsServiceWorkers)) {\n            Log.debug('Not setting session event listeners. No service worker possible.');\n            return;\n        }\n        // Page lifecycle events https://developers.google.com/web/updates/2018/07/page-lifecycle-api\n        this.setupOnFocusAndOnBlurForSession();\n        // To make sure we add these event listeners only once.\n        if (!OneSignal.cache.isVisibilityChangeEventSetup) {\n            // tracks switching to a different tab, fully covering page with another window, screen lock/unlock\n            document.addEventListener('visibilitychange', this.handleVisibilityChange.bind(this), true);\n            OneSignal.cache.isVisibilityChangeEventSetup = true;\n        }\n        if (!OneSignal.cache.isBeforeUnloadEventSetup) {\n            // tracks closing of a tab / reloading / navigating away\n            window.addEventListener('beforeunload', (e) => {\n                this.handleOnBeforeUnload();\n                // deleting value to not show confirmation dialog\n                delete e.returnValue;\n            }, true);\n            OneSignal.cache.isBeforeUnloadEventSetup = true;\n        }\n    }\n    setupOnFocusAndOnBlurForSession() {\n        Log.debug('setupOnFocusAndOnBlurForSession');\n        if (!OneSignal.cache.focusHandler) {\n            OneSignal.cache.focusHandler = this.handleOnFocus.bind(this);\n        }\n        if (!OneSignal.cache.isFocusEventSetup) {\n            window.addEventListener('focus', OneSignal.cache.focusHandler, true);\n            OneSignal.cache.isFocusEventSetup = true;\n        }\n        if (!OneSignal.cache.blurHandler) {\n            OneSignal.cache.blurHandler = this.handleOnBlur.bind(this);\n        }\n        if (!OneSignal.cache.isBlurEventSetup) {\n            window.addEventListener('blur', OneSignal.cache.blurHandler, true);\n            OneSignal.cache.isBlurEventSetup = true;\n        }\n    }\n    // If user has been subscribed before, send the on_session update to our backend on the first page view.\n    async sendOnSessionUpdateFromPage() {\n        var _a, _b;\n        const earlyReturn = this.onSessionSent || !this.context.pageViewManager.isFirstPageView();\n        if (earlyReturn) {\n            return;\n        }\n        const identityModel = OneSignal.coreDirector.getIdentityModel();\n        const onesignalId = (_a = identityModel === null || identityModel === void 0 ? void 0 : identityModel.data) === null || _a === void 0 ? void 0 : _a.id;\n        if (!onesignalId) {\n            Log.debug('Not sending the on session because user is not registered with OneSignal (no onesignal id)');\n            return;\n        }\n        const pushSubscription = await OneSignal.coreDirector.getPushSubscriptionModel();\n        if ((pushSubscription === null || pushSubscription === void 0 ? void 0 : pushSubscription.data.notification_types) !==\n            SubscriptionStateKind.Subscribed &&\n            ((_b = OneSignal.config) === null || _b === void 0 ? void 0 : _b.enableOnSession) !== true) {\n            return;\n        }\n        let subscriptionId;\n        if (isCompleteSubscriptionObject(pushSubscription === null || pushSubscription === void 0 ? void 0 : pushSubscription.data)) {\n            subscriptionId = pushSubscription === null || pushSubscription === void 0 ? void 0 : pushSubscription.data.id;\n        }\n        try {\n            const aliasPair = new AliasPair(AliasPair.ONESIGNAL_ID, onesignalId);\n            // TO DO: in future, we should aggregate session count in case network call fails\n            const updateUserPayload = {\n                refresh_device_metadata: true,\n                deltas: {\n                    session_count: 1,\n                },\n            };\n            const appId = await MainHelper.getAppId();\n            Utils.enforceAppId(appId);\n            Utils.enforceAlias(aliasPair);\n            try {\n                await RequestService.updateUser({ appId, subscriptionId }, aliasPair, updateUserPayload);\n                this.onSessionSent = true;\n            }\n            catch (e) {\n                Log.debug('Error updating user session:', e);\n            }\n        }\n        catch (e) {\n            Log.error(`Failed to update user session. Error \"${e.message}\" ${e.stack}`);\n        }\n    }\n}\n//# sourceMappingURL=SessionManager.js.map","import TagUtils from '../../../shared/utils/TagUtils';\nimport Log from '../../../shared/libraries/Log';\n/**\n * Manages tags for the TaggingContainer\n */\nexport default class TagManager {\n    constructor(context) {\n        // local tags from tagging container\n        this.tagsFromTaggingContainer = {};\n        this.remoteTags = {};\n        this.context = context;\n    }\n    /**\n     * @returns Promise resolving TagsObject if successful, {} if no change detected, null if failed\n     */\n    async sendTags() {\n        Log.info('Category Slidedown Local Tags:', this.tagsFromTaggingContainer);\n        const localTagsConvertedToApi = TagUtils.convertTagsBooleansToApi(this.tagsFromTaggingContainer);\n        const finalTagsObject = TagUtils.getObjectDifference(localTagsConvertedToApi, this.remoteTags);\n        const shouldSendUpdate = !TagUtils.isTagObjectEmpty(finalTagsObject);\n        if (shouldSendUpdate) {\n            return (await OneSignal.User.addTags(finalTagsObject));\n        }\n        Log.warn('OneSignal: no change detected in Category preferences. Skipping tag update.');\n        // no change detected, return {}\n        return finalTagsObject;\n    }\n    /**\n     * @param  {TagsObject} tags - values of type \"boolean\"\n     * @returns void\n     */\n    storeTagValuesToUpdate(tags) {\n        this.tagsFromTaggingContainer = tags;\n    }\n    /**\n     * @param  {TagsObject} remoteTags - values of type \"number\"\n     * @returns void\n     */\n    storeRemotePlayerTags(remoteTags) {\n        this.context.tagManager.remoteTags = remoteTags;\n    }\n}\n//# sourceMappingURL=TagManager.js.map","export function getLoadingIndicatorWithColor(color) {\n    return `<svg viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" width=\"24px\" height=\"24px\" fill=\"${color}\"> <g transform=\"rotate(0 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.916s\" repeatCount=\"indefinite\"/> </rect> </g> <g transform=\"rotate(30 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.833s\" repeatCount=\"indefinite\"/> </rect> </g> <g transform=\"rotate(60 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.75s\" repeatCount=\"indefinite\"/> </rect> </g> <g transform=\"rotate(90 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.666s\"/> </rect> </g> <g transform=\"rotate(120 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.583s\"/> </rect> </g> <g transform=\"rotate(150 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.5s\"/> </rect> </g> <g transform=\"rotate(180 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.416s\"/> </rect> </g> <g transform=\"rotate(210 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.333s\"/> </rect> </g> <g transform=\"rotate(240 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.25s\"/> </rect> </g> <g transform=\"rotate(270 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.166s\"/> </rect> </g> <g transform=\"rotate(300 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.083s\"/> </rect> </g> <g transform=\"rotate(330 50 50)\"> <rect x=\"46\" y=\"6\" rx=\"36.8\" ry=\"4.8\" width=\"8\" height=\"24\" > <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0s\"/> </rect> </g> </svg>`;\n}\n//# sourceMappingURL=LoadingIndicator.js.map","import { addDomElement, removeDomElement, addCssClass, removeCssClass, getDomElementOrStub, } from '../../shared/utils/utils';\nimport { getLoadingIndicatorWithColor } from './LoadingIndicator';\nimport { SLIDEDOWN_CSS_IDS, TAGGING_CONTAINER_CSS_CLASSES, TAGGING_CONTAINER_CSS_IDS, TAGGING_CONTAINER_STRINGS, COLORS, SLIDEDOWN_CSS_CLASSES, } from '../../shared/slidedown/constants';\nimport TagUtils from '../../shared/utils/TagUtils';\nexport default class TaggingContainer {\n    mount(remoteTagCategories, existingPlayerTags) {\n        const taggingContainer = this.generateHtml(remoteTagCategories, existingPlayerTags);\n        const body = getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.body}`);\n        body.appendChild(taggingContainer);\n        if (this.taggingContainer) {\n            this.taggingContainer.addEventListener('change', this.toggleCheckedTag);\n        }\n        const allowButton = getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.allowButton}`);\n        allowButton.disabled = false;\n        removeCssClass(allowButton, 'disabled');\n        removeDomElement(`#${SLIDEDOWN_CSS_IDS.loadingContainer}`);\n    }\n    /**\n     * No longer used as of user model changes, but may be useful in the future\n     */\n    load() {\n        const loadingContainer = getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.loadingContainer}`);\n        const allowButton = getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.allowButton}`);\n        const loadingMessageContainer = document.createElement('div');\n        addCssClass(loadingContainer, `${SLIDEDOWN_CSS_CLASSES.loadingContainer}`);\n        addCssClass(loadingMessageContainer, TAGGING_CONTAINER_CSS_CLASSES.loadingMessage);\n        addCssClass(allowButton, 'disabled');\n        addDomElement(loadingContainer, 'beforeend', getLoadingIndicatorWithColor(COLORS.greyLoadingIndicator));\n        loadingMessageContainer.innerText =\n            TAGGING_CONTAINER_STRINGS.fetchingPreferences;\n        loadingContainer.appendChild(loadingMessageContainer);\n        allowButton.disabled = true;\n    }\n    generateHtml(remoteTagCategories, existingPlayerTags) {\n        const checkedTagCategories = TagUtils.getCheckedTagCategories(remoteTagCategories, existingPlayerTags);\n        const firstColumnArr = checkedTagCategories.filter((elem) => checkedTagCategories.indexOf(elem) % 2 === 0);\n        const secondColumnArr = checkedTagCategories.filter((elem) => checkedTagCategories.indexOf(elem) % 2);\n        const firstColumnContainer = document.createElement('div');\n        const secondColumnContainer = document.createElement('div');\n        const taggingContainer = document.createElement('div');\n        addCssClass(firstColumnContainer, TAGGING_CONTAINER_CSS_CLASSES.taggingContainerCol);\n        addCssClass(secondColumnContainer, TAGGING_CONTAINER_CSS_CLASSES.taggingContainerCol);\n        addCssClass(taggingContainer, TAGGING_CONTAINER_CSS_CLASSES.taggingContainer);\n        taggingContainer.id = TAGGING_CONTAINER_CSS_IDS.taggingContainer;\n        firstColumnArr.forEach((elem) => {\n            firstColumnContainer.appendChild(this.getCategoryLabelElement(elem));\n        });\n        secondColumnArr.forEach((elem) => {\n            secondColumnContainer.appendChild(this.getCategoryLabelElement(elem));\n        });\n        taggingContainer.appendChild(firstColumnContainer);\n        taggingContainer.appendChild(secondColumnContainer);\n        return taggingContainer;\n    }\n    getCategoryLabelElement(tagCategory) {\n        const { label } = tagCategory;\n        const labelElement = document.createElement('label');\n        const labelSpan = document.createElement('span');\n        const inputElement = document.createElement('input');\n        const checkmarkSpan = document.createElement('span');\n        const clear = document.createElement('div');\n        const wrappingDiv = document.createElement('div');\n        addCssClass(labelElement, TAGGING_CONTAINER_CSS_CLASSES.categoryLabel);\n        addCssClass(labelSpan, TAGGING_CONTAINER_CSS_CLASSES.categoryLabelText);\n        addCssClass(inputElement, TAGGING_CONTAINER_CSS_CLASSES.categoryLabelInput);\n        addCssClass(checkmarkSpan, TAGGING_CONTAINER_CSS_CLASSES.checkmark);\n        labelElement.title = label;\n        labelSpan.innerText = label;\n        inputElement.type = 'checkbox';\n        inputElement.value = tagCategory.tag;\n        inputElement.checked = !!tagCategory.checked;\n        labelElement.appendChild(labelSpan);\n        labelElement.appendChild(inputElement);\n        labelElement.appendChild(checkmarkSpan);\n        clear.setAttribute('style', 'clear:both');\n        wrappingDiv.appendChild(labelElement);\n        wrappingDiv.appendChild(clear);\n        return wrappingDiv;\n    }\n    get taggingContainer() {\n        const selector = `#${SLIDEDOWN_CSS_IDS.body} > div.${TAGGING_CONTAINER_CSS_CLASSES.taggingContainer}`;\n        return getDomElementOrStub(selector);\n    }\n    toggleCheckedTag(e) {\n        const target = e.target;\n        if (target && target.getAttribute('type') === 'checkbox') {\n            const isChecked = target.checked;\n            target.setAttribute('checked', isChecked.toString());\n        }\n    }\n    static getValuesFromTaggingContainer() {\n        const selector = `#${SLIDEDOWN_CSS_IDS.body} > div.${TAGGING_CONTAINER_CSS_CLASSES.taggingContainer}` +\n            `> div > div > label > input[type=checkbox]`;\n        const inputNodeArr = document.querySelectorAll(selector);\n        const tags = {};\n        inputNodeArr.forEach((node) => {\n            tags[node.value] = node.checked;\n        });\n        return tags;\n    }\n}\n//# sourceMappingURL=TaggingContainer.js.map","export var ItiScriptURLs;\n(function (ItiScriptURLs) {\n    ItiScriptURLs[\"Stylesheet\"] = \"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.12/css/intlTelInput.min.css\";\n    ItiScriptURLs[\"Main\"] = \"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.12/js/intlTelInput.min.js\";\n    ItiScriptURLs[\"Utils\"] = \"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.12/js/utils.js\";\n})(ItiScriptURLs || (ItiScriptURLs = {}));\nexport var ItiScriptURLHashes;\n(function (ItiScriptURLHashes) {\n    ItiScriptURLHashes[\"Stylesheet\"] = \"sha512-yye/u0ehQsrVrfSd6biT17t39Rg9kNc+vENcCXZuMz2a+LWFGvXUnYuWUW6pbfYj1jcBb/C39UZw2ciQvwDDvg==\";\n    ItiScriptURLHashes[\"Main\"] = \"sha512-OnkjbJ4TwPpgSmjXACCb5J4cJwi880VRe+vWpPDlr8M38/L3slN5uUAeOeWU2jN+4vN0gImCXFGdJmc0wO4Mig==\";\n    ItiScriptURLHashes[\"Utils\"] = \"sha512-bUcJxlqkiGA3cmoYPuZaLRsyc5ChG9APG4ajom2AXKSlBtOmx4kLV3c8uv/6uSz43FMjI4Q2QI21+D223rT76w==\";\n})(ItiScriptURLHashes || (ItiScriptURLHashes = {}));\n//# sourceMappingURL=InternationalTelephoneInput.js.map","import OneSignalError from '../../shared/errors/OneSignalError';\nexport var InvalidChannelInputField;\n(function (InvalidChannelInputField) {\n    InvalidChannelInputField[InvalidChannelInputField[\"InvalidSms\"] = 0] = \"InvalidSms\";\n    InvalidChannelInputField[InvalidChannelInputField[\"InvalidEmail\"] = 1] = \"InvalidEmail\";\n    InvalidChannelInputField[InvalidChannelInputField[\"InvalidEmailAndSms\"] = 2] = \"InvalidEmailAndSms\";\n})(InvalidChannelInputField || (InvalidChannelInputField = {}));\nexport class ChannelCaptureError extends OneSignalError {\n    constructor(reason) {\n        let errorMessage;\n        switch (reason) {\n            case InvalidChannelInputField.InvalidEmail:\n                errorMessage = `Invalid email`;\n                break;\n            case InvalidChannelInputField.InvalidSms:\n                errorMessage = `Invalid sms`;\n                break;\n            case InvalidChannelInputField.InvalidEmailAndSms:\n                errorMessage = `Invalid email & sms`;\n                break;\n            default:\n                break;\n        }\n        super(errorMessage);\n        this.description = InvalidChannelInputField[reason];\n        this.reason = reason;\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n         * #extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, ChannelCaptureError.prototype);\n    }\n}\n//# sourceMappingURL=ChannelCaptureError.js.map","export var DismissPrompt;\n(function (DismissPrompt) {\n    DismissPrompt[\"Push\"] = \"push\";\n    DismissPrompt[\"NonPush\"] = \"nonPush\";\n})(DismissPrompt || (DismissPrompt = {}));\nexport var DismissCountKey;\n(function (DismissCountKey) {\n    DismissCountKey[\"PromptDismissCount\"] = \"promptDismissCount\";\n    DismissCountKey[\"NonPushPromptsDismissCount\"] = \"nonPushPromptsDismissCount\";\n})(DismissCountKey || (DismissCountKey = {}));\nexport var DismissTimeKey;\n(function (DismissTimeKey) {\n    // legacy. applies to 'push' and 'category' slidedown types + native prompt\n    DismissTimeKey[\"OneSignalNotificationPrompt\"] = \"onesignal-notification-prompt\";\n    // applies to all new slidedown types (e.g: smsAndEmail)\n    DismissTimeKey[\"OneSignalNonPushPrompt\"] = \"onesignal-non-push-prompt\";\n})(DismissTimeKey || (DismissTimeKey = {}));\n//# sourceMappingURL=Dismiss.js.map","import { addCssClass, getDomElementOrStub, removeCssClass, } from '../../shared/utils/utils';\nimport { CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES, CHANNEL_CAPTURE_CONTAINER_CSS_IDS, DANGER_ICON, SLIDEDOWN_CSS_IDS, } from '../../shared/slidedown/constants';\nimport { ItiScriptURLHashes, ItiScriptURLs, } from './InternationalTelephoneInput';\nimport Log from '../../shared/libraries/Log';\nimport { DelayedPromptType, } from '../../shared/models/Prompts';\nexport default class ChannelCaptureContainer {\n    constructor(promptOptions) {\n        this.smsInputFieldIsValid = true;\n        this.emailInputFieldIsValid = true;\n        this.promptOptions = promptOptions;\n    }\n    /* P R I V A T E */\n    generateHtml() {\n        const captureContainer = document.createElement('div');\n        addCssClass(captureContainer, CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.channelCaptureContainer);\n        captureContainer.id =\n            CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.channelCaptureContainer;\n        let label, smsInputElement, emailInputElement;\n        switch (this.promptOptions.type) {\n            case DelayedPromptType.Sms:\n                label = this.promptOptions.text.smsLabel || 'Phone Number';\n                smsInputElement = this.getInputWithValidationElement(DelayedPromptType.Sms, label);\n                captureContainer.appendChild(smsInputElement);\n                break;\n            case DelayedPromptType.Email:\n                label = this.promptOptions.text.emailLabel || 'Email';\n                emailInputElement = this.getInputWithValidationElement(DelayedPromptType.Email, label);\n                captureContainer.appendChild(emailInputElement);\n                break;\n            case DelayedPromptType.SmsAndEmail:\n                label = this.promptOptions.text.emailLabel || 'Email';\n                emailInputElement = this.getInputWithValidationElement(DelayedPromptType.Email, label);\n                captureContainer.appendChild(emailInputElement);\n                label = this.promptOptions.text.smsLabel || 'Phone Number';\n                smsInputElement = this.getInputWithValidationElement(DelayedPromptType.Sms, label);\n                captureContainer.appendChild(smsInputElement);\n                break;\n            default:\n                break;\n        }\n        return captureContainer;\n    }\n    getValidationElementWithMessage(message) {\n        const wrapperDiv = document.createElement('div');\n        const iconElement = document.createElement('img');\n        const errorMessage = document.createElement('p');\n        errorMessage.innerText = message;\n        iconElement.setAttribute('src', DANGER_ICON);\n        wrapperDiv.appendChild(iconElement);\n        wrapperDiv.appendChild(errorMessage);\n        return wrapperDiv;\n    }\n    getInputWithValidationElement(type, label) {\n        const varPayload = this.getTypeSpecificVariablesForValidationElemGeneration(type); // {message}\n        const labelElement = document.createElement('label');\n        const inputElement = document.createElement('input');\n        const clear = document.createElement('div');\n        const clear2 = document.createElement('div');\n        const validationElement = this.getValidationElementWithMessage(varPayload.message);\n        const wrappingDiv = document.createElement('div');\n        clear.setAttribute('style', 'clear:both');\n        clear2.setAttribute('style', 'clear:both');\n        addCssClass(validationElement, CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalValidationElementHidden);\n        addCssClass(validationElement, CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalValidationElement);\n        validationElement.id = varPayload.validationElementId;\n        labelElement.title = label;\n        labelElement.innerText = label;\n        labelElement.htmlFor = varPayload.inputElementId;\n        inputElement.type = varPayload.domElementType;\n        inputElement.id = varPayload.inputElementId;\n        inputElement.tabIndex = varPayload.tabIndex;\n        addCssClass(inputElement, varPayload.inputClass);\n        addCssClass(wrappingDiv, CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.inputWithValidationElement);\n        wrappingDiv.id = varPayload.wrappingDivId;\n        wrappingDiv.appendChild(labelElement);\n        wrappingDiv.appendChild(clear);\n        wrappingDiv.appendChild(inputElement);\n        wrappingDiv.appendChild(clear2);\n        wrappingDiv.appendChild(validationElement);\n        return wrappingDiv;\n    }\n    getTypeSpecificVariablesForValidationElemGeneration(type) {\n        if (type === DelayedPromptType.Email) {\n            return {\n                message: 'Please enter a valid email',\n                domElementType: 'email',\n                validationElementId: CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalEmailValidationElement,\n                inputElementId: CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalEmailInput,\n                inputClass: CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalEmailInput,\n                wrappingDivId: CHANNEL_CAPTURE_CONTAINER_CSS_IDS.emailInputWithValidationElement,\n                tabIndex: 1,\n            };\n        }\n        else if (type === DelayedPromptType.Sms) {\n            return {\n                message: 'Please enter a valid phone number',\n                domElementType: 'tel',\n                validationElementId: CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalSmsValidationElement,\n                inputElementId: CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalSmsInput,\n                inputClass: CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalSmsInput,\n                wrappingDivId: CHANNEL_CAPTURE_CONTAINER_CSS_IDS.smsInputWithValidationElement,\n                tabIndex: 2,\n            };\n        }\n        else\n            throw new Error('invalid channel type for input validation');\n    }\n    initializePhoneInputLibrary() {\n        const onesignalSmsInput = getDomElementOrStub(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalSmsInput}`);\n        if (onesignalSmsInput && !!window.intlTelInput) {\n            this.itiOneSignal = window.intlTelInput(onesignalSmsInput, {\n                autoPlaceholder: 'off',\n                separateDialCode: true,\n            });\n        }\n        else {\n            Log.error('OneSignal: there was a problem initializing International Telephone Input');\n        }\n    }\n    addSmsInputEventListeners() {\n        const smsInput = getDomElementOrStub(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalSmsInput}`);\n        smsInput.addEventListener('keyup', (event) => {\n            var _a;\n            this.smsInputFieldIsValid =\n                this.itiOneSignal.isValidNumber() ||\n                    (smsInput === null || smsInput === void 0 ? void 0 : smsInput.value) === '';\n            if (event.key === 'Enter') {\n                // Trigger the button element with a click\n                (_a = document.getElementById(SLIDEDOWN_CSS_IDS.allowButton)) === null || _a === void 0 ? void 0 : _a.click();\n            }\n            this.updateValidationOnSmsInputChange();\n        });\n        // handles case where number is typed, then country is changed after\n        smsInput.addEventListener('blur', () => {\n            this.smsInputFieldIsValid =\n                this.itiOneSignal.isValidNumber() ||\n                    (smsInput === null || smsInput === void 0 ? void 0 : smsInput.value) === '';\n            this.updateValidationOnSmsInputChange();\n        });\n    }\n    addEmailInputEventListeners() {\n        const emailInput = getDomElementOrStub(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalEmailInput}`);\n        emailInput.addEventListener('keyup', (event) => {\n            var _a;\n            const emailValue = emailInput === null || emailInput === void 0 ? void 0 : emailInput.value;\n            this.emailInputFieldIsValid =\n                ChannelCaptureContainer.validateEmailInputWithReturnVal(emailValue);\n            if (event.key === 'Enter') {\n                // Trigger the button element with a click\n                (_a = document.getElementById(SLIDEDOWN_CSS_IDS.allowButton)) === null || _a === void 0 ? void 0 : _a.click();\n            }\n            this.updateValidationOnEmailInputChange();\n        });\n    }\n    updateValidationOnSmsInputChange() {\n        const smsInputWithValidation = getDomElementOrStub(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.smsInputWithValidationElement}`);\n        const smsValidationElement = getDomElementOrStub(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalSmsValidationElement}`);\n        removeCssClass(smsInputWithValidation, CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalErrorInput);\n        addCssClass(smsValidationElement, CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalValidationElementHidden);\n    }\n    updateValidationOnEmailInputChange() {\n        const emailInputWithValidation = getDomElementOrStub(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.emailInputWithValidationElement}`);\n        const emailValidationElement = getDomElementOrStub(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalEmailValidationElement}`);\n        removeCssClass(emailInputWithValidation, CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalErrorInput);\n        addCssClass(emailValidationElement, CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalValidationElementHidden);\n    }\n    async loadPhoneLibraryScripts() {\n        if (OneSignal._didLoadITILibrary) {\n            return;\n        }\n        const script1 = document.createElement('script');\n        const script2 = document.createElement('script');\n        const link = document.createElement('link');\n        script1.src = ItiScriptURLs.Main;\n        script2.src = ItiScriptURLs.Utils;\n        link.href = ItiScriptURLs.Stylesheet;\n        link.rel = 'stylesheet';\n        script1.integrity = ItiScriptURLHashes.Main;\n        script2.integrity = ItiScriptURLHashes.Utils;\n        link.integrity = ItiScriptURLHashes.Stylesheet;\n        script1.crossOrigin = 'anonymous';\n        script2.crossOrigin = 'anonymous';\n        link.crossOrigin = 'anonymous';\n        document.head.appendChild(script1);\n        document.head.appendChild(script2);\n        document.head.appendChild(link);\n        const promise1 = new Promise((resolve) => {\n            script1.onload = () => {\n                resolve();\n            };\n        });\n        const promise2 = new Promise((resolve) => {\n            script2.onload = () => {\n                resolve();\n            };\n        });\n        await Promise.all([promise1, promise2]);\n        OneSignal._didLoadITILibrary = true;\n    }\n    /* P U B L I C */\n    async mount() {\n        const isUsingSms = ChannelCaptureContainer.isUsingSmsInputField(this.promptOptions.type);\n        const isUsingEmail = ChannelCaptureContainer.isUsingEmailInputField(this.promptOptions.type);\n        if (isUsingSms) {\n            await this.loadPhoneLibraryScripts();\n        }\n        const captureContainer = this.generateHtml();\n        const body = getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.body}`);\n        body.appendChild(captureContainer);\n        if (isUsingSms) {\n            this.initializePhoneInputLibrary();\n            this.addSmsInputEventListeners();\n        }\n        if (isUsingEmail) {\n            this.addEmailInputEventListeners();\n        }\n    }\n    isEmailInputFieldEmpty() {\n        return this.getValueFromEmailInput() === '';\n    }\n    isSmsInputFieldEmpty() {\n        return this.getValueFromSmsInput() === '';\n    }\n    getValueFromEmailInput() {\n        const inputNode = getDomElementOrStub(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalEmailInput}`);\n        return (inputNode === null || inputNode === void 0 ? void 0 : inputNode.value) || '';\n    }\n    getValueFromSmsInput() {\n        return (this.itiOneSignal.getNumber(intlTelInputUtils.numberFormat.E164) || '');\n    }\n    /* S T A T I C */\n    static showSmsInputError(state) {\n        const validationElement = document.querySelector(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalSmsValidationElement}`);\n        const inputElement = document.querySelector(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.smsInputWithValidationElement}`);\n        if (!validationElement || !inputElement) {\n            Log.error(\"OneSignal: couldn't find slidedown validation element\");\n            return;\n        }\n        if (state) {\n            validationElement.classList.remove(CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalValidationElementHidden);\n            inputElement.classList.add(CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalErrorInput);\n        }\n        else {\n            validationElement.classList.add(CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalValidationElementHidden);\n            inputElement.classList.remove(CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalErrorInput);\n        }\n    }\n    static showEmailInputError(state) {\n        const validationElement = document.querySelector(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.onesignalEmailValidationElement}`);\n        const inputElement = document.querySelector(`#${CHANNEL_CAPTURE_CONTAINER_CSS_IDS.emailInputWithValidationElement}`);\n        if (!validationElement || !inputElement) {\n            Log.error(\"OneSignal: couldn't find slidedown validation element\");\n            return;\n        }\n        if (state) {\n            // show error\n            validationElement.classList.remove(CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalValidationElementHidden);\n            inputElement.classList.add(CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalErrorInput);\n        }\n        else {\n            validationElement.classList.add(CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalValidationElementHidden);\n            inputElement.classList.remove(CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES.onesignalErrorInput);\n        }\n    }\n    static resetInputErrorStates(type) {\n        switch (type) {\n            case DelayedPromptType.Sms:\n                ChannelCaptureContainer.showSmsInputError(false);\n                break;\n            case DelayedPromptType.Email:\n                ChannelCaptureContainer.showEmailInputError(false);\n                break;\n            case DelayedPromptType.SmsAndEmail:\n                ChannelCaptureContainer.showSmsInputError(false);\n                ChannelCaptureContainer.showEmailInputError(false);\n                break;\n            default:\n                break;\n        }\n    }\n    static validateEmailInputWithReturnVal(emailString) {\n        const re = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n        return re.test(emailString || '') || emailString === '';\n    }\n    static isUsingSmsInputField(type) {\n        return (type === DelayedPromptType.Sms || type === DelayedPromptType.SmsAndEmail);\n    }\n    static isUsingEmailInputField(type) {\n        return (type === DelayedPromptType.Email || type === DelayedPromptType.SmsAndEmail);\n    }\n}\n//# sourceMappingURL=ChannelCaptureContainer.js.map","import OneSignalEvent from '../../shared/services/OneSignalEvent';\nimport MainHelper from '../../shared/helpers/MainHelper';\nimport { addCssClass, addDomElement, getPlatformNotificationIcon, once, removeDomElement, removeCssClass, getDomElementOrStub, } from '../../shared/utils/utils';\nimport { SERVER_CONFIG_DEFAULTS_SLIDEDOWN } from '../../shared/config/constants';\nimport { getLoadingIndicatorWithColor } from './LoadingIndicator';\nimport { getRetryIndicator } from './RetryIndicator';\nimport { SLIDEDOWN_CSS_CLASSES, SLIDEDOWN_CSS_IDS, COLORS, } from '../../shared/slidedown/constants';\nimport { getSlidedownElement } from './SlidedownElement';\nimport { Utils } from '../../shared/context/Utils';\nimport ChannelCaptureContainer from './ChannelCaptureContainer';\nimport PromptsHelper from '../../shared/helpers/PromptsHelper';\nimport { DelayedPromptType, } from '../../shared/models/Prompts';\nimport { InvalidChannelInputField } from '../errors/ChannelCaptureError';\nimport { bowserCastle } from '../../shared/utils/bowserCastle';\nexport default class Slidedown {\n    constructor(options) {\n        var _a, _b, _c;\n        this.savingButton = SERVER_CONFIG_DEFAULTS_SLIDEDOWN.savingText;\n        this.errorButton = SERVER_CONFIG_DEFAULTS_SLIDEDOWN.errorButton;\n        this.options = options;\n        this.options.text.actionMessage = options.text.actionMessage.substring(0, 90);\n        this.options.text.acceptButton = options.text.acceptButton.substring(0, 16);\n        this.options.text.cancelButton = options.text.cancelButton.substring(0, 16);\n        this.notificationIcons = null;\n        this.channelCaptureContainer = null;\n        this.isShowingFailureState = false;\n        switch (options.type) {\n            case DelayedPromptType.Category:\n                this.negativeUpdateButton =\n                    (_a = this.options.text.negativeUpdateButton) === null || _a === void 0 ? void 0 : _a.substring(0, 16);\n                this.positiveUpdateButton =\n                    (_b = this.options.text.positiveUpdateButton) === null || _b === void 0 ? void 0 : _b.substring(0, 16);\n                this.updateMessage = (_c = this.options.text.updateMessage) === null || _c === void 0 ? void 0 : _c.substring(0, 90);\n                this.tagCategories = options.categories;\n                this.errorButton = Utils.getValueOrDefault(this.options.text.positiveUpdateButton, SERVER_CONFIG_DEFAULTS_SLIDEDOWN.errorButton);\n                break;\n            case DelayedPromptType.Sms:\n            case DelayedPromptType.Email:\n            case DelayedPromptType.SmsAndEmail:\n                this.errorButton = Utils.getValueOrDefault(this.options.text.acceptButton, SERVER_CONFIG_DEFAULTS_SLIDEDOWN.errorButton);\n                break;\n            default:\n                break;\n        }\n    }\n    async create(isInUpdateMode) {\n        // TODO: dynamically change btns depending on if its first or repeat display of slidedown (subscribe vs update)\n        if (this.notificationIcons === null) {\n            const icons = await MainHelper.getNotificationIcons();\n            this.notificationIcons = icons;\n            // Remove any existing container\n            if (this.container.className.includes(SLIDEDOWN_CSS_CLASSES.container)) {\n                removeDomElement(`#${SLIDEDOWN_CSS_IDS.container}`);\n            }\n            const positiveButtonText = isInUpdateMode && !!this.tagCategories\n                ? this.positiveUpdateButton\n                : this.options.text.acceptButton;\n            const negativeButtonText = isInUpdateMode && !!this.tagCategories\n                ? this.negativeUpdateButton\n                : this.options.text.cancelButton;\n            const messageText = isInUpdateMode && !!this.tagCategories\n                ? this.updateMessage\n                : this.options.text.actionMessage;\n            // use the prompt-specific icon OR the app default icon\n            const icon = this.options.icon || this.getPlatformNotificationIcon();\n            const slidedownElement = getSlidedownElement({\n                messageText,\n                icon,\n                positiveButtonText,\n                negativeButtonText,\n            });\n            const slidedownContainer = document.createElement('div');\n            const dialogContainer = document.createElement('div');\n            // Insert the container\n            slidedownContainer.id = SLIDEDOWN_CSS_IDS.container;\n            addCssClass(slidedownContainer, SLIDEDOWN_CSS_CLASSES.container);\n            addCssClass(slidedownContainer, SLIDEDOWN_CSS_CLASSES.reset);\n            getDomElementOrStub('body').appendChild(slidedownContainer);\n            // Insert the dialog\n            dialogContainer.id = SLIDEDOWN_CSS_IDS.dialog;\n            addCssClass(dialogContainer, SLIDEDOWN_CSS_CLASSES.dialog);\n            dialogContainer.appendChild(slidedownElement);\n            this.container.appendChild(dialogContainer);\n            // Animate it in depending on environment\n            addCssClass(this.container, bowserCastle().mobile\n                ? SLIDEDOWN_CSS_CLASSES.slideUp\n                : SLIDEDOWN_CSS_CLASSES.slideDown);\n            // Add click event handlers\n            this.allowButton.addEventListener('click', this.onSlidedownAllowed.bind(this));\n            this.cancelButton.addEventListener('click', this.onSlidedownCanceled.bind(this));\n        }\n    }\n    static async triggerSlidedownEvent(eventName) {\n        await OneSignalEvent.trigger(eventName);\n    }\n    async onSlidedownAllowed(_) {\n        await Slidedown.triggerSlidedownEvent(Slidedown.EVENTS.ALLOW_CLICK);\n    }\n    onSlidedownCanceled(_) {\n        Slidedown.triggerSlidedownEvent(Slidedown.EVENTS.CANCEL_CLICK);\n        this.close();\n        Slidedown.triggerSlidedownEvent(Slidedown.EVENTS.CLOSED);\n    }\n    close() {\n        addCssClass(this.container, SLIDEDOWN_CSS_CLASSES.closeSlidedown);\n        once(this.dialog, 'animationend', (event, destroyListenerFn) => {\n            if (event.target === this.dialog &&\n                (event.animationName === 'slideDownExit' ||\n                    event.animationName === 'slideUpExit')) {\n                // Uninstall the event listener for animationend\n                removeDomElement(`#${SLIDEDOWN_CSS_IDS.container}`);\n                destroyListenerFn();\n                /**\n                 * Remember to trigger closed event after invoking close()\n                 * This is due to the once() function not running correctly in test environment\n                 */\n            }\n        }, true);\n    }\n    /**\n     * To be used with slidedown types other than `push` type\n     */\n    setSaveState() {\n        // note: savingButton is hardcoded in constructor. TODO: pull from config & set defaults for future release\n        this.allowButton.disabled = true;\n        this.allowButton.textContent = null;\n        this.allowButton.insertAdjacentElement('beforeend', this.getTextSpan(this.savingButton));\n        this.allowButton.insertAdjacentElement('beforeend', this.getIndicatorHolder());\n        addDomElement(this.buttonIndicatorHolder, 'beforeend', getLoadingIndicatorWithColor(COLORS.whiteLoadingIndicator));\n        addCssClass(this.allowButton, 'disabled');\n        addCssClass(this.allowButton, SLIDEDOWN_CSS_CLASSES.savingStateButton);\n    }\n    /**\n     * To be used with slidedown types other than `push` type\n     */\n    removeSaveState() {\n        this.allowButton.textContent = this.positiveUpdateButton;\n        removeDomElement(`#${SLIDEDOWN_CSS_CLASSES.buttonIndicatorHolder}`);\n        this.allowButton.disabled = false;\n        removeCssClass(this.allowButton, 'disabled');\n        removeCssClass(this.allowButton, SLIDEDOWN_CSS_CLASSES.savingStateButton);\n    }\n    /**\n     * @param  {InvalidChannelInputField} invalidChannelInput? - for use in Web Prompts only!\n     *    we want the ability to be able to specify which channel input failed validation\n     * @returns void\n     */\n    setFailureState() {\n        this.allowButton.textContent = null;\n        this.allowButton.insertAdjacentElement('beforeend', this.getTextSpan(this.errorButton));\n        if (this.options.type === DelayedPromptType.Category) {\n            this.allowButton.insertAdjacentElement('beforeend', this.getIndicatorHolder());\n            addDomElement(this.buttonIndicatorHolder, 'beforeend', getRetryIndicator());\n            addCssClass(this.allowButton, 'onesignal-error-state-button');\n        }\n        this.isShowingFailureState = true;\n    }\n    setFailureStateForInvalidChannelInput(invalidChannelInput) {\n        switch (invalidChannelInput) {\n            case InvalidChannelInputField.InvalidSms:\n                ChannelCaptureContainer.showSmsInputError(true);\n                break;\n            case InvalidChannelInputField.InvalidEmail:\n                ChannelCaptureContainer.showEmailInputError(true);\n                break;\n            case InvalidChannelInputField.InvalidEmailAndSms:\n                ChannelCaptureContainer.showSmsInputError(true);\n                ChannelCaptureContainer.showEmailInputError(true);\n                break;\n            default:\n                break;\n        }\n    }\n    removeFailureState() {\n        removeDomElement('#onesignal-button-indicator-holder');\n        removeCssClass(this.allowButton, 'onesignal-error-state-button');\n        if (!PromptsHelper.isSlidedownPushDependent(this.options.type)) {\n            ChannelCaptureContainer.resetInputErrorStates(this.options.type);\n        }\n        this.isShowingFailureState = false;\n    }\n    getPlatformNotificationIcon() {\n        return getPlatformNotificationIcon(this.notificationIcons);\n    }\n    getIndicatorHolder() {\n        const indicatorHolder = document.createElement('div');\n        indicatorHolder.id = SLIDEDOWN_CSS_IDS.buttonIndicatorHolder;\n        addCssClass(indicatorHolder, SLIDEDOWN_CSS_CLASSES.buttonIndicatorHolder);\n        return indicatorHolder;\n    }\n    getTextSpan(text) {\n        const textHolder = document.createElement('span');\n        textHolder.textContent = text;\n        return textHolder;\n    }\n    get container() {\n        return getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.container}`);\n    }\n    get dialog() {\n        return getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.dialog}`);\n    }\n    get allowButton() {\n        return getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.allowButton}`);\n    }\n    get cancelButton() {\n        return getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.cancelButton}`);\n    }\n    get buttonIndicatorHolder() {\n        return getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.buttonIndicatorHolder}`);\n    }\n    get slidedownFooter() {\n        return getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.footer}`);\n    }\n    static get EVENTS() {\n        return {\n            ALLOW_CLICK: 'slidedownAllowClick',\n            CANCEL_CLICK: 'slidedownCancelClick',\n            SHOWN: 'slidedownShown',\n            CLOSED: 'slidedownClosed',\n            QUEUED: 'slidedownQueued',\n        };\n    }\n}\nexport function manageNotifyButtonStateWhileSlidedownShows() {\n    const notifyButton = OneSignal.notifyButton;\n    if (notifyButton &&\n        notifyButton.options.enable &&\n        OneSignal.notifyButton.launcher.state !== 'hidden') {\n        OneSignal.notifyButton.launcher.waitUntilShown().then(() => {\n            OneSignal.notifyButton.launcher.hide();\n        });\n    }\n    OneSignal.emitter.once(Slidedown.EVENTS.CLOSED, () => {\n        if (OneSignal.notifyButton && OneSignal.notifyButton.options.enable) {\n            OneSignal.notifyButton.launcher.show();\n        }\n    });\n}\n//# sourceMappingURL=Slidedown.js.map","import { DEFAULT_ICON, SLIDEDOWN_CSS_IDS, SLIDEDOWN_CSS_CLASSES, SLIDEDOWN_BUTTON_CLASSES, } from '../../shared/slidedown/constants';\nimport { addCssClass } from '../../shared/utils/utils';\nexport function getSlidedownElement(dialogProps) {\n    const { icon, messageText, positiveButtonText, negativeButtonText } = dialogProps;\n    const finalIcon = icon === SLIDEDOWN_CSS_CLASSES.defaultIcon ? DEFAULT_ICON : icon;\n    const finalIconClass = icon === SLIDEDOWN_CSS_CLASSES.defaultIcon\n        ? SLIDEDOWN_CSS_CLASSES.defaultIcon\n        : '';\n    const normalSlidedown = document.createElement('div');\n    const slidedownBody = document.createElement('div');\n    const bodyMessage = document.createElement('div');\n    const slidedownBodyIcon = document.createElement('div');\n    const loadingContainer = document.createElement('div');\n    const slidedownFooter = document.createElement('div');\n    const positiveButton = document.createElement('button');\n    const negativeButton = document.createElement('button');\n    const clearfix = document.createElement('div');\n    const clearfix2 = document.createElement('div');\n    const image = document.createElement('img');\n    addCssClass(slidedownBody, SLIDEDOWN_CSS_CLASSES.body);\n    addCssClass(slidedownBodyIcon, SLIDEDOWN_CSS_CLASSES.icon);\n    addCssClass(bodyMessage, SLIDEDOWN_CSS_CLASSES.message);\n    addCssClass(slidedownFooter, SLIDEDOWN_CSS_CLASSES.footer);\n    addCssClass(clearfix, SLIDEDOWN_CSS_CLASSES.clearfix);\n    addCssClass(clearfix2, SLIDEDOWN_CSS_CLASSES.clearfix);\n    addCssClass(positiveButton, SLIDEDOWN_BUTTON_CLASSES.alignRight);\n    addCssClass(positiveButton, SLIDEDOWN_BUTTON_CLASSES.primary);\n    addCssClass(positiveButton, SLIDEDOWN_BUTTON_CLASSES.slidedownButton);\n    addCssClass(negativeButton, SLIDEDOWN_BUTTON_CLASSES.alignRight);\n    addCssClass(negativeButton, SLIDEDOWN_BUTTON_CLASSES.secondary);\n    addCssClass(negativeButton, SLIDEDOWN_BUTTON_CLASSES.slidedownButton);\n    normalSlidedown.id = SLIDEDOWN_CSS_IDS.normalSlidedown;\n    slidedownBody.id = SLIDEDOWN_CSS_IDS.body;\n    loadingContainer.id = SLIDEDOWN_CSS_IDS.loadingContainer;\n    positiveButton.id = SLIDEDOWN_CSS_IDS.allowButton;\n    negativeButton.id = SLIDEDOWN_CSS_IDS.cancelButton;\n    slidedownFooter.id = SLIDEDOWN_CSS_IDS.footer;\n    if (finalIconClass) {\n        addCssClass(image, finalIconClass);\n    }\n    image.setAttribute('alt', 'notification icon');\n    image.setAttribute('src', finalIcon || '');\n    bodyMessage.innerText = messageText || '';\n    positiveButton.innerText = positiveButtonText || '';\n    negativeButton.innerText = negativeButtonText || '';\n    slidedownBodyIcon.appendChild(image);\n    slidedownBody.appendChild(slidedownBodyIcon);\n    slidedownBody.appendChild(bodyMessage);\n    slidedownBody.appendChild(clearfix);\n    slidedownBody.appendChild(loadingContainer);\n    slidedownFooter.appendChild(positiveButton);\n    slidedownFooter.appendChild(negativeButton);\n    slidedownFooter.appendChild(clearfix2);\n    normalSlidedown.appendChild(slidedownBody);\n    normalSlidedown.appendChild(slidedownFooter);\n    return normalSlidedown;\n}\n//# sourceMappingURL=SlidedownElement.js.map","export function getRetryIndicator(color = '#FFFFFF') {\n    return `<svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.711 2.652a5.489 5.489 0 00-4.044 4.05 5.513 5.513 0 00.104 2.968.167.167 0 00.25.089l.893-.588a.667.667 0 011.02.692l-.61 2.937a.667.667 0 01-.786.52L.6 12.713a.667.667 0 01-.232-1.21l.933-.615a.166.166 0 00.063-.2 7.167 7.167 0 018.828-9.516.833.833 0 01-.507 1.587 5.489 5.489 0 00-2.974-.108zM15.75 3.542c.09.096.15.216.172.346a.667.667 0 01-.301.681l-.898.564a.166.166 0 00-.066.2 7.167 7.167 0 01-8.77 9.514.835.835 0 01-.154-1.544.831.831 0 01.646-.048 5.5 5.5 0 006.856-6.949.167.167 0 00-.176-.114.164.164 0 00-.071.026l-.962.604a.667.667 0 01-1.005-.713l.667-2.924a.667.667 0 01.8-.502l2.925.667c.129.03.246.096.336.192z\" fill=\"${color}\"/></svg>`;\n}\n//# sourceMappingURL=RetryIndicator.js.map","import OneSignalError from '../../shared/errors/OneSignalError';\nexport default class PermissionMessageDismissedError extends OneSignalError {\n    constructor(type) {\n        super(`The permission message of type ${type || 'unknown'} was previously dismissed.`);\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n         * #extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, PermissionMessageDismissedError.prototype);\n    }\n}\n//# sourceMappingURL=PermissionMessageDismissedError.js.map","import OneSignalEvent from '../../shared/services/OneSignalEvent';\nimport { addCssClass, once, removeDomElement, getDomElementOrStub, } from '../../shared/utils/utils';\nimport { SLIDEDOWN_CSS_CLASSES, SLIDEDOWN_CSS_IDS, TOAST_CLASSES, TOAST_IDS, } from '../../shared/slidedown/constants';\nimport { bowserCastle } from '../../shared/utils/bowserCastle';\nexport default class ConfirmationToast {\n    constructor(message) {\n        this.message = message;\n    }\n    async show() {\n        const toastElement = document.createElement('div');\n        const toastText = document.createElement('p');\n        toastText.innerText = this.message;\n        toastElement.appendChild(toastText);\n        const slidedownContainer = document.createElement('div');\n        const dialogContainer = document.createElement('div');\n        // Insert the container\n        slidedownContainer.id = SLIDEDOWN_CSS_IDS.container;\n        toastElement.id = TOAST_IDS.toastText;\n        addCssClass(toastElement, TOAST_CLASSES.toastText);\n        addCssClass(slidedownContainer, SLIDEDOWN_CSS_CLASSES.container);\n        addCssClass(slidedownContainer, SLIDEDOWN_CSS_CLASSES.reset);\n        getDomElementOrStub('body').appendChild(slidedownContainer);\n        // Insert the dialog\n        dialogContainer.id = SLIDEDOWN_CSS_IDS.dialog;\n        addCssClass(dialogContainer, SLIDEDOWN_CSS_CLASSES.dialog);\n        dialogContainer.appendChild(toastElement);\n        this.container.appendChild(dialogContainer);\n        // Animate it in depending on environment\n        addCssClass(this.container, bowserCastle().mobile\n            ? SLIDEDOWN_CSS_CLASSES.slideUp\n            : SLIDEDOWN_CSS_CLASSES.slideDown);\n        ConfirmationToast.triggerSlidedownEvent(ConfirmationToast.EVENTS.SHOWN);\n    }\n    static async triggerSlidedownEvent(eventName) {\n        await OneSignalEvent.trigger(eventName);\n    }\n    close() {\n        addCssClass(this.container, SLIDEDOWN_CSS_CLASSES.closeSlidedown);\n        once(this.dialog, 'animationend', (event, destroyListenerFn) => {\n            if (event.target === this.dialog &&\n                (event.animationName === 'slideDownExit' ||\n                    event.animationName === 'slideUpExit')) {\n                // Uninstall the event listener for animationend\n                removeDomElement(`#${SLIDEDOWN_CSS_IDS.container}`);\n                destroyListenerFn();\n            }\n        }, true);\n    }\n    get container() {\n        return getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.container}`);\n    }\n    get dialog() {\n        return getDomElementOrStub(`#${SLIDEDOWN_CSS_IDS.dialog}`);\n    }\n    static get EVENTS() {\n        return {\n            SHOWN: 'toastShown',\n            CLOSED: 'toastClosed',\n        };\n    }\n}\n//# sourceMappingURL=ConfirmationToast.js.map","import OneSignalError from '../../shared/errors/OneSignalError';\nexport default class AlreadySubscribedError extends OneSignalError {\n    constructor() {\n        super('This operation can only be performed when the user is not subscribed.');\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, AlreadySubscribedError.prototype);\n    }\n}\n//# sourceMappingURL=AlreadySubscribedError.js.map","import OneSignalError from '../../shared/errors/OneSignalError';\nexport default class ExistingChannelError extends OneSignalError {\n    constructor(type) {\n        super(`This operation can only be performed when the channel '${type}' does not yet exist.`);\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#\n         * extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, ExistingChannelError.prototype);\n    }\n}\n//# sourceMappingURL=ExistingChannelError.js.map","/**\n * LocalStorage with expiring keys.\n *\n * Used when synchronous data access is required, like when clicking the notify button to show the\n * popup conditionally based on a storage value. IndexedDb and cross-frame communication is\n * asynchronous and loses the direct user action privilege required to show a popup.\n */\nexport default class TimedLocalStorage {\n    /**\n     * Performs a feature test to determine whether LocalStorage is accessible. For example, a user's\n     * browser preferences set to prevent saving website data will disable LocalStorage.\n     */\n    static isLocalStorageSupported() {\n        try {\n            if (typeof localStorage === 'undefined') {\n                return false;\n            }\n            localStorage.getItem('test');\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Sets a key in LocalStorage with an expiration time measured in minutes.\n     */\n    static setItem(key, value, expirationInMinutes) {\n        if (!TimedLocalStorage.isLocalStorageSupported()) {\n            return;\n        }\n        const expirationInMilliseconds = typeof expirationInMinutes !== 'undefined'\n            ? expirationInMinutes * 60 * 1000\n            : 0;\n        const record = {\n            value: JSON.stringify(value),\n            timestamp: typeof expirationInMinutes !== 'undefined'\n                ? new Date().getTime() + expirationInMilliseconds\n                : undefined,\n        };\n        localStorage.setItem(key, JSON.stringify(record));\n    }\n    /**\n     * Retrieves a key from LocalStorage if the expiration time when the key was set hasn't already\n     * expired.\n     */\n    static getItem(key) {\n        if (!TimedLocalStorage.isLocalStorageSupported()) {\n            return null;\n        }\n        const record = localStorage.getItem(key);\n        let parsedRecord;\n        try {\n            parsedRecord = JSON.parse(record);\n        }\n        catch (e) {\n            return null;\n        }\n        if (parsedRecord === null) {\n            return null;\n        }\n        if (parsedRecord.timestamp &&\n            new Date().getTime() >= parsedRecord.timestamp) {\n            localStorage.removeItem(key);\n            return null;\n        }\n        let parsedRecordValue = parsedRecord.value;\n        try {\n            parsedRecordValue = JSON.parse(parsedRecord.value);\n        }\n        catch (e) {\n            return parsedRecordValue;\n        }\n        return parsedRecordValue;\n    }\n    /**\n     * Removes an item from LocalStorage.\n     */\n    static removeItem(key) {\n        if (!TimedLocalStorage.isLocalStorageSupported()) {\n            return null;\n        }\n        localStorage.removeItem(key);\n    }\n}\n//# sourceMappingURL=TimedLocalStorage.js.map","import { DismissPrompt, DismissCountKey, DismissTimeKey, } from '../../page/models/Dismiss';\nimport TimedLocalStorage from '../../page/modules/TimedLocalStorage';\nimport Log from '../libraries/Log';\nimport SdkEnvironment from '../managers/SdkEnvironment';\nimport Database from '../services/Database';\nconst DISMISS_TYPE_COUNT_MAP = {\n    [DismissPrompt.Push]: DismissCountKey.PromptDismissCount,\n    [DismissPrompt.NonPush]: DismissCountKey.NonPushPromptsDismissCount,\n};\nconst DISMISS_TYPE_TIME_MAP = {\n    [DismissPrompt.Push]: DismissTimeKey.OneSignalNotificationPrompt,\n    [DismissPrompt.NonPush]: DismissTimeKey.OneSignalNonPushPrompt,\n};\nexport class DismissHelper {\n    /**\n     * Creates an expiring local storage entry to note that the user does not want to be disturbed.\n     */\n    static async markPromptDismissedWithType(type) {\n        const countKey = DISMISS_TYPE_COUNT_MAP[type];\n        const timeKey = DISMISS_TYPE_TIME_MAP[type];\n        let dismissCount = await Database.get('Options', countKey);\n        if (!dismissCount) {\n            dismissCount = 0;\n        }\n        dismissCount += 1;\n        let dismissDays = 3;\n        if (dismissCount == 2) {\n            dismissDays = 7;\n        }\n        else if (dismissCount > 2) {\n            dismissDays = 30;\n        }\n        Log.debug(`(${SdkEnvironment.getWindowEnv().toString()}) OneSignal: User dismissed the ${type} ` +\n            `notification prompt; reprompt after ${dismissDays} days.`);\n        await Database.put('Options', { key: countKey, value: dismissCount });\n        const dismissMinutes = dismissDays * 24 * 60;\n        return TimedLocalStorage.setItem(timeKey, 'dismissed', dismissMinutes);\n    }\n    /**\n     * Returns true if a LocalStorage entry exists for noting the user dismissed the prompt.\n     */\n    static wasPromptOfTypeDismissed(type) {\n        switch (type) {\n            case DismissPrompt.Push:\n                return (TimedLocalStorage.getItem(DismissTimeKey.OneSignalNotificationPrompt) === 'dismissed');\n            case DismissPrompt.NonPush:\n                return (TimedLocalStorage.getItem(DismissTimeKey.OneSignalNonPushPrompt) ===\n                    'dismissed');\n            default:\n                break;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=DismissHelper.js.map","import { WindowEnvironmentKind } from '../models/WindowEnvironmentKind';\nimport EventHelper from './EventHelper';\nimport { InvalidStateError, InvalidStateReason, } from '../errors/InvalidStateError';\nimport Log from '../libraries/Log';\nimport SdkEnvironment from '../managers/SdkEnvironment';\nimport { PermissionUtils } from '../utils/PermissionUtils';\nimport { SubscriptionChannel, SubscriptionType, } from '../../../src/core/models/SubscriptionModels';\nexport default class SubscriptionHelper {\n    static async registerForPush() {\n        return await SubscriptionHelper.internalRegisterForPush();\n    }\n    static async internalRegisterForPush() {\n        const context = OneSignal.context;\n        let subscription = null;\n        switch (SdkEnvironment.getWindowEnv()) {\n            case WindowEnvironmentKind.Host:\n                try {\n                    const rawSubscription = await context.subscriptionManager.subscribe(0 /* SubscriptionStrategyKind.ResubscribeExisting */);\n                    subscription =\n                        await context.subscriptionManager.registerSubscription(rawSubscription);\n                    context.pageViewManager.incrementPageViewCount();\n                    await PermissionUtils.triggerNotificationPermissionChanged();\n                    await EventHelper.checkAndTriggerSubscriptionChanged();\n                }\n                catch (e) {\n                    Log.error(e);\n                }\n                break;\n            default:\n                throw new InvalidStateError(InvalidStateReason.UnsupportedEnvironment);\n        }\n        return subscription;\n    }\n    /**\n     * Helper that checks if a given SubscriptionType is a push subscription.\n     */\n    static isPushSubscriptionType(type) {\n        switch (type) {\n            case SubscriptionType.ChromePush:\n            case SubscriptionType.SafariPush:\n            case SubscriptionType.SafariLegacyPush:\n            case SubscriptionType.FirefoxPush:\n                return true;\n            default:\n                return false;\n        }\n    }\n    static toSubscriptionChannel(type) {\n        switch (type) {\n            case SubscriptionType.Email:\n                return SubscriptionChannel.Email;\n            case SubscriptionType.SMS:\n                return SubscriptionChannel.SMS;\n            default:\n                if (this.isPushSubscriptionType(type)) {\n                    return SubscriptionChannel.Push;\n                }\n                return undefined;\n        }\n    }\n}\n//# sourceMappingURL=SubscriptionHelper.js.map","import { addCssClass, removeCssClass, contains, once, } from '../../shared/utils/utils';\nimport OneSignalEvent from '../../shared/services/OneSignalEvent';\nimport Log from '../../shared/libraries/Log';\nexport default class AnimatedElement {\n    /**\n     * Abstracts common DOM operations like hiding and showing transitionable elements into chainable promises.\n     * @param selector {string} The CSS selector of the element.\n     * @param showClass {string} The CSS class name to add to show the element.\n     * @param hideClass {string} The CSS class name to remove to hide the element.\n     * @param state {string} The current state of the element, defaults to 'shown'.\n     * @param targetTransitionEvents {string} An array of properties (e.g. ['transform', 'opacity']) to look for on transitionend of show() and hide() to know the transition is complete. As long as one matches, the transition is considered complete.\n     * @param nestedContentSelector {string} The CSS selector targeting the nested element within the current element. This nested element will be used for content getters and setters.\n     */\n    constructor(selector, showClass, hideClass, state = 'shown', targetTransitionEvents = ['opacity', 'transform'], nestedContentSelector, transitionCheckTimeout = 500) {\n        this.selector = selector;\n        this.showClass = showClass;\n        this.hideClass = hideClass;\n        this.state = state;\n        this.targetTransitionEvents = targetTransitionEvents;\n        this.nestedContentSelector = nestedContentSelector;\n        this.transitionCheckTimeout = transitionCheckTimeout;\n    }\n    /**\n     * Asynchronously shows an element by applying its {showClass} CSS class.\n     *\n     * Returns a promise that is resolved with this element when it has completed its transition.\n     */\n    show() {\n        if (!this.hidden) {\n            return Promise.resolve(this);\n        }\n        else\n            return new Promise((resolve) => {\n                this.state = 'showing';\n                OneSignalEvent.trigger(AnimatedElement.EVENTS.SHOWING, this);\n                const element = this.element;\n                if (!element) {\n                    Log.error(`(show) could not find animated element with selector ${this.selector}`);\n                }\n                else {\n                    if (this.hideClass)\n                        removeCssClass(element, this.hideClass);\n                    if (this.showClass)\n                        addCssClass(element, this.showClass);\n                }\n                if (this.targetTransitionEvents.length == 0) {\n                    return resolve(this);\n                }\n                else {\n                    const timerId = setTimeout(() => {\n                        Log.debug(`Element did not completely show (state: ${this.state}).`);\n                    }, this.transitionCheckTimeout);\n                    once(this.element, 'transitionend', (event, destroyListenerFn) => {\n                        if (event.target === this.element &&\n                            contains(this.targetTransitionEvents, event.propertyName)) {\n                            clearTimeout(timerId);\n                            // Uninstall the event listener for transitionend\n                            destroyListenerFn();\n                            this.state = 'shown';\n                            OneSignalEvent.trigger(AnimatedElement.EVENTS.SHOWN, this);\n                            return resolve(this);\n                        }\n                    }, true);\n                }\n            });\n    }\n    /**\n     * Asynchronously hides an element by applying its {hideClass} CSS class.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n    hide() {\n        if (!this.shown) {\n            return Promise.resolve(this);\n        }\n        else\n            return new Promise((resolve) => {\n                this.state = 'hiding';\n                OneSignalEvent.trigger(AnimatedElement.EVENTS.HIDING, this);\n                const element = this.element;\n                if (!element) {\n                    Log.error(`(hide) could not find animated element with selector ${this.selector}`);\n                }\n                else {\n                    if (this.showClass)\n                        removeCssClass(element, this.showClass);\n                    if (this.hideClass)\n                        addCssClass(element, this.hideClass);\n                }\n                if (this.targetTransitionEvents.length == 0) {\n                    return resolve(this);\n                }\n                else {\n                    once(this.element, 'transitionend', (event, destroyListenerFn) => {\n                        const timerId = setTimeout(() => {\n                            Log.debug(`Element did not completely hide (state: ${this.state}).`);\n                        }, this.transitionCheckTimeout);\n                        if (event.target === this.element &&\n                            contains(this.targetTransitionEvents, event.propertyName)) {\n                            clearTimeout(timerId);\n                            // Uninstall the event listener for transitionend\n                            destroyListenerFn();\n                            this.state = 'hidden';\n                            OneSignalEvent.trigger(AnimatedElement.EVENTS.HIDDEN, this);\n                            return resolve(this);\n                        }\n                    }, true);\n                }\n            });\n    }\n    /**\n     * Asynchronously waits for an element to finish transitioning to being shown.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n    waitUntilShown() {\n        if (this.state === 'shown')\n            return Promise.resolve(this);\n        else\n            return new Promise((resolve) => {\n                OneSignal.emitter.once(AnimatedElement.EVENTS.SHOWN, (event) => {\n                    if (event === this) {\n                        return resolve(this);\n                    }\n                });\n            });\n    }\n    /**\n     * Asynchronously waits for an element to finish transitioning to being hidden.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n    waitUntilHidden() {\n        if (this.state === 'hidden')\n            return Promise.resolve(this);\n        else\n            return new Promise((resolve) => {\n                OneSignal.emitter.once(AnimatedElement.EVENTS.HIDDEN, (event) => {\n                    if (event === this) {\n                        return resolve(this);\n                    }\n                });\n            });\n    }\n    static get EVENTS() {\n        return {\n            SHOWING: 'animatedElementShowing',\n            SHOWN: 'animatedElementShown',\n            HIDING: 'animatedElementHiding',\n            HIDDEN: 'animatedElementHidden',\n        };\n    }\n    /**\n     * Returns the native element's innerHTML property.\n     * @returns {string} Returns the native element's innerHTML property.\n     */\n    get content() {\n        if (!this.element) {\n            return '';\n        }\n        if (this.nestedContentSelector) {\n            const innerElement = this.element.querySelector(this.nestedContentSelector);\n            return innerElement ? innerElement.innerHTML : '';\n        }\n        else {\n            return this.element.innerHTML;\n        }\n    }\n    /**\n     * Sets the native element's innerHTML property.\n     * @param value {string} The HTML to set to the element.\n     */\n    set content(value) {\n        if (!this.element) {\n            return;\n        }\n        if (this.nestedContentSelector) {\n            const nestedContent = this.element.querySelector(this.nestedContentSelector);\n            if (nestedContent) {\n                nestedContent.textContent = value;\n            }\n        }\n        else {\n            this.element.textContent = value;\n        }\n    }\n    /**\n     * Returns the native {Element} via document.querySelector().\n     * @returns {Element | null} Returns the native {Element} via document.querySelector() or {null} if not found.\n     */\n    get element() {\n        return document.querySelector(this.selector);\n    }\n    /* States an element can be in */\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to being shown.\n     */\n    get showing() {\n        return this.state === 'showing';\n    }\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already shown.\n     */\n    get shown() {\n        return this.state === 'shown';\n    }\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to hiding.\n     */\n    get hiding() {\n        return this.state === 'hiding';\n    }\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already hidden.\n     */\n    get hidden() {\n        return this.state === 'hidden';\n    }\n}\n//# sourceMappingURL=AnimatedElement.js.map","import Log from '../../shared/libraries/Log';\nimport OneSignalEvent from '../../shared/services/OneSignalEvent';\nimport { addCssClass, contains, once, removeCssClass, } from '../../shared/utils/utils';\nimport AnimatedElement from './AnimatedElement';\nexport default class ActiveAnimatedElement extends AnimatedElement {\n    /**\n     * Abstracts common DOM operations like hiding and showing transitionable elements into chainable promises.\n     * @param selector {string} The CSS selector of the element.\n     * @param showClass {string} The CSS class name to add to show the element.\n     * @param hideClass {string} The CSS class name to remove to hide the element.\n     * @param activeClass {string} The CSS class name to add to activate the element.\n     * @param inactiveClass {string} The CSS class name to remove to inactivate the element.\n     * @param state {string} The current state of the element, defaults to 'shown'.\n     * @param activeState {string} The current state of the element, defaults to 'active'.\n     * @param targetTransitionEvents {string} An array of properties (e.g. ['transform', 'opacity']) to look for on transitionend of show() and hide() to know the transition is complete. As long as one matches, the transition is considered complete.\n     * @param nestedContentSelector {string} The CSS selector targeting the nested element within the current element. This nested element will be used for content getters and setters.\n     */\n    constructor(selector, showClass, hideClass, activeClass, inactiveClass, state = 'shown', activeState = 'active', targetTransitionEvents = ['opacity', 'transform'], nestedContentSelector) {\n        super(selector, showClass, hideClass, state, targetTransitionEvents);\n        this.selector = selector;\n        this.showClass = showClass;\n        this.hideClass = hideClass;\n        this.activeClass = activeClass;\n        this.inactiveClass = inactiveClass;\n        this.state = state;\n        this.activeState = activeState;\n        this.targetTransitionEvents = targetTransitionEvents;\n        this.nestedContentSelector = nestedContentSelector;\n    }\n    /**\n     * Asynchronously activates an element by applying its {activeClass} CSS class.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n    activate() {\n        if (!this.inactive || !this.shown) {\n            return Promise.resolve(this);\n        }\n        else\n            return new Promise((resolve) => {\n                this.activeState = 'activating';\n                OneSignalEvent.trigger(ActiveAnimatedElement.EVENTS.ACTIVATING, this);\n                const element = this.element;\n                if (!element) {\n                    Log.error('Could not find active animated element');\n                }\n                else {\n                    if (this.inactiveClass)\n                        removeCssClass(element, this.inactiveClass);\n                    if (this.activeClass)\n                        addCssClass(element, this.activeClass);\n                }\n                if (this.shown) {\n                    if (this.targetTransitionEvents.length == 0) {\n                        return resolve(this);\n                    }\n                    else {\n                        const timerId = setTimeout(() => {\n                            Log.debug(`Element did not completely activate (state: ${this.state}, activeState: ${this.activeState}).`);\n                        }, this.transitionCheckTimeout);\n                        once(this.element, 'transitionend', (event, destroyListenerFn) => {\n                            if (event.target === this.element &&\n                                contains(this.targetTransitionEvents, event.propertyName)) {\n                                clearTimeout(timerId);\n                                // Uninstall the event listener for transitionend\n                                destroyListenerFn();\n                                this.activeState = 'active';\n                                OneSignalEvent.trigger(ActiveAnimatedElement.EVENTS.ACTIVE, this);\n                                return resolve(this);\n                            }\n                        }, true);\n                    }\n                }\n                else {\n                    Log.debug(`Ending activate() transition (alternative).`);\n                    this.activeState = 'active';\n                    OneSignalEvent.trigger(ActiveAnimatedElement.EVENTS.ACTIVE, this);\n                    return resolve(this);\n                }\n            });\n    }\n    /**\n     * Asynchronously activates an element by applying its {activeClass} CSS class.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n    inactivate() {\n        if (!this.active) {\n            return Promise.resolve(this);\n        }\n        else\n            return new Promise((resolve) => {\n                this.activeState = 'inactivating';\n                OneSignalEvent.trigger(ActiveAnimatedElement.EVENTS.INACTIVATING, this);\n                const element = this.element;\n                if (!element) {\n                    Log.error('Could not find active animated element');\n                }\n                else {\n                    if (this.activeClass)\n                        removeCssClass(element, this.activeClass);\n                    if (this.inactiveClass)\n                        addCssClass(element, this.inactiveClass);\n                }\n                if (this.shown) {\n                    if (this.targetTransitionEvents.length == 0) {\n                        return resolve(this);\n                    }\n                    else {\n                        const timerId = setTimeout(() => {\n                            Log.debug(`Element did not completely inactivate (state: ${this.state}, activeState: ${this.activeState}).`);\n                        }, this.transitionCheckTimeout);\n                        once(this.element, 'transitionend', (event, destroyListenerFn) => {\n                            if (event.target === this.element &&\n                                contains(this.targetTransitionEvents, event.propertyName)) {\n                                clearTimeout(timerId);\n                                // Uninstall the event listener for transitionend\n                                destroyListenerFn();\n                                this.activeState = 'inactive';\n                                OneSignalEvent.trigger(ActiveAnimatedElement.EVENTS.INACTIVE, this);\n                                return resolve(this);\n                            }\n                        }, true);\n                    }\n                }\n                else {\n                    this.activeState = 'inactive';\n                    OneSignalEvent.trigger(ActiveAnimatedElement.EVENTS.INACTIVE, this);\n                    return resolve(this);\n                }\n            });\n    }\n    /**\n     * Asynchronously waits for an element to finish transitioning to being active.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n    waitUntilActive() {\n        if (this.active)\n            return Promise.resolve(this);\n        else\n            return new Promise((resolve) => {\n                OneSignal.emitter.once(ActiveAnimatedElement.EVENTS.ACTIVE, (event) => {\n                    if (event === this) {\n                        return resolve(this);\n                    }\n                });\n            });\n    }\n    /**\n     * Asynchronously waits for an element to finish transitioning to being inactive.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n    waitUntilInactive() {\n        if (this.inactive)\n            return Promise.resolve(this);\n        else\n            return new Promise((resolve) => {\n                OneSignal.emitter.once(ActiveAnimatedElement.EVENTS.INACTIVE, (event) => {\n                    if (event === this) {\n                        return resolve(this);\n                    }\n                });\n            });\n    }\n    static get EVENTS() {\n        return Object.assign(Object.assign({}, AnimatedElement.EVENTS), {\n            ACTIVATING: 'activeAnimatedElementActivating',\n            ACTIVE: 'activeAnimatedElementActive',\n            INACTIVATING: 'activeAnimatedElementInactivating',\n            INACTIVE: 'activeAnimatedElementInactive',\n        });\n    }\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to being activated.\n     */\n    get activating() {\n        return this.activeState === 'activating';\n    }\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already active.\n     */\n    get active() {\n        return this.activeState === 'active';\n    }\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to inactive.\n     */\n    get inactivating() {\n        return this.activeState === 'inactivating';\n    }\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already inactive.\n     */\n    get inactive() {\n        return this.activeState === 'inactive';\n    }\n}\n//# sourceMappingURL=ActiveAnimatedElement.js.map","import ActiveAnimatedElement from './ActiveAnimatedElement';\nexport default class Badge extends ActiveAnimatedElement {\n    constructor() {\n        super('.onesignal-bell-launcher-badge', 'onesignal-bell-launcher-badge-opened', null, 'onesignal-bell-launcher-badge-active', null, 'hidden');\n    }\n    increment() {\n        // If it IS a number (is not not a number)\n        if (!isNaN(this.content)) {\n            let badgeNumber = +this.content; // Coerce to int\n            badgeNumber += 1;\n            this.content = badgeNumber.toString();\n        }\n    }\n    show() {\n        const promise = super.show();\n        OneSignal.notifyButton.setCustomColorsIfSpecified();\n        return promise;\n    }\n    decrement() {\n        // If it IS a number (is not not a number)\n        if (!isNaN(this.content)) {\n            let badgeNumber = +this.content; // Coerce to int\n            badgeNumber -= 1;\n            if (badgeNumber > 0)\n                this.content = badgeNumber.toString();\n            else\n                this.content = '';\n        }\n    }\n}\n//# sourceMappingURL=Badge.js.map","import BrowserUtils from '../../shared/utils/BrowserUtils';\nimport Log from '../../shared/libraries/Log';\nimport { delay, nothing } from '../../shared/utils/utils';\nimport AnimatedElement from './AnimatedElement';\nimport Bell from './Bell';\nexport default class Message extends AnimatedElement {\n    constructor(bell) {\n        super('.onesignal-bell-launcher-message', 'onesignal-bell-launcher-message-opened', undefined, 'hidden', ['opacity', 'transform'], '.onesignal-bell-launcher-message-body');\n        this.bell = bell;\n        this.contentType = '';\n        this.queued = [];\n    }\n    static get TIMEOUT() {\n        return 2500;\n    }\n    static get TYPES() {\n        return {\n            TIP: 'tip',\n            MESSAGE: 'message',\n            QUEUED: 'queued', // This message was a user-queued message\n        };\n    }\n    display(type, content, duration = 0) {\n        Log.debug(`Calling display(${type}, ${content}, ${duration}).`);\n        return (this.shown ? this.hide() : nothing())\n            .then(() => {\n            this.content = BrowserUtils.decodeHtmlEntities(content);\n            this.contentType = type;\n        })\n            .then(() => {\n            return this.show();\n        })\n            .then(() => delay(duration))\n            .then(() => {\n            return this.hide();\n        })\n            .then(() => {\n            // Reset back to normal content type so stuff can show a gain\n            this.content = this.getTipForState();\n            this.contentType = 'tip';\n        });\n    }\n    getTipForState() {\n        if (this.bell.state === Bell.STATES.UNSUBSCRIBED)\n            return this.bell.options.text['tip.state.unsubscribed'];\n        else if (this.bell.state === Bell.STATES.SUBSCRIBED)\n            return this.bell.options.text['tip.state.subscribed'];\n        else if (this.bell.state === Bell.STATES.BLOCKED)\n            return this.bell.options.text['tip.state.blocked'];\n        return '';\n    }\n    enqueue(message) {\n        this.queued.push(BrowserUtils.decodeHtmlEntities(message));\n        return new Promise((resolve) => {\n            if (this.bell.badge.shown) {\n                this.bell.badge\n                    .hide()\n                    .then(() => this.bell.badge.increment())\n                    .then(() => this.bell.badge.show())\n                    .then(resolve);\n            }\n            else {\n                this.bell.badge.increment();\n                if (this.bell.initialized)\n                    this.bell.badge.show().then(resolve);\n                else\n                    resolve();\n            }\n        });\n    }\n    dequeue(message) {\n        const dequeuedMessage = this.queued.pop(message);\n        return new Promise((resolve) => {\n            if (this.bell.badge.shown) {\n                this.bell.badge\n                    .hide()\n                    .then(() => this.bell.badge.decrement())\n                    .then((numMessagesLeft) => {\n                    if (numMessagesLeft > 0) {\n                        return this.bell.badge.show();\n                    }\n                    else {\n                        return Promise.resolve(this);\n                    }\n                })\n                    .then(resolve(dequeuedMessage));\n            }\n            else {\n                this.bell.badge.decrement();\n                resolve(dequeuedMessage);\n            }\n        });\n    }\n}\n//# sourceMappingURL=Message.js.map","import { removeDomElement, addDomElement } from '../../shared/utils/utils';\nimport OneSignalEvent from '../../shared/services/OneSignalEvent';\nimport ActiveAnimatedElement from './ActiveAnimatedElement';\nimport Bell from './Bell';\nimport LimitStore from '../../shared/services/LimitStore';\nimport Message from './Message';\nimport InitHelper from '../../shared/helpers/InitHelper';\nexport default class Button extends ActiveAnimatedElement {\n    constructor(bell) {\n        super('.onesignal-bell-launcher-button', undefined, undefined, 'onesignal-bell-launcher-button-active', undefined, 'shown', '');\n        this.bell = bell;\n        this.events = {\n            mouse: 'bell.launcher.button.mouse',\n        };\n        const element = this.element;\n        if (element) {\n            element.addEventListener('touchstart', () => {\n                this.onHovering();\n                this.onTap();\n            }, { passive: true });\n            element.addEventListener('mouseenter', () => {\n                this.onHovering();\n            });\n            element.addEventListener('mouseleave', () => {\n                this.onHovered();\n            });\n            element.addEventListener('touchmove', () => {\n                this.onHovered();\n            }, { passive: true });\n            element.addEventListener('mousedown', () => {\n                this.onTap();\n            });\n            element.addEventListener('mouseup', () => {\n                this.onEndTap();\n            });\n            element.addEventListener('click', () => {\n                this.onHovered();\n                this.onClick();\n            });\n        }\n    }\n    onHovering() {\n        if (LimitStore.isEmpty(this.events.mouse) ||\n            LimitStore.getLast(this.events.mouse) === 'out') {\n            OneSignalEvent.trigger(Bell.EVENTS.HOVERING);\n        }\n        LimitStore.put(this.events.mouse, 'over');\n    }\n    onHovered() {\n        LimitStore.put(this.events.mouse, 'out');\n        OneSignalEvent.trigger(Bell.EVENTS.HOVERED);\n    }\n    onTap() {\n        this.pulse();\n        this.activate();\n        this.bell.badge.activate();\n    }\n    onEndTap() {\n        this.inactivate();\n        this.bell.badge.inactivate();\n    }\n    onClick() {\n        OneSignalEvent.trigger(Bell.EVENTS.BELL_CLICK);\n        OneSignalEvent.trigger(Bell.EVENTS.LAUNCHER_CLICK);\n        if (this.bell.message.shown &&\n            this.bell.message.contentType == Message.TYPES.MESSAGE) {\n            // A message is being shown, it'll disappear soon\n            return;\n        }\n        const optedOut = LimitStore.getLast('subscription.optedOut');\n        if (this.bell.unsubscribed) {\n            if (optedOut) {\n                // The user is manually opted out, but still \"really\" subscribed\n                this.bell.launcher.activateIfInactive().then(() => {\n                    this.bell.showDialogProcedure();\n                });\n            }\n            else {\n                // The user is actually subscribed, register him for notifications\n                InitHelper.registerForPushNotifications();\n                this.bell._ignoreSubscriptionState = true;\n                OneSignal.emitter.once(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, () => {\n                    this.bell.message\n                        .display(Message.TYPES.MESSAGE, this.bell.options.text['message.action.subscribed'], Message.TIMEOUT)\n                        .then(() => {\n                        this.bell._ignoreSubscriptionState = false;\n                        this.bell.launcher.inactivate();\n                    });\n                });\n            }\n        }\n        else if (this.bell.subscribed) {\n            this.bell.launcher.activateIfInactive().then(() => {\n                this.bell.showDialogProcedure();\n            });\n        }\n        else if (this.bell.blocked) {\n            this.bell.launcher.activateIfInactive().then(() => {\n                this.bell.showDialogProcedure();\n            });\n        }\n        return this.bell.message.hide();\n    }\n    pulse() {\n        removeDomElement('.pulse-ring');\n        if (this.element) {\n            addDomElement(this.element, 'beforeend', '<div class=\"pulse-ring\"></div>');\n        }\n        this.bell.setCustomColorsIfSpecified();\n    }\n}\n//# sourceMappingURL=Button.js.map","import OneSignalEvent from '../../shared/services/OneSignalEvent';\nimport SdkEnvironment from '../../shared/managers/SdkEnvironment';\nimport { addDomElement, clearDomElementChildren, getPlatformNotificationIcon, } from '../../shared/utils/utils';\nimport AnimatedElement from './AnimatedElement';\nimport Bell from './Bell';\nimport { bowserCastle } from '../../shared/utils/bowserCastle';\nexport default class Dialog extends AnimatedElement {\n    constructor(bell) {\n        super('.onesignal-bell-launcher-dialog', 'onesignal-bell-launcher-dialog-opened', undefined, 'hidden', ['opacity', 'transform'], '.onesignal-bell-launcher-dialog-body');\n        this.bell = bell;\n        this.subscribeButtonId =\n            '#onesignal-bell-container .onesignal-bell-launcher #subscribe-button';\n        this.unsubscribeButtonId =\n            '#onesignal-bell-container .onesignal-bell-launcher #unsubscribe-button';\n        this.notificationIcons = null;\n    }\n    show() {\n        return this.updateBellLauncherDialogBody().then(() => super.show());\n    }\n    get subscribeButtonSelectorId() {\n        return 'subscribe-button';\n    }\n    get unsubscribeButtonSelectorId() {\n        return 'unsubscribe-button';\n    }\n    get subscribeButton() {\n        return this.element\n            ? this.element.querySelector('#' + this.subscribeButtonSelectorId)\n            : null;\n    }\n    get unsubscribeButton() {\n        return this.element\n            ? this.element.querySelector('#' + this.unsubscribeButtonSelectorId)\n            : null;\n    }\n    updateBellLauncherDialogBody() {\n        return OneSignal.context.subscriptionManager\n            .isPushNotificationsEnabled()\n            .then((currentSetSubscription) => {\n            if (this.nestedContentSelector) {\n                clearDomElementChildren(this.nestedContentSelector);\n            }\n            let contents = 'Nothing to show.';\n            let footer = '';\n            if (this.bell.options.showCredit) {\n                footer = `<div class=\"divider\"></div><div class=\"kickback\">Powered by <a href=\"https://onesignal.com\" class=\"kickback\" target=\"_blank\">OneSignal</a></div>`;\n            }\n            if ((this.bell.state === Bell.STATES.SUBSCRIBED &&\n                currentSetSubscription === true) ||\n                (this.bell.state === Bell.STATES.UNSUBSCRIBED &&\n                    currentSetSubscription === false)) {\n                let notificationIconHtml = '';\n                const imageUrl = getPlatformNotificationIcon(this.notificationIcons);\n                if (imageUrl != 'default-icon') {\n                    notificationIconHtml = `<div class=\"push-notification-icon\"><img src=\"${imageUrl}\"></div>`;\n                }\n                else {\n                    notificationIconHtml = `<div class=\"push-notification-icon push-notification-icon-default\"></div>`;\n                }\n                let buttonHtml = '';\n                if (this.bell.state !== Bell.STATES.SUBSCRIBED)\n                    buttonHtml = `<button type=\"button\" class=\"action\" id=\"${this.subscribeButtonSelectorId}\">${this.bell.options.text['dialog.main.button.subscribe']}</button>`;\n                else\n                    buttonHtml = `<button type=\"button\" class=\"action\" id=\"${this.unsubscribeButtonSelectorId}\">${this.bell.options.text['dialog.main.button.unsubscribe']}</button>`;\n                contents = `<h1>${this.bell.options.text['dialog.main.title']}</h1><div class=\"divider\"></div><div class=\"push-notification\">${notificationIconHtml}<div class=\"push-notification-text-container\"><div class=\"push-notification-text push-notification-text-short\"></div><div class=\"push-notification-text\"></div><div class=\"push-notification-text push-notification-text-medium\"></div><div class=\"push-notification-text\"></div><div class=\"push-notification-text push-notification-text-medium\"></div></div></div><div class=\"action-container\">${buttonHtml}</div>${footer}`;\n            }\n            else if (this.bell.state === Bell.STATES.BLOCKED) {\n                let imageUrl = null;\n                if (bowserCastle().name === 'chrome') {\n                    if (!bowserCastle().mobile && !bowserCastle().tablet)\n                        imageUrl = '/bell/chrome-unblock.jpg';\n                }\n                else if (bowserCastle().name === 'firefox')\n                    imageUrl = '/bell/firefox-unblock.jpg';\n                else if (bowserCastle().name == 'safari')\n                    imageUrl = '/bell/safari-unblock.jpg';\n                else if (bowserCastle().name === 'msedge')\n                    imageUrl = '/bell/edge-unblock.png';\n                let instructionsHtml = '';\n                if (imageUrl) {\n                    imageUrl =\n                        SdkEnvironment.getOneSignalStaticResourcesUrl() + imageUrl;\n                    instructionsHtml = `<a href=\"${imageUrl}\" target=\"_blank\"><img src=\"${imageUrl}\"></a></div>`;\n                }\n                if ((bowserCastle().mobile || bowserCastle().tablet) &&\n                    bowserCastle().name === 'chrome') {\n                    instructionsHtml = `<ol><li>Access <strong>Settings</strong> by tapping the three menu dots <strong>⋮</strong></li><li>Click <strong>Site settings</strong> under Advanced.</li><li>Click <strong>Notifications</strong>.</li><li>Find and click this entry for this website.</li><li>Click <strong>Notifications</strong> and set it to <strong>Allow</strong>.</li></ol>`;\n                }\n                contents = `<h1>${this.bell.options.text['dialog.blocked.title']}</h1><div class=\"divider\"></div><div class=\"instructions\"><p>${this.bell.options.text['dialog.blocked.message']}</p>${instructionsHtml}</div>${footer}`;\n            }\n            if (this.nestedContentSelector) {\n                addDomElement(this.nestedContentSelector, 'beforeend', contents);\n            }\n            if (this.subscribeButton) {\n                this.subscribeButton.addEventListener('click', () => {\n                    /*\n                      The welcome notification should only be shown if the user is\n                      subscribing for the first time and resubscribing via the notify\n                      button.\n        \n                      If permission is already granted, __doNotShowWelcomeNotification is\n                      set to true to prevent showing a notification, but we actually want\n                      a notification shown in this resubscription case.\n                    */\n                    OneSignal.__doNotShowWelcomeNotification = false;\n                    OneSignalEvent.trigger(Bell.EVENTS.SUBSCRIBE_CLICK);\n                });\n            }\n            if (this.unsubscribeButton) {\n                this.unsubscribeButton.addEventListener('click', () => OneSignalEvent.trigger(Bell.EVENTS.UNSUBSCRIBE_CLICK));\n            }\n            this.bell.setCustomColorsIfSpecified();\n        });\n    }\n}\n//# sourceMappingURL=Dialog.js.map","import { addCssClass, contains, hasCssClass, nothing, once, removeCssClass, } from '../../shared/utils/utils';\nimport ActiveAnimatedElement from './ActiveAnimatedElement';\nimport { InvalidStateError, InvalidStateReason, } from '../../shared/errors/InvalidStateError';\nimport Log from '../../shared/libraries/Log';\nexport default class Launcher extends ActiveAnimatedElement {\n    constructor(bell) {\n        super('.onesignal-bell-launcher', 'onesignal-bell-launcher-active', undefined, undefined, 'onesignal-bell-launcher-inactive', 'hidden', 'active');\n        this.bell = bell;\n        this.wasInactive = false;\n    }\n    async resize(size) {\n        if (!this.element) {\n            // Notify button doesn't exist\n            throw new InvalidStateError(InvalidStateReason.MissingDomElement);\n        }\n        // If the size is the same, do nothing and resolve an empty promise\n        if ((size === 'small' &&\n            hasCssClass(this.element, 'onesignal-bell-launcher-sm')) ||\n            (size === 'medium' &&\n                hasCssClass(this.element, 'onesignal-bell-launcher-md')) ||\n            (size === 'large' &&\n                hasCssClass(this.element, 'onesignal-bell-launcher-lg'))) {\n            return Promise.resolve(this);\n        }\n        removeCssClass(this.element, 'onesignal-bell-launcher-sm');\n        removeCssClass(this.element, 'onesignal-bell-launcher-md');\n        removeCssClass(this.element, 'onesignal-bell-launcher-lg');\n        if (size === 'small') {\n            addCssClass(this.element, 'onesignal-bell-launcher-sm');\n        }\n        else if (size === 'medium') {\n            addCssClass(this.element, 'onesignal-bell-launcher-md');\n        }\n        else if (size === 'large') {\n            addCssClass(this.element, 'onesignal-bell-launcher-lg');\n        }\n        else {\n            throw new Error('Invalid OneSignal bell size ' + size);\n        }\n        if (!this.shown) {\n            return this;\n        }\n        else {\n            return await new Promise((resolve) => {\n                // Once the launcher has finished shrinking down\n                if (this.targetTransitionEvents.length == 0) {\n                    return resolve(this);\n                }\n                else {\n                    const timerId = setTimeout(() => {\n                        Log.debug(`Launcher did not completely resize (state: ${this.state}, activeState: ${this.activeState}).`);\n                    }, this.transitionCheckTimeout);\n                    once(this.element, 'transitionend', (event, destroyListenerFn) => {\n                        if (event.target === this.element &&\n                            contains(this.targetTransitionEvents, event.propertyName)) {\n                            clearTimeout(timerId);\n                            // Uninstall the event listener for transitionend\n                            destroyListenerFn();\n                            return resolve(this);\n                        }\n                    }, true);\n                }\n            });\n        }\n    }\n    activateIfInactive() {\n        if (this.inactive) {\n            this.wasInactive = true;\n            return this.activate();\n        }\n        else\n            return nothing();\n    }\n    inactivateIfWasInactive() {\n        if (this.wasInactive) {\n            this.wasInactive = false;\n            return this.inactivate();\n        }\n        else\n            return nothing();\n    }\n    clearIfWasInactive() {\n        this.wasInactive = false;\n    }\n    inactivate() {\n        return this.bell.message.hide().then(() => {\n            if (this.bell.badge.content.length > 0) {\n                return this.bell.badge\n                    .hide()\n                    .then(() => Promise.all([super.inactivate(), this.resize('small')]))\n                    .then(() => this.bell.badge.show());\n            }\n            else {\n                return Promise.all([super.inactivate(), this.resize('small')]);\n            }\n        });\n    }\n    activate() {\n        if (this.bell.badge.content.length > 0) {\n            return this.bell.badge\n                .hide()\n                .then(() => Promise.all([super.activate(), this.resize(this.bell.options.size)]));\n        }\n        else {\n            return Promise.all([\n                super.activate(),\n                this.resize(this.bell.options.size),\n            ]);\n        }\n    }\n}\n//# sourceMappingURL=Launcher.js.map","import { NotificationPermission } from '../../shared/models/NotificationPermission';\nimport OneSignalEvent from '../../shared/services/OneSignalEvent';\nimport { addCssClass, addDomElement, contains, delay, nothing, once, removeDomElement, } from '../../shared/utils/utils';\nimport Badge from './Badge';\nimport Button from './Button';\nimport Dialog from './Dialog';\nimport Launcher from './Launcher';\nimport Message from './Message';\nimport { DismissPrompt } from '../models/Dismiss';\nimport { DismissHelper } from '../../shared/helpers/DismissHelper';\nimport MainHelper from '../../shared/helpers/MainHelper';\nimport Log from '../../shared/libraries/Log';\nimport { bowserCastle } from '../../shared/utils/bowserCastle';\nimport OneSignal from '../../onesignal/OneSignal';\nimport BrowserUtils from '../../shared/utils/BrowserUtils';\nconst logoSvg = `<svg class=\"onesignal-bell-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"99.7\" height=\"99.7\" viewBox=\"0 0 99.7 99.7\"><circle class=\"background\" cx=\"49.9\" cy=\"49.9\" r=\"49.9\"/><path class=\"foreground\" d=\"M50.1 66.2H27.7s-2-.2-2-2.1c0-1.9 1.7-2 1.7-2s6.7-3.2 6.7-5.5S33 52.7 33 43.3s6-16.6 13.2-16.6c0 0 1-2.4 3.9-2.4 2.8 0 3.8 2.4 3.8 2.4 7.2 0 13.2 7.2 13.2 16.6s-1 11-1 13.3c0 2.3 6.7 5.5 6.7 5.5s1.7.1 1.7 2c0 1.8-2.1 2.1-2.1 2.1H50.1zm-7.2 2.3h14.5s-1 6.3-7.2 6.3-7.3-6.3-7.3-6.3z\"/><ellipse class=\"stroke\" cx=\"49.9\" cy=\"49.9\" rx=\"37.4\" ry=\"36.9\"/></svg>`;\nexport default class Bell {\n    static get EVENTS() {\n        return {\n            STATE_CHANGED: 'notifyButtonStateChange',\n            LAUNCHER_CLICK: 'notifyButtonLauncherClick',\n            BELL_CLICK: 'notifyButtonButtonClick',\n            SUBSCRIBE_CLICK: 'notifyButtonSubscribeClick',\n            UNSUBSCRIBE_CLICK: 'notifyButtonUnsubscribeClick',\n            HOVERING: 'notifyButtonHovering',\n            HOVERED: 'notifyButtonHover',\n        };\n    }\n    static get STATES() {\n        return {\n            UNINITIALIZED: 'uninitialized',\n            SUBSCRIBED: 'subscribed',\n            UNSUBSCRIBED: 'unsubscribed',\n            BLOCKED: 'blocked',\n        };\n    }\n    static get TEXT_SUBS() {\n        return {\n            'prompt.native.grant': {\n                default: 'Allow',\n                chrome: 'Allow',\n                firefox: 'Always Receive Notifications',\n                safari: 'Allow',\n            },\n        };\n    }\n    constructor(config, launcher) {\n        this.state = Bell.STATES.UNINITIALIZED;\n        this._ignoreSubscriptionState = false;\n        this.hovering = false;\n        this.initialized = false;\n        this.DEFAULT_SIZE = 'medium';\n        this.DEFAULT_POSITION = 'bottom-right';\n        this.DEFAULT_THEME = 'default';\n        this.options = {\n            enable: config.enable || false,\n            size: config.size || this.DEFAULT_SIZE,\n            position: config.position || this.DEFAULT_POSITION,\n            theme: config.theme || this.DEFAULT_THEME,\n            showLauncherAfter: config.showLauncherAfter || 10,\n            showBadgeAfter: config.showBadgeAfter || 300,\n            text: this.setDefaultTextOptions(config.text || {}),\n            prenotify: config.prenotify,\n            showCredit: config.showCredit,\n            colors: config.colors,\n            offset: config.offset,\n        };\n        if (launcher) {\n            this._launcher = launcher;\n        }\n        if (!this.options.enable)\n            return;\n        this.validateOptions(this.options);\n        this.state = Bell.STATES.UNINITIALIZED;\n        this._ignoreSubscriptionState = false;\n        this.installEventHooks();\n        this.updateState();\n    }\n    showDialogProcedure() {\n        if (!this.dialog.shown) {\n            this.dialog.show().then(() => {\n                once(document, 'click', (e, destroyEventListener) => {\n                    const wasDialogClicked = this.dialog.element.contains(e.target);\n                    if (wasDialogClicked) {\n                        return;\n                    }\n                    destroyEventListener();\n                    if (this.dialog.shown) {\n                        this.dialog.hide().then(() => {\n                            this.launcher.inactivateIfWasInactive();\n                        });\n                    }\n                }, true);\n            });\n        }\n    }\n    validateOptions(options) {\n        if (!options.size || !contains(['small', 'medium', 'large'], options.size))\n            throw new Error(`Invalid size ${options.size} for notify button. Choose among 'small', 'medium', or 'large'.`);\n        if (!options.position ||\n            !contains(['bottom-left', 'bottom-right'], options.position))\n            throw new Error(`Invalid position ${options.position} for notify button. Choose either 'bottom-left', or 'bottom-right'.`);\n        if (!options.theme || !contains(['default', 'inverse'], options.theme))\n            throw new Error(`Invalid theme ${options.theme} for notify button. Choose either 'default', or 'inverse'.`);\n        if (!options.showLauncherAfter || options.showLauncherAfter < 0)\n            throw new Error(`Invalid delay duration of ${this.options.showLauncherAfter} for showing the notify button. Choose a value above 0.`);\n        if (!options.showBadgeAfter || options.showBadgeAfter < 0)\n            throw new Error(`Invalid delay duration of ${this.options.showBadgeAfter} for showing the notify button's badge. Choose a value above 0.`);\n    }\n    setDefaultTextOptions(text) {\n        const finalText = {\n            'tip.state.unsubscribed': text['tip.state.unsubscribed'] || 'Subscribe to notifications',\n            'tip.state.subscribed': text['tip.state.subscribed'] || \"You're subscribed to notifications\",\n            'tip.state.blocked': text['tip.state.blocked'] || \"You've blocked notifications\",\n            'message.prenotify': text['message.prenotify'] || 'Click to subscribe to notifications',\n            'message.action.subscribed': text['message.action.subscribed'] || 'Thanks for subscribing!',\n            'message.action.resubscribed': text['message.action.resubscribed'] ||\n                \"You're subscribed to notifications\",\n            'message.action.subscribing': text['message.action.subscribing'] ||\n                'Click <strong>{{prompt.native.grant}}</strong> to receive notifications',\n            'message.action.unsubscribed': text['message.action.unsubscribed'] ||\n                \"You won't receive notifications again\",\n            'dialog.main.title': text['dialog.main.title'] || 'Manage Site Notifications',\n            'dialog.main.button.subscribe': text['dialog.main.button.subscribe'] || 'SUBSCRIBE',\n            'dialog.main.button.unsubscribe': text['dialog.main.button.unsubscribe'] || 'UNSUBSCRIBE',\n            'dialog.blocked.title': text['dialog.blocked.title'] || 'Unblock Notifications',\n            'dialog.blocked.message': text['dialog.blocked.message'] ||\n                'Follow these instructions to allow notifications:',\n        };\n        return finalText;\n    }\n    installEventHooks() {\n        // Install event hooks\n        OneSignal.emitter.on(Bell.EVENTS.SUBSCRIBE_CLICK, () => {\n            this.dialog.subscribeButton.disabled = true;\n            this._ignoreSubscriptionState = true;\n            OneSignal.User.PushSubscription.optIn()\n                .then(() => {\n                this.dialog.subscribeButton.disabled = false;\n                return this.dialog.hide();\n            })\n                .then(() => {\n                return this.message.display(Message.TYPES.MESSAGE, this.options.text['message.action.resubscribed'], Message.TIMEOUT);\n            })\n                .then(() => {\n                this._ignoreSubscriptionState = false;\n                this.launcher.clearIfWasInactive();\n                return this.launcher.inactivate();\n            })\n                .then(() => {\n                return this.updateState();\n            })\n                .catch((e) => {\n                throw e;\n            });\n        });\n        OneSignal.emitter.on(Bell.EVENTS.UNSUBSCRIBE_CLICK, () => {\n            this.dialog.unsubscribeButton.disabled = true;\n            OneSignal.User.PushSubscription.optOut()\n                .then(() => {\n                this.dialog.unsubscribeButton.disabled = false;\n                return this.dialog.hide();\n            })\n                .then(() => {\n                this.launcher.clearIfWasInactive();\n                return this.launcher.activate();\n            })\n                .then(() => {\n                return this.message.display(Message.TYPES.MESSAGE, this.options.text['message.action.unsubscribed'], Message.TIMEOUT);\n            })\n                .then(() => {\n                return this.updateState();\n            });\n        });\n        OneSignal.emitter.on(Bell.EVENTS.HOVERING, () => {\n            this.hovering = true;\n            this.launcher.activateIfInactive();\n            // If there's already a message being force shown, do not override\n            if (this.message.shown || this.dialog.shown) {\n                this.hovering = false;\n                return;\n            }\n            // If the message is a message and not a tip, don't show it (only show tips)\n            // Messages will go away on their own\n            if (this.message.contentType === Message.TYPES.MESSAGE) {\n                this.hovering = false;\n                return;\n            }\n            new Promise((resolve) => {\n                // If a message is being shown\n                if (this.message.queued.length > 0) {\n                    return this.message.dequeue().then((msg) => {\n                        this.message.content = msg;\n                        this.message.contentType = Message.TYPES.QUEUED;\n                        resolve();\n                    });\n                }\n                else {\n                    this.message.content = BrowserUtils.decodeHtmlEntities(this.message.getTipForState());\n                    this.message.contentType = Message.TYPES.TIP;\n                    resolve();\n                }\n            })\n                .then(() => {\n                return this.message.show();\n            })\n                .then(() => {\n                this.hovering = false;\n            })\n                .catch((err) => {\n                Log.error(err);\n            });\n        });\n        OneSignal.emitter.on(Bell.EVENTS.HOVERED, () => {\n            // If a message is displayed (and not a tip), don't control it. Visitors have no control over messages\n            if (this.message.contentType === Message.TYPES.MESSAGE) {\n                return;\n            }\n            if (!this.dialog.hidden) {\n                // If the dialog is being brought up when clicking button, don't shrink\n                return;\n            }\n            if (this.hovering) {\n                this.hovering = false;\n                // Hovering still being true here happens on mobile where the message could still be showing (i.e. animating)\n                // when a HOVERED event fires. In other words, you tap on mobile, HOVERING fires, and then HOVERED fires\n                // immediately after because of the way mobile click events work. Basically only happens if HOVERING and HOVERED\n                // fire within a few milliseconds of each other\n                this.message\n                    .waitUntilShown()\n                    .then(() => delay(Message.TIMEOUT))\n                    .then(() => this.message.hide())\n                    .then(() => {\n                    if (this.launcher.wasInactive && this.dialog.hidden) {\n                        this.launcher.inactivate();\n                        this.launcher.wasInactive = false;\n                    }\n                });\n            }\n            if (this.message.shown) {\n                this.message.hide().then(() => {\n                    if (this.launcher.wasInactive && this.dialog.hidden) {\n                        this.launcher.inactivate();\n                        this.launcher.wasInactive = false;\n                    }\n                });\n            }\n        });\n        OneSignal.emitter.on(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, async (isSubscribed) => {\n            if (isSubscribed.current.optedIn) {\n                if (this.badge.shown && this.options.prenotify) {\n                    this.badge.hide();\n                }\n                if (this.dialog.notificationIcons === null) {\n                    const icons = await MainHelper.getNotificationIcons();\n                    this.dialog.notificationIcons = icons;\n                }\n            }\n            const permission = await OneSignal.context.permissionManager.getPermissionStatus();\n            let bellState;\n            if (isSubscribed.current.optedIn) {\n                bellState = Bell.STATES.SUBSCRIBED;\n            }\n            else if (permission === NotificationPermission.Denied) {\n                bellState = Bell.STATES.BLOCKED;\n            }\n            else {\n                bellState = Bell.STATES.UNSUBSCRIBED;\n            }\n            this.setState(bellState, this._ignoreSubscriptionState);\n        });\n        OneSignal.emitter.on(Bell.EVENTS.STATE_CHANGED, (state) => {\n            if (!this.launcher.element) {\n                // Notify button doesn't exist\n                return;\n            }\n            if (state.to === Bell.STATES.SUBSCRIBED) {\n                this.launcher.inactivate();\n            }\n            else if (state.to === Bell.STATES.UNSUBSCRIBED || Bell.STATES.BLOCKED) {\n                this.launcher.activate();\n            }\n        });\n        OneSignal.emitter.on(OneSignal.EVENTS.NOTIFICATION_PERMISSION_CHANGED_AS_STRING, () => {\n            this.updateState();\n        });\n    }\n    addDefaultClasses() {\n        // Add default classes\n        const container = this.container;\n        if (this.options.position === 'bottom-left') {\n            if (container) {\n                addCssClass(container, 'onesignal-bell-container-bottom-left');\n            }\n            addCssClass(this.launcher.selector, 'onesignal-bell-launcher-bottom-left');\n        }\n        else if (this.options.position === 'bottom-right') {\n            if (container) {\n                addCssClass(container, 'onesignal-bell-container-bottom-right');\n            }\n            addCssClass(this.launcher.selector, 'onesignal-bell-launcher-bottom-right');\n        }\n        else {\n            throw new Error(`Invalid OneSignal notify button position ${this.options.position}`);\n        }\n        if (this.options.theme === 'default') {\n            addCssClass(this.launcher.selector, 'onesignal-bell-launcher-theme-default');\n        }\n        else if (this.options.theme === 'inverse') {\n            addCssClass(this.launcher.selector, 'onesignal-bell-launcher-theme-inverse');\n        }\n        else {\n            throw new Error(`Invalid OneSignal notify button theme ${this.options.theme}`);\n        }\n    }\n    async create() {\n        if (!this.options.enable)\n            return;\n        const sdkStylesLoadResult = await OneSignal.context.dynamicResourceLoader.loadSdkStylesheet();\n        if (sdkStylesLoadResult !== 0 /* ResourceLoadState.Loaded */) {\n            Log.debug('Not showing notify button because styles failed to load.');\n            return;\n        }\n        // Remove any existing bell\n        if (this.container) {\n            removeDomElement('#onesignal-bell-container');\n        }\n        // Insert the bell container\n        addDomElement('body', 'beforeend', '<div id=\"onesignal-bell-container\" class=\"onesignal-bell-container onesignal-reset\"></div>');\n        if (this.container) {\n            // Insert the bell launcher\n            addDomElement(this.container, 'beforeend', '<div id=\"onesignal-bell-launcher\" class=\"onesignal-bell-launcher\"></div>');\n        }\n        // Insert the bell launcher button\n        addDomElement(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-button\"></div>');\n        // Insert the bell launcher badge\n        addDomElement(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-badge\"></div>');\n        // Insert the bell launcher message\n        addDomElement(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-message\"></div>');\n        addDomElement(this.message.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-message-body\"></div>');\n        // Insert the bell launcher dialog\n        addDomElement(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-dialog\"></div>');\n        addDomElement(this.dialog.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-dialog-body\"></div>');\n        // Install events\n        // Add visual elements\n        addDomElement(this.button.selector, 'beforeend', logoSvg);\n        const isPushEnabled = await OneSignal.context.subscriptionManager.isPushNotificationsEnabled();\n        DismissHelper.wasPromptOfTypeDismissed(DismissPrompt.Push);\n        // Resize to small instead of specified size if enabled, otherwise there's a jerking motion\n        // where the bell, at a different size than small, jerks sideways to go from large -> small or medium -> small\n        const resizeTo = isPushEnabled\n            ? 'small'\n            : this.options.size || this.DEFAULT_SIZE;\n        await this.launcher.resize(resizeTo);\n        this.addDefaultClasses();\n        this.applyOffsetIfSpecified();\n        this.setCustomColorsIfSpecified();\n        this.patchSafariSvgFilterBug();\n        Log.info('Showing the notify button.');\n        await (isPushEnabled ? this.launcher.inactivate() : nothing())\n            .then(() => {\n            if (isPushEnabled && this.dialog.notificationIcons === null) {\n                return MainHelper.getNotificationIcons().then((icons) => {\n                    this.dialog.notificationIcons = icons;\n                });\n            }\n            else\n                return nothing();\n        })\n            .then(() => delay(this.options.showLauncherAfter || 0))\n            .then(() => {\n            return this.launcher.show();\n        })\n            .then(() => {\n            return delay(this.options.showBadgeAfter || 0);\n        })\n            .then(() => {\n            if (this.options.prenotify &&\n                !isPushEnabled &&\n                OneSignal._isNewVisitor) {\n                return this.message\n                    .enqueue(this.options.text['message.prenotify'])\n                    .then(() => this.badge.show());\n            }\n            else\n                return nothing();\n        })\n            .then(() => (this.initialized = true));\n    }\n    patchSafariSvgFilterBug() {\n        if (!(bowserCastle().name == 'safari' && Number(bowserCastle().version) >= 9.1)) {\n            const bellShadow = `drop-shadow(0 2px 4px rgba(34,36,38,0.35));`;\n            const badgeShadow = `drop-shadow(0 2px 4px rgba(34,36,38,0));`;\n            const dialogShadow = `drop-shadow(0px 2px 2px rgba(34,36,38,.15));`;\n            this.graphic.setAttribute('style', `filter: ${bellShadow}; -webkit-filter: ${bellShadow};`);\n            this.badge.element.setAttribute('style', `filter: ${badgeShadow}; -webkit-filter: ${badgeShadow};`);\n            this.dialog.element.setAttribute('style', `filter: ${dialogShadow}; -webkit-filter: ${dialogShadow};`);\n        }\n        if (bowserCastle().name == 'safari') {\n            this.badge.element.setAttribute('style', `display: none;`);\n        }\n    }\n    applyOffsetIfSpecified() {\n        const offset = this.options.offset;\n        if (offset) {\n            const element = this.launcher.element;\n            if (!element) {\n                Log.error('Could not find bell dom element');\n                return;\n            }\n            // Reset styles first\n            element.style.cssText = '';\n            if (offset.bottom) {\n                element.style.cssText += `bottom: ${offset.bottom};`;\n            }\n            if (this.options.position === 'bottom-right') {\n                if (offset.right) {\n                    element.style.cssText += `right: ${offset.right};`;\n                }\n            }\n            else if (this.options.position === 'bottom-left') {\n                if (offset.left) {\n                    element.style.cssText += `left: ${offset.left};`;\n                }\n            }\n        }\n    }\n    setCustomColorsIfSpecified() {\n        // Some common vars first\n        const dialogButton = this.dialog.element.querySelector('button.action');\n        const pulseRing = this.button.element.querySelector('.pulse-ring');\n        // Reset added styles first\n        this.graphic.querySelector('.background').style.cssText = '';\n        const foregroundElements = this.graphic.querySelectorAll('.foreground');\n        for (let i = 0; i < foregroundElements.length; i++) {\n            const element = foregroundElements[i];\n            element.style.cssText = '';\n        }\n        this.graphic.querySelector('.stroke').style.cssText = '';\n        this.badge.element.style.cssText = '';\n        if (dialogButton) {\n            dialogButton.style.cssText = '';\n            dialogButton.style.cssText = '';\n        }\n        if (pulseRing) {\n            pulseRing.style.cssText = '';\n        }\n        // Set new styles\n        if (this.options.colors) {\n            const colors = this.options.colors;\n            if (colors['circle.background']) {\n                this.graphic.querySelector('.background').style.cssText += `fill: ${colors['circle.background']}`;\n            }\n            if (colors['circle.foreground']) {\n                const foregroundElements = this.graphic.querySelectorAll('.foreground');\n                for (let i = 0; i < foregroundElements.length; i++) {\n                    const element = foregroundElements[i];\n                    element.style.cssText += `fill: ${colors['circle.foreground']}`;\n                }\n                this.graphic.querySelector('.stroke').style.cssText += `stroke: ${colors['circle.foreground']}`;\n            }\n            if (colors['badge.background']) {\n                this.badge.element.style.cssText += `background: ${colors['badge.background']}`;\n            }\n            if (colors['badge.bordercolor']) {\n                this.badge.element.style.cssText += `border-color: ${colors['badge.bordercolor']}`;\n            }\n            if (colors['badge.foreground']) {\n                this.badge.element.style.cssText += `color: ${colors['badge.foreground']}`;\n            }\n            if (dialogButton) {\n                if (colors['dialog.button.background']) {\n                    this.dialog.element.querySelector('button.action').style.cssText += `background: ${colors['dialog.button.background']}`;\n                }\n                if (colors['dialog.button.foreground']) {\n                    this.dialog.element.querySelector('button.action').style.cssText += `color: ${colors['dialog.button.foreground']}`;\n                }\n                if (colors['dialog.button.background.hovering']) {\n                    this.addCssToHead('onesignal-background-hover-style', `#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button.action:hover { background: ${colors['dialog.button.background.hovering']} !important; }`);\n                }\n                if (colors['dialog.button.background.active']) {\n                    this.addCssToHead('onesignal-background-active-style', `#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button.action:active { background: ${colors['dialog.button.background.active']} !important; }`);\n                }\n            }\n            if (pulseRing) {\n                if (colors['pulse.color']) {\n                    this.button.element.querySelector('.pulse-ring').style.cssText = `border-color: ${colors['pulse.color']}`;\n                }\n            }\n        }\n    }\n    addCssToHead(id, css) {\n        const existingStyleDom = document.getElementById(id);\n        if (existingStyleDom)\n            return;\n        const styleDom = document.createElement('style');\n        styleDom.id = id;\n        styleDom.type = 'text/css';\n        styleDom.appendChild(document.createTextNode(css));\n        document.head.appendChild(styleDom);\n    }\n    /**\n     * Updates the current state to the correct new current state. Returns a promise.\n     */\n    updateState() {\n        Promise.all([\n            OneSignal.context.subscriptionManager.isPushNotificationsEnabled(),\n            OneSignal.context.permissionManager.getPermissionStatus(),\n        ])\n            .then(([isEnabled, permission]) => {\n            this.setState(isEnabled ? Bell.STATES.SUBSCRIBED : Bell.STATES.UNSUBSCRIBED);\n            if (permission === NotificationPermission.Denied) {\n                this.setState(Bell.STATES.BLOCKED);\n            }\n        })\n            .catch((e) => {\n            Log.error(e);\n        });\n    }\n    /**\n     * Updates the current state to the specified new state.\n     * @param newState One of ['subscribed', 'unsubscribed'].\n     */\n    setState(newState, silent = false) {\n        const lastState = this.state;\n        this.state = newState;\n        if (lastState !== newState && !silent) {\n            OneSignalEvent.trigger(Bell.EVENTS.STATE_CHANGED, {\n                from: lastState,\n                to: newState,\n            });\n            // Update anything that should be changed here in the new state\n        }\n        // Update anything that should be reset to the same state\n    }\n    get container() {\n        return document.querySelector('#onesignal-bell-container');\n    }\n    get graphic() {\n        return this.button.element.querySelector('svg');\n    }\n    get launcher() {\n        if (!this._launcher)\n            this._launcher = new Launcher(this);\n        return this._launcher;\n    }\n    get button() {\n        if (!this._button)\n            this._button = new Button(this);\n        return this._button;\n    }\n    get badge() {\n        if (!this._badge)\n            this._badge = new Badge();\n        return this._badge;\n    }\n    get message() {\n        if (!this._message)\n            this._message = new Message(this);\n        return this._message;\n    }\n    get dialog() {\n        if (!this._dialog)\n            this._dialog = new Dialog(this);\n        return this._dialog;\n    }\n    get subscribed() {\n        return this.state === Bell.STATES.SUBSCRIBED;\n    }\n    get unsubscribed() {\n        return this.state === Bell.STATES.UNSUBSCRIBED;\n    }\n    get blocked() {\n        return this.state === Bell.STATES.BLOCKED;\n    }\n}\n//# sourceMappingURL=Bell.js.map","import { NotificationPermission } from '../models/NotificationPermission';\nimport MainHelper from './MainHelper';\nimport SubscriptionHelper from './SubscriptionHelper';\nimport { SdkInitError, SdkInitErrorKind } from '../errors/SdkInitError';\nimport Log from '../libraries/Log';\nimport { CustomLinkManager } from '../managers/CustomLinkManager';\nimport Bell from '../../page/bell/Bell';\nimport { DynamicResourceLoader } from '../../page/services/DynamicResourceLoader';\nimport Database from '../services/Database';\nimport LimitStore from '../services/LimitStore';\nimport { once, triggerNotificationPermissionChanged } from '../utils/utils';\nimport Environment from './Environment';\nimport OneSignalEvent from '../services/OneSignalEvent';\nimport { bowserCastle } from '../utils/bowserCastle';\nexport default class InitHelper {\n    /** Main methods */\n    static async internalInit() {\n        Log.debug('Called internalInit()');\n        // Always check for an updated service worker\n        await OneSignal.context.serviceWorkerManager.installWorker();\n        const sessionManager = OneSignal.context.sessionManager;\n        OneSignal.emitter.on(OneSignal.EVENTS.SESSION_STARTED, sessionManager.sendOnSessionUpdateFromPage.bind(sessionManager));\n        OneSignal.context.pageViewManager.incrementPageViewCount();\n        if (document.visibilityState !== 'visible') {\n            InitHelper.postponeSessionInitUntilPageIsInFocus();\n            return;\n        }\n        await InitHelper.sessionInit();\n    }\n    static postponeSessionInitUntilPageIsInFocus() {\n        once(document, 'visibilitychange', (_, destroyEventListener) => {\n            if (document.visibilityState === 'visible') {\n                destroyEventListener();\n                InitHelper.sessionInit();\n            }\n        }, true);\n    }\n    static async sessionInit() {\n        Log.debug(`Called sessionInit()`);\n        if (OneSignal._sessionInitAlreadyRunning) {\n            Log.debug('Returning from sessionInit because it has already been called.');\n            return;\n        }\n        OneSignal._sessionInitAlreadyRunning = true;\n        try {\n            await InitHelper.doInitialize();\n        }\n        catch (err) {\n            if (err instanceof SdkInitError) {\n                return;\n            }\n            throw err;\n        }\n        /**\n         * We don't want to resubscribe if the user is opted out, and we can't check on HTTP, because the promise will\n         * prevent the popup from opening.\n         */\n        const isOptedOut = await OneSignal.context.subscriptionManager.isOptedOut();\n        // saves isOptedOut to localStorage. used for require user interaction functionality\n        const subscription = await Database.getSubscription();\n        subscription.optedOut = isOptedOut;\n        await Database.setSubscription(subscription);\n        await InitHelper.handleAutoResubscribe(isOptedOut);\n        const isSubscribed = await OneSignal.context.subscriptionManager.isPushNotificationsEnabled();\n        // saves isSubscribed to IndexedDb. used for require user interaction functionality\n        await Database.setIsPushEnabled(!!isSubscribed);\n        if (OneSignal.config.userConfig.promptOptions.autoPrompt && !isOptedOut) {\n            OneSignal.context.promptsManager.spawnAutoPrompts();\n        }\n        OneSignal._sessionInitAlreadyRunning = false;\n        await OneSignalEvent.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n    }\n    static async registerForPushNotifications() {\n        await SubscriptionHelper.registerForPush();\n    }\n    /**\n     * This event occurs after init.\n     * @private\n     */\n    static async onSdkInitialized() {\n        const wasUserResubscribed = await InitHelper.processExpiringSubscriptions();\n        /**\n         * If user's subscription was expiring and we processed it, our backend would get a player#create request.\n         * If user was not subscribed before and autoPrompting is on, user would get subscribed through player#create if\n         *  he clicks allow in an automatic prompt.\n         * If user has granted notification permissions but cleared the data and autoResubscribe is on, we will\n         *  resubscribe with autoResubscribe flag.\n         * In all other cases we would send an on_session request.\n         */\n        const isExistingUser = await OneSignal.context.subscriptionManager.isAlreadyRegisteredWithOneSignal();\n        if (isExistingUser) {\n            OneSignal.context.sessionManager.setupSessionEventListeners();\n            if (!wasUserResubscribed) {\n                await OneSignal.context.updateManager.sendOnSessionUpdate();\n            }\n        }\n        else if (!OneSignal.config.userConfig.promptOptions.autoPrompt &&\n            !OneSignal.config.userConfig.autoResubscribe) {\n            await OneSignal.context.updateManager.sendOnSessionUpdate();\n        }\n        await OneSignalEvent.trigger(OneSignal.EVENTS.SDK_INITIALIZED_PUBLIC);\n    }\n    /** Helper methods */\n    static async storeInitialValues() {\n        const isPushEnabled = await OneSignal.context.subscriptionManager.isPushNotificationsEnabled();\n        const notificationPermission = await OneSignal.context.permissionManager.getPermissionStatus();\n        const isOptedOut = await OneSignal.context.subscriptionManager.isOptedOut();\n        LimitStore.put('subscription.optedOut', isOptedOut);\n        await Database.put('Options', {\n            key: 'isPushEnabled',\n            value: isPushEnabled,\n        });\n        await Database.put('Options', {\n            key: 'notificationPermission',\n            value: notificationPermission,\n        });\n    }\n    static async setWelcomeNotificationFlag() {\n        /*\n         * If the user has already granted permission, the user has previously\n         * already subscribed. Don't show welcome notifications if the user is\n         * automatically resubscribed.\n         */\n        const permission = await OneSignal.context.permissionManager.getNotificationPermission(OneSignal.context.appConfig.safariWebId);\n        if (permission === NotificationPermission.Granted) {\n            OneSignal.__doNotShowWelcomeNotification = true;\n        }\n    }\n    static async establishServiceWorkerChannel() {\n        if (navigator.serviceWorker && window.isSecureContext) {\n            try {\n                await OneSignal.context.serviceWorkerManager.establishServiceWorkerChannel();\n            }\n            catch (e) {\n                Log.error(e);\n            }\n        }\n    }\n    /** Entry method for any environment that sets expiring subscriptions. */\n    static async processExpiringSubscriptions() {\n        const context = OneSignal.context;\n        Log.debug('Checking subscription expiration...');\n        const isSubscriptionExpiring = await context.subscriptionManager.isSubscriptionExpiring();\n        if (!isSubscriptionExpiring) {\n            Log.debug('Subscription is not considered expired.');\n            return false;\n        }\n        Log.debug('Subscription is considered expiring.');\n        const rawPushSubscription = await context.subscriptionManager.subscribe(1 /* SubscriptionStrategyKind.SubscribeNew */);\n        await context.subscriptionManager.registerSubscription(rawPushSubscription);\n        return true;\n    }\n    static async doInitialize() {\n        const promises = [];\n        // Store initial values of notification permission, user ID, and manual subscription status\n        // This is done so that the values can be later compared to see if anything changed\n        promises.push(InitHelper.storeInitialValues());\n        promises.push(InitHelper.installNativePromptPermissionChangedHook());\n        promises.push(InitHelper.setWelcomeNotificationFlag());\n        promises.push(InitHelper.establishServiceWorkerChannel());\n        promises.push(InitHelper.showNotifyButton());\n        promises.push(InitHelper.showPromptsFromWebConfigEditor());\n        try {\n            await Promise.all(promises);\n        }\n        catch (e) {\n            Log.error(e);\n            throw new SdkInitError(SdkInitErrorKind.Unknown);\n        }\n    }\n    static async showNotifyButton() {\n        if (Environment.isBrowser() && !OneSignal.notifyButton) {\n            OneSignal.config.userConfig.notifyButton =\n                OneSignal.config.userConfig.notifyButton || {};\n            if (OneSignal.config.userConfig.bell) {\n                // If both bell and notifyButton, notifyButton's options take precedence\n                OneSignal.config.userConfig.bell = Object.assign(Object.assign({}, OneSignal.config.userConfig.bell), OneSignal.config.userConfig.notifyButton);\n                OneSignal.config.userConfig.notifyButton = Object.assign(Object.assign({}, OneSignal.config.userConfig.notifyButton), OneSignal.config.userConfig.bell);\n            }\n            const displayPredicate = OneSignal.config.userConfig.notifyButton.displayPredicate;\n            if (displayPredicate && typeof displayPredicate === 'function') {\n                OneSignal.emitter.once(OneSignal.EVENTS.SDK_INITIALIZED, async () => {\n                    const predicateValue = await Promise.resolve(OneSignal.config.userConfig.notifyButton.displayPredicate());\n                    if (predicateValue !== false) {\n                        OneSignal.notifyButton = new Bell(OneSignal.config.userConfig.notifyButton);\n                        OneSignal.notifyButton.create();\n                    }\n                    else {\n                        Log.debug('Notify button display predicate returned false so not showing the notify button.');\n                    }\n                });\n            }\n            else {\n                OneSignal.notifyButton = new Bell(OneSignal.config.userConfig.notifyButton);\n                OneSignal.notifyButton.create();\n            }\n        }\n    }\n    static async showPromptsFromWebConfigEditor() {\n        const config = OneSignal.config;\n        if (config.userConfig.promptOptions) {\n            await new CustomLinkManager(config.userConfig.promptOptions.customlink).initialize();\n        }\n    }\n    static async installNativePromptPermissionChangedHook() {\n        try {\n            if (navigator.permissions) {\n                const permissionStatus = await navigator.permissions.query({\n                    name: 'notifications',\n                });\n                // NOTE: Safari 16.4 has a bug where onchange callback never fires\n                permissionStatus.onchange = function () {\n                    triggerNotificationPermissionChanged();\n                };\n            }\n        }\n        catch (e) {\n            // Some browsers (Safari 16.3 and older) have the API navigator.permissions.query, but don't support the\n            // { name: 'notifications' } param and throws.\n            Log.warn(`Could not install native notification permission change hook w/ error: ${e}`);\n        }\n    }\n    static async saveInitOptions() {\n        const opPromises = [];\n        const persistNotification = OneSignal.config.userConfig.persistNotification;\n        opPromises.push(Database.put('Options', {\n            key: 'persistNotification',\n            value: persistNotification != null ? persistNotification : true,\n        }));\n        const webhookOptions = OneSignal.config.userConfig.webhooks;\n        [\n            'notification.willDisplay',\n            'notification.clicked',\n            'notification.dismissed',\n        ].forEach((event) => {\n            if (webhookOptions && webhookOptions[event]) {\n                opPromises.push(Database.put('Options', {\n                    key: `webhooks.${event}`,\n                    value: webhookOptions[event],\n                }));\n            }\n            else {\n                opPromises.push(Database.put('Options', { key: `webhooks.${event}`, value: false }));\n            }\n        });\n        if (webhookOptions && webhookOptions.cors) {\n            opPromises.push(Database.put('Options', { key: `webhooks.cors`, value: true }));\n        }\n        else {\n            opPromises.push(Database.put('Options', { key: `webhooks.cors`, value: false }));\n        }\n        if (OneSignal.config.userConfig.notificationClickHandlerMatch) {\n            opPromises.push(Database.put('Options', {\n                key: 'notificationClickHandlerMatch',\n                value: OneSignal.config.userConfig.notificationClickHandlerMatch,\n            }));\n        }\n        else {\n            opPromises.push(Database.put('Options', {\n                key: 'notificationClickHandlerMatch',\n                value: 'exact',\n            }));\n        }\n        if (OneSignal.config.userConfig.notificationClickHandlerAction) {\n            opPromises.push(Database.put('Options', {\n                key: 'notificationClickHandlerAction',\n                value: OneSignal.config.userConfig.notificationClickHandlerAction,\n            }));\n        }\n        else {\n            opPromises.push(Database.put('Options', {\n                key: 'notificationClickHandlerAction',\n                value: 'navigate',\n            }));\n        }\n        return Promise.all(opPromises);\n    }\n    static async initSaveState(overridingPageTitle) {\n        const appId = await MainHelper.getAppId();\n        const config = OneSignal.config;\n        await Database.put('Ids', { type: 'appId', id: appId });\n        const pageTitle = overridingPageTitle ||\n            config.siteName ||\n            document.title ||\n            'Notification';\n        await Database.put('Options', { key: 'pageTitle', value: pageTitle });\n        Log.info(`OneSignal: Set pageTitle to be '${pageTitle}'.`);\n    }\n    static async handleAutoResubscribe(isOptedOut) {\n        Log.info('handleAutoResubscribe', {\n            autoResubscribe: OneSignal.config.userConfig.autoResubscribe,\n            isOptedOut,\n        });\n        if (OneSignal.config.userConfig.autoResubscribe && !isOptedOut) {\n            const currentPermission = await OneSignal.context.permissionManager.getNotificationPermission(OneSignal.context.appConfig.safariWebId);\n            if (currentPermission == NotificationPermission.Granted) {\n                await SubscriptionHelper.registerForPush();\n            }\n        }\n    }\n    static async polyfillSafariFetch() {\n        // If Safari - add 'fetch' pollyfill if it isn't already added.\n        if (bowserCastle().name == 'safari' && typeof window.fetch == 'undefined') {\n            Log.debug('Loading fetch polyfill for Safari..');\n            try {\n                await new DynamicResourceLoader().loadFetchPolyfill();\n                Log.debug('Done loading fetch polyfill.');\n            }\n            catch (e) {\n                Log.debug('Error loading fetch polyfill:', e);\n            }\n        }\n    }\n    static errorIfInitAlreadyCalled() {\n        if (OneSignal._initCalled)\n            throw new SdkInitError(SdkInitErrorKind.MultipleInitialization);\n        OneSignal._initCalled = true;\n    }\n}\n//# sourceMappingURL=InitHelper.js.map","import TaggingContainer from '../../slidedown/TaggingContainer';\nimport TagUtils from '../../../shared/utils/TagUtils';\nimport Slidedown, { manageNotifyButtonStateWhileSlidedownShows, } from '../../slidedown/Slidedown';\nimport { CONFIG_DEFAULTS_SLIDEDOWN_OPTIONS } from '../../../shared/config/constants';\nimport PermissionMessageDismissedError from '../../errors/PermissionMessageDismissedError';\nimport { NotificationPermission } from '../../../shared/models/NotificationPermission';\nimport { OneSignalUtils } from '../../../shared/utils/OneSignalUtils';\nimport ChannelCaptureContainer from '../../slidedown/ChannelCaptureContainer';\nimport ConfirmationToast from '../../slidedown/ConfirmationToast';\nimport { awaitableTimeout } from '../../../shared/utils/AwaitableTimeout';\nimport { DismissPrompt } from '../../models/Dismiss';\nimport AlreadySubscribedError from '../../errors/AlreadySubscribedError';\nimport { ChannelCaptureError, InvalidChannelInputField, } from '../../../page/errors/ChannelCaptureError';\nimport ExistingChannelError from '../../../page/errors/ExistingChannelError';\nimport PushPermissionNotGrantedError, { PushPermissionNotGrantedErrorReason, } from '../../../shared/errors/PushPermissionNotGrantedError';\nimport { DismissHelper } from '../../../shared/helpers/DismissHelper';\nimport InitHelper from '../../../shared/helpers/InitHelper';\nimport PromptsHelper from '../../../shared/helpers/PromptsHelper';\nimport Log from '../../../shared/libraries/Log';\nimport { DelayedPromptType } from '../../../shared/models/Prompts';\nimport OneSignalError from '../../../shared/errors/OneSignalError';\nimport { NotSubscribedError, NotSubscribedReason, } from '../../../shared/errors/NotSubscribedError';\nexport class SlidedownManager {\n    constructor(context) {\n        this.context = context;\n        this.slidedownQueue = [];\n        this.isSlidedownShowing = false;\n    }\n    /* P R I V A T E */\n    async checkIfSlidedownShouldBeShown(options) {\n        var _a;\n        const permissionDenied = (await OneSignal.context.permissionManager.getPermissionStatus()) ===\n            NotificationPermission.Denied;\n        let wasDismissed;\n        const subscriptionInfo = await OneSignal.context.subscriptionManager.getSubscriptionState();\n        const { subscribed, optedOut } = subscriptionInfo;\n        const slidedownType = (_a = options.slidedownPromptOptions) === null || _a === void 0 ? void 0 : _a.type;\n        let isSlidedownPushDependent = false;\n        if (!!slidedownType) {\n            isSlidedownPushDependent =\n                PromptsHelper.isSlidedownPushDependent(slidedownType);\n        }\n        // applies to both push and category slidedown types\n        if (isSlidedownPushDependent) {\n            if (subscribed) {\n                // applies to category slidedown type only\n                if (options.isInUpdateMode) {\n                    return true;\n                }\n                Log.info(new AlreadySubscribedError());\n                return false;\n            }\n            wasDismissed = DismissHelper.wasPromptOfTypeDismissed(DismissPrompt.Push);\n            if (optedOut) {\n                throw new NotSubscribedError(NotSubscribedReason.OptedOut);\n            }\n            if (permissionDenied) {\n                Log.info(new PushPermissionNotGrantedError(PushPermissionNotGrantedErrorReason.Blocked));\n                return false;\n            }\n        }\n        else {\n            if (!options.force) {\n                const smsSubscribed = await OneSignal.coreDirector.hasSms();\n                const emailSubscribed = await OneSignal.coreDirector.hasEmail();\n                const bothSubscribed = smsSubscribed && emailSubscribed;\n                if (smsSubscribed && slidedownType === DelayedPromptType.Sms) {\n                    Log.info(new ExistingChannelError(DelayedPromptType.Sms));\n                    return false;\n                }\n                if (emailSubscribed && slidedownType === DelayedPromptType.Email) {\n                    Log.info(new ExistingChannelError(DelayedPromptType.Email));\n                    return false;\n                }\n                if (bothSubscribed && slidedownType === DelayedPromptType.SmsAndEmail) {\n                    Log.info(new ExistingChannelError(DelayedPromptType.SmsAndEmail));\n                    return false;\n                }\n            }\n            wasDismissed = DismissHelper.wasPromptOfTypeDismissed(DismissPrompt.NonPush);\n        }\n        if (wasDismissed && !options.force && !options.isInUpdateMode) {\n            Log.info(new PermissionMessageDismissedError(slidedownType));\n            return false;\n        }\n        return true;\n    }\n    registerForPush() {\n        InitHelper.registerForPushNotifications();\n    }\n    async handleAllowForCategoryType() {\n        if (!this.slidedown) {\n            throw new OneSignalError(`SlidedownManager: handleAllowForCategoryType: this.slidedown is undefined`);\n        }\n        const tags = TaggingContainer.getValuesFromTaggingContainer();\n        this.context.tagManager.storeTagValuesToUpdate(tags);\n        this.registerForPush();\n        await this.context.tagManager.sendTags(true);\n    }\n    async handleAllowForEmailType() {\n        var _a, _b, _c;\n        if (!this.slidedown) {\n            throw new OneSignalError(`SlidedownManager: handleAllowForEmailType: this.slidedown is undefined`);\n        }\n        const emailInputFieldIsValid = (_a = this.slidedown.channelCaptureContainer) === null || _a === void 0 ? void 0 : _a.emailInputFieldIsValid;\n        const isEmailEmpty = (_b = this.slidedown.channelCaptureContainer) === null || _b === void 0 ? void 0 : _b.isEmailInputFieldEmpty();\n        if (!emailInputFieldIsValid || isEmailEmpty) {\n            throw new ChannelCaptureError(InvalidChannelInputField.InvalidEmail);\n        }\n        const email = (_c = this.slidedown.channelCaptureContainer) === null || _c === void 0 ? void 0 : _c.getValueFromEmailInput();\n        this.updateEmail(email);\n    }\n    async handleAllowForSmsType() {\n        var _a, _b, _c;\n        if (!this.slidedown) {\n            throw new OneSignalError(`SlidedownManager: handleAllowForSmsType: this.slidedown is undefined`);\n        }\n        const smsInputFieldIsValid = (_a = this.slidedown.channelCaptureContainer) === null || _a === void 0 ? void 0 : _a.smsInputFieldIsValid;\n        const isSmsEmpty = (_b = this.slidedown.channelCaptureContainer) === null || _b === void 0 ? void 0 : _b.isSmsInputFieldEmpty();\n        if (!smsInputFieldIsValid || isSmsEmpty) {\n            throw new ChannelCaptureError(InvalidChannelInputField.InvalidSms);\n        }\n        const sms = (_c = this.slidedown.channelCaptureContainer) === null || _c === void 0 ? void 0 : _c.getValueFromSmsInput();\n        this.updateSMS(sms);\n    }\n    async handleAllowForSmsAndEmailType() {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.slidedown) {\n            throw new OneSignalError(`SlidedownManager: handleAllowForSmsAndEmailType: this.slidedown is undefined`);\n        }\n        const smsInputFieldIsValid = (_a = this.slidedown.channelCaptureContainer) === null || _a === void 0 ? void 0 : _a.smsInputFieldIsValid;\n        const emailInputFieldIsValid = (_b = this.slidedown.channelCaptureContainer) === null || _b === void 0 ? void 0 : _b.emailInputFieldIsValid;\n        /**\n         * empty input fields are considered valid since in the case of two input field types present,\n         * we can accept one of the two being left as an empty string.\n         *\n         * thus, we need separate checks for the emptiness properties\n         */\n        const isEmailEmpty = (_c = this.slidedown.channelCaptureContainer) === null || _c === void 0 ? void 0 : _c.isEmailInputFieldEmpty();\n        const isSmsEmpty = (_d = this.slidedown.channelCaptureContainer) === null || _d === void 0 ? void 0 : _d.isSmsInputFieldEmpty();\n        const bothFieldsEmpty = isEmailEmpty && isSmsEmpty;\n        const bothFieldsInvalid = !smsInputFieldIsValid && !emailInputFieldIsValid;\n        if (bothFieldsInvalid || bothFieldsEmpty) {\n            throw new ChannelCaptureError(InvalidChannelInputField.InvalidEmailAndSms);\n        }\n        const email = (_e = this.slidedown.channelCaptureContainer) === null || _e === void 0 ? void 0 : _e.getValueFromEmailInput();\n        const sms = (_f = this.slidedown.channelCaptureContainer) === null || _f === void 0 ? void 0 : _f.getValueFromSmsInput();\n        /**\n         * empty is ok (we can accept only one of two input fields), but invalid is not\n         * at least one field is valid and non-empty\n         */\n        if (emailInputFieldIsValid) {\n            if (!isEmailEmpty) {\n                this.updateEmail(email);\n            }\n        }\n        else {\n            throw new ChannelCaptureError(InvalidChannelInputField.InvalidEmail);\n        }\n        if (smsInputFieldIsValid) {\n            if (!isSmsEmpty) {\n                this.updateSMS(sms);\n            }\n        }\n        else {\n            throw new ChannelCaptureError(InvalidChannelInputField.InvalidSms);\n        }\n    }\n    updateEmail(email) {\n        if (!email) {\n            return;\n        }\n        OneSignal.User.addEmail(email);\n    }\n    updateSMS(sms) {\n        if (!sms) {\n            return;\n        }\n        OneSignal.User.addSms(sms);\n    }\n    async showConfirmationToast() {\n        if (!this.slidedown) {\n            throw new OneSignalError(`SlidedownManager: showConfirmationToast: this.slidedown is undefined`);\n        }\n        const confirmMessage = this.slidedown.options.text.confirmMessage;\n        if (!confirmMessage) {\n            return;\n        }\n        await awaitableTimeout(1000);\n        const confirmationToast = new ConfirmationToast(confirmMessage);\n        await confirmationToast.show();\n        await awaitableTimeout(5000);\n        confirmationToast.close();\n        ConfirmationToast.triggerSlidedownEvent(ConfirmationToast.EVENTS.CLOSED);\n    }\n    async mountAuxiliaryContainers(options) {\n        var _a;\n        switch ((_a = options.slidedownPromptOptions) === null || _a === void 0 ? void 0 : _a.type) {\n            case DelayedPromptType.Category:\n                this.mountTaggingContainer(options);\n                break;\n            case DelayedPromptType.Email:\n            case DelayedPromptType.Sms:\n            case DelayedPromptType.SmsAndEmail:\n                await this.mountChannelCaptureContainer(options);\n                break;\n            default:\n                break;\n        }\n    }\n    async mountTaggingContainer(options) {\n        var _a;\n        OneSignalUtils.logMethodCall('mountTaggingContainer');\n        try {\n            // show slidedown with tagging container\n            let tagsForComponent = {};\n            const taggingContainer = new TaggingContainer();\n            const categories = (_a = options.slidedownPromptOptions) === null || _a === void 0 ? void 0 : _a.categories;\n            if (!categories) {\n                throw new Error('Categories not defined');\n            }\n            const propertiesOSModel = OneSignal.coreDirector.getPropertiesModel();\n            const existingTags = propertiesOSModel === null || propertiesOSModel === void 0 ? void 0 : propertiesOSModel.data.tags;\n            if (options.isInUpdateMode && existingTags) {\n                this.context.tagManager.storeRemotePlayerTags(existingTags);\n                tagsForComponent = TagUtils.convertTagsApiToBooleans(existingTags);\n            }\n            else {\n                // first subscription or no existing tags\n                TagUtils.markAllTagsAsSpecified(categories, true);\n            }\n            taggingContainer.mount(categories, tagsForComponent);\n        }\n        catch (e) {\n            Log.error('OneSignal: Attempted to create tagging container with error', e);\n        }\n    }\n    async mountChannelCaptureContainer(options) {\n        OneSignalUtils.logMethodCall('mountChannelCaptureContainer');\n        try {\n            if (!!options.slidedownPromptOptions) {\n                const channelCaptureContainer = new ChannelCaptureContainer(options.slidedownPromptOptions);\n                channelCaptureContainer.mount();\n                if (this.slidedown) {\n                    this.slidedown.channelCaptureContainer = channelCaptureContainer;\n                }\n            }\n        }\n        catch (e) {\n            Log.error('OneSignal: Attempted to create channel capture container with error', e);\n        }\n    }\n    /* P U B L I C */\n    async handleAllowClick() {\n        if (!this.slidedown) {\n            throw new OneSignalError(`SlidedownManager: handleAllowClick: this.slidedown is undefined`);\n        }\n        const slidedownType = this.slidedown.options.type;\n        if (this.slidedown.isShowingFailureState) {\n            this.slidedown.removeFailureState();\n        }\n        try {\n            switch (slidedownType) {\n                case DelayedPromptType.Push:\n                    this.registerForPush();\n                    break;\n                case DelayedPromptType.Category:\n                    await this.handleAllowForCategoryType();\n                    break;\n                case DelayedPromptType.Email:\n                    await this.handleAllowForEmailType();\n                    break;\n                case DelayedPromptType.Sms:\n                    await this.handleAllowForSmsType();\n                    break;\n                case DelayedPromptType.SmsAndEmail:\n                    await this.handleAllowForSmsAndEmailType();\n                    break;\n                default:\n                    break;\n            }\n        }\n        catch (e) {\n            Log.warn('OneSignal Slidedown failed to update:', e);\n            // Display update error\n            this.slidedown.removeSaveState();\n            this.slidedown.setFailureState();\n            if (e.reason !== undefined) {\n                this.slidedown.setFailureStateForInvalidChannelInput(e.reason);\n            }\n            return;\n        }\n        if (this.slidedown) {\n            this.slidedown.close();\n            if (!PromptsHelper.isSlidedownPushDependent(slidedownType)) {\n                await this.showConfirmationToast();\n            }\n            // timeout to allow slidedown close animation to finish in case another slidedown is queued\n            await awaitableTimeout(1000);\n            Slidedown.triggerSlidedownEvent(Slidedown.EVENTS.CLOSED);\n        }\n        switch (slidedownType) {\n            case DelayedPromptType.Push:\n            case DelayedPromptType.Category:\n                Log.debug('Setting flag to not show the slidedown to the user again.');\n                DismissHelper.markPromptDismissedWithType(DismissPrompt.Push);\n                break;\n            default:\n                Log.debug('Setting flag to not show the slidedown to the user again.');\n                DismissHelper.markPromptDismissedWithType(DismissPrompt.NonPush);\n                break;\n        }\n    }\n    setIsSlidedownShowing(isShowing) {\n        this.isSlidedownShowing = isShowing;\n    }\n    async showQueued() {\n        if (this.slidedownQueue.length > 0) {\n            const options = this.dequeue();\n            if (!!options) {\n                await this.createSlidedown(options);\n            }\n        }\n    }\n    enqueue(options) {\n        this.slidedownQueue.push(options);\n        Slidedown.triggerSlidedownEvent(Slidedown.EVENTS.QUEUED);\n    }\n    dequeue() {\n        return this.slidedownQueue.shift();\n    }\n    async createSlidedown(options) {\n        var _a;\n        OneSignalUtils.logMethodCall('createSlidedown');\n        try {\n            const showPrompt = await this.checkIfSlidedownShouldBeShown(options);\n            if (!showPrompt) {\n                return;\n            }\n        }\n        catch (e) {\n            Log.warn('checkIfSlidedownShouldBeShown returned an error', e);\n            return;\n        }\n        manageNotifyButtonStateWhileSlidedownShows();\n        if (this.isSlidedownShowing) {\n            // already showing, enqueue\n            this.enqueue(options);\n            return;\n        }\n        try {\n            this.setIsSlidedownShowing(true);\n            const slidedownPromptOptions = options.slidedownPromptOptions || CONFIG_DEFAULTS_SLIDEDOWN_OPTIONS;\n            this.slidedown = new Slidedown(slidedownPromptOptions);\n            await this.slidedown.create(options.isInUpdateMode);\n            await this.mountAuxiliaryContainers(options);\n            Log.debug('Showing OneSignal Slidedown');\n            Slidedown.triggerSlidedownEvent(Slidedown.EVENTS.SHOWN);\n        }\n        catch (e) {\n            Log.error('There was an error showing the OneSignal Slidedown:', e);\n            this.setIsSlidedownShowing(false);\n            (_a = this.slidedown) === null || _a === void 0 ? void 0 : _a.close();\n        }\n    }\n}\n//# sourceMappingURL=SlidedownManager.js.map","import OneSignalEvent from '../../shared/services/OneSignalEvent';\nimport { CONFIG_DEFAULTS_SLIDEDOWN_OPTIONS, SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS, } from '../../shared/config/constants';\nimport { DismissHelper } from '../../shared/helpers/DismissHelper';\nimport InitHelper from '../../shared/helpers/InitHelper';\nimport PromptsHelper from '../../shared/helpers/PromptsHelper';\nimport Log from '../../shared/libraries/Log';\nimport { DelayedPromptType, } from '../../shared/models/Prompts';\nimport { awaitableTimeout } from '../../shared/utils/AwaitableTimeout';\nimport OneSignalUtils from '../../shared/utils/OneSignalUtils';\nimport { EnvironmentInfoHelper } from '../helpers/EnvironmentInfoHelper';\nimport { DismissPrompt } from '../models/Dismiss';\nimport Slidedown from '../slidedown/Slidedown';\nimport { bowserCastle } from '../../shared/utils/bowserCastle';\nexport class PromptsManager {\n    constructor(context) {\n        this.isNativePromptShowing = false;\n        this.context = context;\n        this.eventHooksInstalled = false;\n    }\n    shouldForceSlidedownOverNative() {\n        const { environmentInfo } = OneSignal;\n        const { browserType, browserVersion, requiresUserInteraction } = environmentInfo;\n        return ((browserType === 'chrome' &&\n            Number(browserVersion) >= 63 &&\n            (bowserCastle().tablet || bowserCastle().mobile)) ||\n            requiresUserInteraction);\n    }\n    async spawnAutoPrompts() {\n        var _a, _b;\n        // user config prompt options\n        const userPromptOptions = OneSignal.config.userConfig.promptOptions;\n        /*\n         * Chrome 63 on Android permission prompts are permanent without a dismiss option. To avoid\n         * permanent blocks, we want to replace sites automatically showing the native browser request\n         * with a slide prompt first.\n         * Same for Safari 12.1+ & Firefox 72+. It requires user interaction to request notification permissions.\n         * It simply wouldn't work to try to show native prompt from script.\n         */\n        const forceSlidedownOverNative = this.shouldForceSlidedownOverNative();\n        // show native prompt\n        const nativePromptOptions = this.getDelayedPromptOptions(userPromptOptions, DelayedPromptType.Native);\n        const isPageViewConditionMetForNative = this.isPageViewConditionMet(nativePromptOptions);\n        const conditionMetWithNativeOptions = nativePromptOptions.enabled && isPageViewConditionMetForNative;\n        const forceSlidedownWithNativeOptions = forceSlidedownOverNative && conditionMetWithNativeOptions;\n        if (conditionMetWithNativeOptions && !forceSlidedownWithNativeOptions) {\n            this.internalShowDelayedPrompt(DelayedPromptType.Native, nativePromptOptions.timeDelay || 0);\n            return;\n        }\n        // if slidedown not configured, condition met with native options, & should force slidedown over native:\n        const isPushSlidedownConfigured = !!PromptsHelper.getFirstSlidedownPromptOptionsWithType((_a = userPromptOptions.slidedown) === null || _a === void 0 ? void 0 : _a.prompts, DelayedPromptType.Push);\n        if (forceSlidedownWithNativeOptions && !isPushSlidedownConfigured) {\n            this.internalShowDelayedPrompt(DelayedPromptType.Push, nativePromptOptions.timeDelay || 0);\n        }\n        // spawn slidedown prompts\n        const prompts = (_b = userPromptOptions.slidedown) === null || _b === void 0 ? void 0 : _b.prompts;\n        if (!!prompts && (prompts === null || prompts === void 0 ? void 0 : prompts.length) > 0) {\n            for (let i = 0; i < prompts.length; i++) {\n                const promptOptions = prompts[i];\n                const slidedownPromptOptions = this.getDelayedPromptOptions(userPromptOptions, promptOptions.type);\n                const isPageViewConditionMetForSlidedown = this.isPageViewConditionMet(slidedownPromptOptions);\n                const conditionMetWithSlidedownOptions = slidedownPromptOptions.enabled && isPageViewConditionMetForSlidedown;\n                const options = {\n                    slidedownPromptOptions: promptOptions,\n                };\n                if (conditionMetWithSlidedownOptions) {\n                    this.internalShowDelayedPrompt(promptOptions.type, slidedownPromptOptions.timeDelay || 0, options);\n                }\n            }\n        }\n    }\n    async internalShowDelayedPrompt(type, timeDelaySeconds, options) {\n        OneSignalUtils.logMethodCall('internalShowDelayedPrompt');\n        if (typeof timeDelaySeconds !== 'number') {\n            Log.error('internalShowDelayedPrompt: timeDelay not a number');\n            return;\n        }\n        const { requiresUserInteraction } = EnvironmentInfoHelper.getEnvironmentInfo();\n        if (requiresUserInteraction && type === DelayedPromptType.Native) {\n            type = DelayedPromptType.Push; // Push Slidedown for cases where user interaction is needed\n        }\n        if (timeDelaySeconds > 0) {\n            await awaitableTimeout(timeDelaySeconds * 1000);\n        }\n        switch (type) {\n            case DelayedPromptType.Native:\n                await this.internalShowNativePrompt();\n                break;\n            case DelayedPromptType.Push:\n                await this.internalShowSlidedownPrompt(options);\n                break;\n            case DelayedPromptType.Category:\n                await this.internalShowCategorySlidedown(options);\n                break;\n            case DelayedPromptType.Sms:\n                await this.internalShowSmsSlidedown(options);\n                break;\n            case DelayedPromptType.Email:\n                await this.internalShowEmailSlidedown(options);\n                break;\n            case DelayedPromptType.SmsAndEmail:\n                await this.internalShowSmsAndEmailSlidedown(options);\n                break;\n            default:\n                Log.error('Invalid Delayed Prompt type');\n        }\n    }\n    async internalShowNativePrompt() {\n        OneSignalUtils.logMethodCall('internalShowNativePrompt');\n        if (this.isNativePromptShowing) {\n            Log.debug('Already showing autoprompt. Abort showing a native prompt.');\n            return;\n        }\n        this.isNativePromptShowing = true;\n        await InitHelper.registerForPushNotifications();\n        this.isNativePromptShowing = false;\n        DismissHelper.markPromptDismissedWithType(DismissPrompt.Push);\n    }\n    async internalShowSlidedownPrompt(options = { force: false }) {\n        OneSignalUtils.logMethodCall('internalShowSlidedownPrompt');\n        if (!options.slidedownPromptOptions) {\n            options.slidedownPromptOptions = CONFIG_DEFAULTS_SLIDEDOWN_OPTIONS;\n        }\n        const sdkStylesLoadResult = await this.context.dynamicResourceLoader.loadSdkStylesheet();\n        if (sdkStylesLoadResult !== 0 /* ResourceLoadState.Loaded */) {\n            Log.debug('Not showing slidedown permission message because styles failed to load.');\n            return;\n        }\n        if (!this.eventHooksInstalled) {\n            this.installEventHooksForSlidedown();\n        }\n        await this.context.slidedownManager.createSlidedown(options);\n    }\n    async internalShowCategorySlidedown(options) {\n        OneSignalUtils.logMethodCall('internalShowCategorySlidedown');\n        await this.internalShowParticularSlidedown(DelayedPromptType.Category, options);\n    }\n    async internalShowSmsSlidedown(options) {\n        OneSignalUtils.logMethodCall('internalShowSmsSlidedown');\n        await this.internalShowParticularSlidedown(DelayedPromptType.Sms, options);\n    }\n    async internalShowEmailSlidedown(options) {\n        OneSignalUtils.logMethodCall('internalShowEmailSlidedown');\n        await this.internalShowParticularSlidedown(DelayedPromptType.Email, options);\n    }\n    async internalShowSmsAndEmailSlidedown(options) {\n        OneSignalUtils.logMethodCall('internalShowSmsAndEmailSlidedown');\n        await this.internalShowParticularSlidedown(DelayedPromptType.SmsAndEmail, options);\n    }\n    /**\n     * Generalized shower function to show particular slidedown types\n     * @param  {DelayedPromptType} typeToPullFromConfig - slidedown type to look for in config if not passed via `options`\n     * @param  {AutoPromptOptions} options - passed in via another internal function or top level OneSignal slidedown func\n     *\n     * If present, `options.slidedownPromptOptions` overrides `typeToPullFromConfig`\n     */\n    async internalShowParticularSlidedown(typeToPullFromConfig, options) {\n        var _a, _b;\n        const prompts = (_b = (_a = this.context.appConfig.userConfig.promptOptions) === null || _a === void 0 ? void 0 : _a.slidedown) === null || _b === void 0 ? void 0 : _b.prompts;\n        const slidedownPromptOptions = (options === null || options === void 0 ? void 0 : options.slidedownPromptOptions) ||\n            PromptsHelper.getFirstSlidedownPromptOptionsWithType(prompts, typeToPullFromConfig);\n        if (!slidedownPromptOptions) {\n            if (typeToPullFromConfig !== DelayedPromptType.Push) {\n                Log.error(`OneSignal: slidedown of type '${typeToPullFromConfig}' couldn't be shown. Check your configuration` +\n                    ` on the OneSignal dashboard or your custom code initialization.`);\n                return;\n            }\n            else {\n                Log.warn(`The OneSignal 'push' slidedown will be shown with default text settings.` +\n                    ` To customize, see the OneSignal documentation.`);\n            }\n        }\n        await this.internalShowSlidedownPrompt(Object.assign(Object.assign({}, options), { slidedownPromptOptions }));\n    }\n    installEventHooksForSlidedown() {\n        this.eventHooksInstalled = true;\n        OneSignal.emitter.on(Slidedown.EVENTS.SHOWN, () => {\n            this.context.slidedownManager.setIsSlidedownShowing(true);\n        });\n        OneSignal.emitter.on(Slidedown.EVENTS.CLOSED, () => {\n            this.context.slidedownManager.setIsSlidedownShowing(false);\n            this.context.slidedownManager.showQueued();\n        });\n        OneSignal.emitter.on(Slidedown.EVENTS.ALLOW_CLICK, async () => {\n            await this.context.slidedownManager.handleAllowClick();\n            OneSignalEvent.trigger(OneSignal.EVENTS.TEST_FINISHED_ALLOW_CLICK_HANDLING);\n        });\n        OneSignal.emitter.on(Slidedown.EVENTS.CANCEL_CLICK, () => {\n            var _a;\n            if (!this.context.slidedownManager.slidedown) {\n                return;\n            }\n            const type = (_a = this.context.slidedownManager.slidedown) === null || _a === void 0 ? void 0 : _a.options.type;\n            switch (type) {\n                case DelayedPromptType.Push:\n                case DelayedPromptType.Category:\n                    Log.debug('Setting flag to not show the slidedown to the user again.');\n                    DismissHelper.markPromptDismissedWithType(DismissPrompt.Push);\n                    break;\n                default:\n                    Log.debug('Setting flag to not show the slidedown to the user again.');\n                    DismissHelper.markPromptDismissedWithType(DismissPrompt.NonPush);\n                    break;\n            }\n        });\n    }\n    isPageViewConditionMet(options) {\n        if (!options || typeof options.pageViews === 'undefined') {\n            return false;\n        }\n        if (!options.autoPrompt || !options.enabled) {\n            return false;\n        }\n        const localPageViews = this.context.pageViewManager.getLocalPageViewCount();\n        return localPageViews >= options.pageViews;\n    }\n    getDelayedPromptOptions(promptOptions, type) {\n        var _a, _b, _c, _d;\n        const defaultOptions = {\n            enabled: false,\n            autoPrompt: false,\n            timeDelay: SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.timeDelay,\n            pageViews: SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS.pageViews,\n        };\n        if (!promptOptions || !promptOptions.native || !promptOptions.slidedown) {\n            // default\n            return defaultOptions;\n        }\n        switch (type) {\n            case DelayedPromptType.Native: {\n                const nativePromptOptions = promptOptions.native;\n                return {\n                    enabled: nativePromptOptions === null || nativePromptOptions === void 0 ? void 0 : nativePromptOptions.enabled,\n                    autoPrompt: nativePromptOptions === null || nativePromptOptions === void 0 ? void 0 : nativePromptOptions.autoPrompt,\n                    timeDelay: nativePromptOptions === null || nativePromptOptions === void 0 ? void 0 : nativePromptOptions.timeDelay,\n                    pageViews: nativePromptOptions === null || nativePromptOptions === void 0 ? void 0 : nativePromptOptions.pageViews,\n                };\n            }\n            case DelayedPromptType.Push:\n            case DelayedPromptType.Category:\n            case DelayedPromptType.Email:\n            case DelayedPromptType.Sms:\n            case DelayedPromptType.SmsAndEmail: {\n                const { userConfig } = this.context.appConfig;\n                const options = PromptsHelper.getFirstSlidedownPromptOptionsWithType(((_b = (_a = userConfig.promptOptions) === null || _a === void 0 ? void 0 : _a.slidedown) === null || _b === void 0 ? void 0 : _b.prompts) || [], type);\n                return {\n                    enabled: !!options,\n                    autoPrompt: !!(options === null || options === void 0 ? void 0 : options.autoPrompt),\n                    timeDelay: (_c = options === null || options === void 0 ? void 0 : options.delay) === null || _c === void 0 ? void 0 : _c.timeDelay,\n                    pageViews: (_d = options === null || options === void 0 ? void 0 : options.delay) === null || _d === void 0 ? void 0 : _d.pageViews,\n                };\n            }\n            default:\n                return defaultOptions;\n        }\n    }\n}\n//# sourceMappingURL=PromptsManager.js.map","import { WorkerMessenger } from '../../shared/libraries/WorkerMessenger';\nimport { DynamicResourceLoader } from '../services/DynamicResourceLoader';\nimport { PageViewManager } from '../../shared/managers/PageViewManager';\nimport PermissionManager from '../../shared/managers/PermissionManager';\nimport ContextHelper from '../../shared/helpers/ContextHelper';\nimport { UpdateManager } from '../../shared/managers/UpdateManager';\nimport { SessionManager } from '../../shared/managers/sessionManager/SessionManager';\nimport TagManager from '../managers/tagManager/TagManager';\nimport { SlidedownManager } from '../managers/slidedownManager/SlidedownManager';\nimport { PromptsManager } from '../managers/PromptsManager';\nexport default class Context {\n    constructor(appConfig) {\n        this.appConfig = appConfig;\n        if (typeof OneSignal !== 'undefined' && !!OneSignal.environmentInfo) {\n            this.environmentInfo = OneSignal.environmentInfo;\n        }\n        this.subscriptionManager = ContextHelper.getSubscriptionManager(this);\n        this.serviceWorkerManager = ContextHelper.getServiceWorkerManager(this);\n        this.pageViewManager = new PageViewManager();\n        this.permissionManager = new PermissionManager();\n        this.workerMessenger = new WorkerMessenger(this);\n        this.updateManager = new UpdateManager(this);\n        this.sessionManager = new SessionManager(this);\n        this.tagManager = new TagManager(this);\n        this.slidedownManager = new SlidedownManager(this);\n        this.promptsManager = new PromptsManager(this);\n        this.dynamicResourceLoader = new DynamicResourceLoader();\n    }\n}\n//# sourceMappingURL=Context.js.map","import OneSignalError from '../../shared/errors/OneSignalError';\nexport class ProcessOneSignalPushCalls {\n    static processItem(oneSignalInstance, item) {\n        if (typeof item === 'function')\n            item(oneSignalInstance);\n        else {\n            throw new OneSignalError('Only accepts function type!');\n        }\n    }\n}\n//# sourceMappingURL=ProcessOneSignalPushCalls.js.map","import { ValidatorUtils } from '../page/utils/ValidatorUtils';\nimport { InvalidArgumentError, InvalidArgumentReason, } from '../shared/errors/InvalidArgumentError';\nimport Database from '../shared/services/Database';\nimport { awaitOneSignalInitAndSupported, logMethodCall, } from '../shared/utils/utils';\nimport OneSignal from './OneSignal';\nimport { EventListenerBase } from '../page/userModel/EventListenerBase';\nimport { NotificationPermission } from '../shared/models/NotificationPermission';\nimport EventHelper from '../shared/helpers/EventHelper';\nexport default class NotificationsNamespace extends EventListenerBase {\n    constructor(_permissionNative) {\n        super();\n        this._permissionNative = _permissionNative;\n        this._permission = _permissionNative === NotificationPermission.Granted;\n        OneSignal.emitter.on(OneSignal.EVENTS.NOTIFICATION_PERMISSION_CHANGED_AS_STRING, (permissionNative) => {\n            this._permissionNative = permissionNative;\n            this._permission = permissionNative === NotificationPermission.Granted;\n        });\n    }\n    get permissionNative() {\n        return this._permissionNative;\n    }\n    get permission() {\n        return this._permission;\n    }\n    /**\n     * Pass in the full URL of the default page you want to open when a notification is clicked.\n     * @PublicApi\n     */\n    async setDefaultUrl(url) {\n        logMethodCall('setDefaultUrl', url);\n        if (typeof url === 'undefined') {\n            throw new InvalidArgumentError('url', InvalidArgumentReason.Empty);\n        }\n        if (typeof url !== 'string') {\n            throw new InvalidArgumentError('url', InvalidArgumentReason.WrongType);\n        }\n        if (!ValidatorUtils.isValidUrl(url, { allowNull: true }))\n            throw new InvalidArgumentError('url', InvalidArgumentReason.Malformed);\n        await awaitOneSignalInitAndSupported();\n        logMethodCall('setDefaultNotificationUrl', url);\n        const appState = await Database.getAppState();\n        appState.defaultNotificationUrl = url;\n        await Database.setAppState(appState);\n    }\n    /**\n     * Sets the default title to display on notifications. Will default to the site name provided\n     * on the dashboard if you don't call this.\n     * @remarks Either DB value defaultTitle or pageTitle is used when showing a notification title.\n     * @PublicApi\n     */\n    async setDefaultTitle(title) {\n        logMethodCall('setDefaultTitle', title);\n        if (typeof title === 'undefined') {\n            throw new InvalidArgumentError('title', InvalidArgumentReason.Empty);\n        }\n        if (typeof title !== 'string') {\n            throw new InvalidArgumentError('title', InvalidArgumentReason.WrongType);\n        }\n        await awaitOneSignalInitAndSupported();\n        const appState = await Database.getAppState();\n        appState.defaultNotificationTitle = title;\n        await Database.setAppState(appState);\n    }\n    /**\n     * Returns true if the current browser supports web push.\n     * @PublicApi\n     */\n    isPushSupported() {\n        logMethodCall('isPushNotificationsSupported');\n        /*\n          Push notification support is checked in the initial entry code. If in an unsupported environment, a stubbed empty\n          version of the SDK will be loaded instead. This file will only be loaded if push notifications are supported.\n         */\n        return true;\n    }\n    /*\n    async sendSelfPush(title: string = 'OneSignal Test Message',\n                                message: string = 'This is an example notification.',\n                                url: string = `${new URL(location.href).origin}?_osp=do_not_open`,\n                                icon: URL,\n                                data: Map<String, any>,\n                                buttons: Array<NotificationActionButton>): Promise<void> {\n      await awaitOneSignalInitAndSupported();\n      logMethodCall('sendSelfNotification', title, message, url, icon, data, buttons);\n      const appConfig = await Database.getAppConfig();\n      const subscription = await Database.getSubscription();\n      if (!appConfig.appId)\n        throw new InvalidStateError(InvalidStateReason.MissingAppId);\n      if (!(await OneSignal.context.subscriptionManager.isPushNotificationsEnabled()))\n        throw new NotSubscribedError(NotSubscribedReason.NoDeviceId);\n      if (!ValidatorUtils.isValidUrl(url))\n        throw new InvalidArgumentError('url', InvalidArgumentReason.Malformed);\n      if (!ValidatorUtils.isValidUrl(icon, { allowEmpty: true, requireHttps: true }))\n        throw new InvalidArgumentError('icon', InvalidArgumentReason.Malformed);\n  \n      if (subscription.deviceId) {\n        await OneSignalApi.sendNotification(appConfig.appId, [subscription.deviceId], { en : title }, { en : message },\n                                                 url, icon, data, buttons);\n      }\n    }\n    */\n    /**\n     * Shows a native browser prompt.\n     * Requirement: Must be called from a \"user gesture\" (click / tap event).\n     *  Otherwise some browsers (Firefox & Safari) won't show anything.\n     * Implementation choice note: We don't have any \"error\" handling when the\n     *  requirement is not met, as browsers do not provide an API for this, w/o\n     *  requiring be passed to this function that is.\n     *  See https://github.com/OneSignal/OneSignal-Website-SDK/issues/1098\n     * @PublicApi\n     */\n    async requestPermission() {\n        await awaitOneSignalInitAndSupported();\n        await OneSignal.context.promptsManager.internalShowNativePrompt();\n    }\n    addEventListener(event, listener) {\n        OneSignal.emitter.on(event, listener);\n        if (event === 'click') {\n            EventHelper.fireStoredNotificationClicks();\n        }\n    }\n    removeEventListener(event, listener) {\n        OneSignal.emitter.off(event, listener);\n    }\n}\n//# sourceMappingURL=NotificationsNamespace.js.map","import { OSModel } from '../modelRepo/OSModel';\nimport { ModelName } from '../models/SupportedModels';\nimport Database from '../../shared/services/Database';\nimport { logMethodCall } from '../../shared/utils/utils';\nexport default class ModelCache {\n    constructor() {\n        this._mutexPromise = Promise.resolve();\n        this._mutexLocked = false;\n    }\n    /**\n     * Add an entire model to the cache\n     * @param modelName\n     * @param model\n     */\n    async add(modelName, model) {\n        logMethodCall('ModelCache.add', { modelName, model });\n        const encoded = model.encode();\n        const modelsObject = Object.assign({}, encoded);\n        await Database.put(modelName, modelsObject);\n    }\n    /**\n     * Remove an entire model by model name and id\n     * @param modelName\n     * @param modelId\n     */\n    async remove(modelName, modelId) {\n        logMethodCall('ModelCache.remove', { modelName, modelId });\n        await Database.remove(modelName, modelId);\n    }\n    /**\n     * Update a key-value pair of a model in the cache\n     * @param modelName\n     * @param modelId\n     * @param key\n     * @param value\n     */\n    async update(modelName, modelId, key, value) {\n        if (this._mutexLocked) {\n            await this._mutexPromise;\n        }\n        this._mutexLocked = true;\n        // eslint-disable-next-line no-async-promise-executor\n        this._mutexPromise = new Promise(async (resolve, reject) => {\n            logMethodCall('ModelCache.update', { modelName, modelId, key, value });\n            const model = await this.get(modelName, modelId);\n            if (!model) {\n                reject('ModelCache: Attempting to update a model that does not exist');\n            }\n            if (model) {\n                model[key] = value;\n                await Database.put(modelName, model);\n                this._mutexLocked = false;\n                resolve();\n            }\n            setTimeout(reject.bind(this, 'Database promise never resolved.'), 10000);\n        });\n    }\n    /**\n     * Loads all models from the cache and returns them as an object\n     * @param modelNames\n     */\n    async load(modelNames) {\n        logMethodCall('ModelCache.load', { modelNames });\n        const allCachedOSModels = {};\n        for (let i = 0; i < modelNames.length; i++) {\n            const modelName = modelNames[i];\n            const cachedOSModels = await this.getAndDecodeModelsWithModelName(modelName);\n            if (cachedOSModels) {\n                allCachedOSModels[modelName] = cachedOSModels;\n            }\n        }\n        return allCachedOSModels;\n    }\n    /**\n     * Get a specific model by model name and id\n     * @param modelName\n     * @param modelId\n     */\n    async get(modelName, modelId) {\n        logMethodCall('ModelCache.get', { modelName, modelId });\n        try {\n            await this._mutexPromise;\n            return await Database.get(modelName, modelId);\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    /**\n     * Get all models of a specific model name\n     * @param modelName\n     */\n    async getCachedEncodedModels(modelName) {\n        logMethodCall('ModelCache.getCachedEncodedModels', { modelName });\n        return await Database.getAll(modelName);\n    }\n    /**\n     * Decodes & returns all models of a specific model name\n     * @param modelName\n     */\n    async getAndDecodeModelsWithModelName(modelName) {\n        logMethodCall('ModelCache.getAndDecodeModelsWithModelName', { modelName });\n        const models = await this.getCachedEncodedModels(modelName);\n        if (Object.keys(models).length === 0) {\n            return;\n        }\n        return models.map(OSModel.decode);\n    }\n    async reset() {\n        logMethodCall('ModelCache.reset');\n        const removePromises = [];\n        Object.values(ModelName).forEach(async (modelName) => {\n            removePromises.push(Database.singletonInstance.remove(modelName));\n        });\n        await Promise.all(removePromises);\n    }\n}\n//# sourceMappingURL=ModelCache.js.map","import Subscribable from '../Subscribable';\nimport { CoreChangeType } from '../models/CoreChangeType';\nimport { ModelName } from '../models/SupportedModels';\nimport { logMethodCall } from '../../shared/utils/utils';\nexport class ModelRepo extends Subscribable {\n    constructor(modelCache, modelStores) {\n        super();\n        this.modelCache = modelCache;\n        this.modelStores = modelStores;\n        Object.keys(modelStores).forEach((modelName) => {\n            modelStores[modelName].subscribe(this.processModelChange.bind(this));\n        });\n    }\n    processModelChange(modelStoreChange) {\n        logMethodCall('processModelChange', { modelStoreChange });\n        if (modelStoreChange.type === CoreChangeType.Add) {\n            this.processModelAdded(modelStoreChange);\n        }\n        if (modelStoreChange.type === CoreChangeType.Remove) {\n            this.processModelRemoved(modelStoreChange);\n        }\n        if (modelStoreChange.type === CoreChangeType.Update) {\n            this.processModelUpdated(modelStoreChange);\n        }\n        if (modelStoreChange.type === CoreChangeType.Hydrate) {\n            this.processModelHydrated(modelStoreChange);\n        }\n    }\n    processModelAdded(modelStoreChange) {\n        logMethodCall('processModelAdded', { modelStoreChange });\n        const { payload } = modelStoreChange;\n        // sync to cache\n        this.modelCache.add(payload.modelName, payload);\n        // broadcast deltas\n        this.broadcast({\n            model: payload,\n            changeType: CoreChangeType.Add,\n            applyToRecordId: payload === null || payload === void 0 ? void 0 : payload.applyToRecordId,\n        });\n    }\n    processModelRemoved(modelStoreChange) {\n        logMethodCall('processModelRemoved', { modelStoreChange });\n        const { modelId, payload } = modelStoreChange;\n        // sync to cache\n        this.modelCache.remove(payload.modelName, modelId);\n        // broadcast deltas\n        this.broadcast({\n            model: payload,\n            changeType: CoreChangeType.Remove,\n            applyToRecordId: payload === null || payload === void 0 ? void 0 : payload.applyToRecordId,\n        });\n    }\n    processModelUpdated(modelStoreChange) {\n        var _a;\n        logMethodCall('processModelUpdated', { modelStoreChange });\n        const { modelId, payload } = modelStoreChange;\n        // sync to cache\n        this.modelCache.update(payload.model.modelName, modelId, payload.property, payload.newValue);\n        // broadcast deltas\n        if (payload.oldValue !== payload.newValue) {\n            const delta = {\n                model: payload.model,\n                changeType: CoreChangeType.Update,\n                property: payload.property,\n                oldValue: payload.oldValue,\n                newValue: payload.newValue,\n                applyToRecordId: (_a = payload.model) === null || _a === void 0 ? void 0 : _a.applyToRecordId,\n            };\n            this.broadcast(delta);\n        }\n    }\n    processModelHydrated(modelStoreChange) {\n        logMethodCall('processModelHydrated', { modelStoreChange });\n        const { modelId, payload } = modelStoreChange;\n        // sync to cache\n        this.modelCache.remove(payload.modelName, modelId);\n        this.modelCache.add(payload.modelName, payload);\n    }\n}\n/* S T A T I C */\nModelRepo.supportedModels = Object.values(ModelName);\n//# sourceMappingURL=ModelRepo.js.map","export class ExecutorResultSuccess {\n    constructor(result) {\n        this.result = result;\n        this.success = true;\n        this.retriable = false;\n    }\n}\nexport class ExecutorResultFailRetriable {\n    constructor(result) {\n        this.result = result;\n        this.success = false;\n        this.retriable = true;\n    }\n}\nexport class ExecutorResultFailNotRetriable {\n    constructor(result) {\n        this.result = result;\n        this.success = false;\n        this.retriable = false;\n    }\n}\n//# sourceMappingURL=ExecutorResult.js.map","import Database from '../../shared/services/Database';\nimport OneSignalError from '../../shared/errors/OneSignalError';\nimport { isIdentityObject, isFutureSubscriptionObject, isCompleteSubscriptionObject, } from '../utils/typePredicates';\nimport AliasPair from './AliasPair';\nexport function processSubscriptionOperation(operation) {\n    const subscriptionOSModel = operation.model;\n    const subscription = subscriptionOSModel === null || subscriptionOSModel === void 0 ? void 0 : subscriptionOSModel.data;\n    // fixes typescript errors\n    if (!subscriptionOSModel) {\n        throw new OneSignalError(`processSubscriptionModel: bad subscription OSModel<SubscriptionModel>: ${JSON.stringify(subscriptionOSModel)}`);\n    }\n    // fixes typescript errors\n    if (!isFutureSubscriptionObject(subscription)) {\n        throw new OneSignalError(`processSubscriptionModel: bad subscription object: ${JSON.stringify(subscription)}`);\n    }\n    // fixes typescript errors\n    if (!subscriptionOSModel.onesignalId) {\n        throw new OneSignalError(`processSubscriptionModel: missing onesignalId: ${JSON.stringify(subscriptionOSModel)}`);\n    }\n    let subscriptionId;\n    if (isCompleteSubscriptionObject(subscription)) {\n        subscriptionId = subscription === null || subscription === void 0 ? void 0 : subscription.id;\n    }\n    return {\n        subscription,\n        aliasPair: new AliasPair(AliasPair.ONESIGNAL_ID, subscriptionOSModel.onesignalId),\n        subscriptionId,\n        payload: operation.payload,\n    };\n}\nexport function processIdentityOperation(operation) {\n    var _a;\n    const identity = (_a = operation.model) === null || _a === void 0 ? void 0 : _a.data;\n    // fixes typescript errors\n    if (!isIdentityObject(identity)) {\n        throw new OneSignalError(`processIdentityModel: bad identity object: ${JSON.stringify(identity)}`);\n    }\n    const { onesignal_id: onesignalId } = identity;\n    // delete onesignal_id from identity object, backend expects it to be in the URI only\n    const identityCopy = JSON.parse(JSON.stringify(identity));\n    delete identityCopy['onesignal_id'];\n    // fixes typescript errors\n    if (!onesignalId) {\n        throw new OneSignalError(`processIdentityModel: missing onesignalId: ${JSON.stringify(identity)}`);\n    }\n    return {\n        identity: identityCopy,\n        aliasPair: new AliasPair(AliasPair.ONESIGNAL_ID, onesignalId),\n    };\n}\nexport async function getJWTHeader() {\n    const jwtToken = await Database.getJWTToken();\n    return !!jwtToken ? { Authorization: `Bearer ${jwtToken}` } : undefined;\n}\n//# sourceMappingURL=helpers.js.map","import { logMethodCall } from '../../shared/utils/utils';\nimport OneSignalError from '../../shared/errors/OneSignalError';\nimport { ExecutorResultFailNotRetriable, ExecutorResultFailRetriable, ExecutorResultSuccess, } from '../executors/ExecutorResult';\nimport { isIdentityObject } from '../utils/typePredicates';\nimport { processIdentityOperation } from './helpers';\nimport { RequestService } from './RequestService';\nimport MainHelper from '../../shared/helpers/MainHelper';\n/**\n * This class contains logic for all the Identity model related requests that can be made to the OneSignal API\n * These static functions are what are ultimately invoked by the operation processing logic in the Executor class\n */\nexport default class IdentityRequests {\n    static async addIdentity(operation) {\n        logMethodCall('addIdentity', operation);\n        const appId = await MainHelper.getAppId();\n        const { identity, aliasPair } = processIdentityOperation(operation);\n        const response = await RequestService.addAlias({ appId }, aliasPair, identity);\n        return IdentityRequests._processIdentityResponse(response);\n    }\n    static async removeIdentity(operation) {\n        logMethodCall('removeIdentity', operation);\n        if (!operation.payload) {\n            throw new OneSignalError('removeIdentity: operation.payload is not defined');\n        }\n        if (Object.keys(operation.payload).length !== 1) {\n            throw new OneSignalError('removeIdentity: operation.payload must have exactly one key');\n        }\n        const appId = await MainHelper.getAppId();\n        const labelToRemove = Object.keys(operation.payload)[0];\n        const { aliasPair } = processIdentityOperation(operation);\n        const response = await RequestService.deleteAlias({ appId }, aliasPair, labelToRemove);\n        return IdentityRequests._processIdentityResponse(response);\n    }\n    static _processIdentityResponse(response) {\n        if (!response) {\n            throw new OneSignalError('processIdentityResponse: response is not defined');\n        }\n        const { status, result } = response;\n        const { identity } = result;\n        if (status >= 200 && status < 300) {\n            if (!isIdentityObject(identity)) {\n                throw new OneSignalError(`processIdentityResponse: result ${identity} is not an identity object`);\n            }\n            return new ExecutorResultSuccess(identity);\n        }\n        // shouldn't impact login since doesn't go through core module (special 409 case)\n        if (status >= 400 && status < 500) {\n            return new ExecutorResultFailNotRetriable();\n        }\n        return new ExecutorResultFailRetriable();\n    }\n}\n//# sourceMappingURL=IdentityRequests.js.map","import MainHelper from '../../shared/helpers/MainHelper';\nimport OneSignalError from '../../shared/errors/OneSignalError';\nimport { logMethodCall } from '../../shared/utils/utils';\nimport { ExecutorResultFailNotRetriable, ExecutorResultFailRetriable, ExecutorResultSuccess, } from '../executors/ExecutorResult';\nimport { processSubscriptionOperation } from './helpers';\nimport { RequestService } from './RequestService';\nimport { isCompleteSubscriptionObject } from '../utils/typePredicates';\n/**\n * This class contains logic for all the Subscription model related requests that can be made to the OneSignal API\n * These static functions are what are ultimately invoked by the operation processing logic in the Executor class\n */\nexport default class SubscriptionRequests {\n    static async addSubscription(operation) {\n        logMethodCall('SubscriptionRequests.addSubscription', operation);\n        const appId = await MainHelper.getAppId();\n        const { subscription, aliasPair, subscriptionId } = processSubscriptionOperation(operation);\n        const response = await RequestService.createSubscription({ appId }, aliasPair, { subscription });\n        const status = response.status;\n        if (status >= 200 && status < 300) {\n            OneSignal.coreDirector.getNewRecordsState().add(subscriptionId);\n        }\n        return SubscriptionRequests._processSubscriptionResponse(response);\n    }\n    static async removeSubscription(operation) {\n        logMethodCall('SubscriptionRequests.removeSubscription', operation);\n        const { subscriptionId } = processSubscriptionOperation(operation);\n        if (!subscriptionId) {\n            throw new OneSignalError('removeSubscription: subscriptionId is not defined');\n        }\n        const appId = await MainHelper.getAppId();\n        const response = await RequestService.deleteSubscription({ appId }, subscriptionId);\n        return SubscriptionRequests._processSubscriptionResponse(response);\n    }\n    static async updateSubscription(operation) {\n        logMethodCall('SubscriptionRequests.updateSubscription', operation);\n        const { payload, subscriptionId } = processSubscriptionOperation(operation);\n        if (!subscriptionId) {\n            throw new OneSignalError('updateSubscription: subscriptionId is not defined');\n        }\n        if (!payload) {\n            throw new OneSignalError('updateSubscription: payload is not defined');\n        }\n        const appId = await MainHelper.getAppId();\n        const response = await RequestService.updateSubscription({ appId }, subscriptionId, payload);\n        return SubscriptionRequests._processSubscriptionResponse(response);\n    }\n    static _processSubscriptionResponse(response) {\n        if (!response) {\n            throw new Error('processSubscriptionResponse: response is not defined');\n        }\n        const { status, result } = response;\n        const subscription = result.subscription;\n        if (status >= 200 && status < 300) {\n            if (subscription && !isCompleteSubscriptionObject(subscription)) {\n                throw new OneSignalError(`processSubscriptionResponse: bad subscription object: ${subscription}`);\n            }\n            return new ExecutorResultSuccess(subscription);\n        }\n        if (status >= 400 && status < 500) {\n            return new ExecutorResultFailNotRetriable();\n        }\n        return new ExecutorResultFailRetriable();\n    }\n}\n//# sourceMappingURL=SubscriptionRequests.js.map","import { logMethodCall } from '../../shared/utils/utils';\nimport OneSignalError from '../../shared/errors/OneSignalError';\nimport { ExecutorResultFailNotRetriable, ExecutorResultFailRetriable, ExecutorResultSuccess, } from '../executors/ExecutorResult';\nimport AliasPair from './AliasPair';\nimport { RequestService } from './RequestService';\nimport MainHelper from '../../shared/helpers/MainHelper';\nimport Log from '../../shared/libraries/Log';\nimport { isCompleteSubscriptionObject } from '../utils/typePredicates';\n/**\n * This class contains logic for all the UserProperty model related requests that can be made to the OneSignal API\n * These static functions are what are ultimately invoked by the operation processing logic in the Executor class\n */\nexport default class UserPropertyRequests {\n    static async updateUserProperties(operation) {\n        logMethodCall('UserPropertyRequests.updateUserProperties', operation);\n        const propertiesModel = operation.model;\n        const properties = propertiesModel === null || propertiesModel === void 0 ? void 0 : propertiesModel.data;\n        if (!properties || !propertiesModel) {\n            throw new OneSignalError(`updateUserProperty: bad identity model: ${propertiesModel}`);\n        }\n        if (!propertiesModel.onesignalId) {\n            Log.info('Caching User Property update until subscription is created.');\n            return new ExecutorResultFailNotRetriable();\n        }\n        const aliasPair = new AliasPair(AliasPair.ONESIGNAL_ID, propertiesModel.onesignalId);\n        const appId = await MainHelper.getAppId();\n        const pushSubscription = await OneSignal.coreDirector.getPushSubscriptionModel();\n        let subscriptionId;\n        if (isCompleteSubscriptionObject(pushSubscription === null || pushSubscription === void 0 ? void 0 : pushSubscription.data)) {\n            subscriptionId = pushSubscription === null || pushSubscription === void 0 ? void 0 : pushSubscription.data.id;\n        }\n        const response = await RequestService.updateUser({ appId, subscriptionId }, aliasPair, {\n            properties,\n        });\n        return UserPropertyRequests._processUserPropertyResponse(response);\n    }\n    static _processUserPropertyResponse(response) {\n        if (!response) {\n            throw new Error('processUserPropertyResponse: response is not defined');\n        }\n        const { status, result } = response;\n        if (status >= 200 && status < 300) {\n            return new ExecutorResultSuccess(result === null || result === void 0 ? void 0 : result.properties);\n        }\n        if (status >= 400 && status < 500) {\n            return new ExecutorResultFailNotRetriable();\n        }\n        return new ExecutorResultFailRetriable();\n    }\n}\n//# sourceMappingURL=UserPropertyRequests.js.map","import { ModelName } from '../models/SupportedModels';\nimport IdentityRequests from '../requestService/IdentityRequests';\nimport SubscriptionRequests from '../requestService/SubscriptionRequests';\nimport UserPropertyRequests from '../requestService/UserPropertyRequests';\nconst subscriptionConfig = {\n    add: SubscriptionRequests.addSubscription,\n    remove: SubscriptionRequests.removeSubscription,\n    update: SubscriptionRequests.updateSubscription,\n};\nexport const EXECUTOR_CONFIG_MAP = {\n    [ModelName.Identity]: {\n        modelName: ModelName.Identity,\n        add: IdentityRequests.addIdentity,\n        remove: IdentityRequests.removeIdentity,\n    },\n    [ModelName.Properties]: {\n        modelName: ModelName.Properties,\n        update: UserPropertyRequests.updateUserProperties,\n    },\n    [ModelName.Subscriptions]: Object.assign({ modelName: ModelName.Subscriptions }, subscriptionConfig),\n};\n//# sourceMappingURL=ExecutorConfigMap.js.map","import OneSignalError from '../../shared/errors/OneSignalError';\nimport Database from '../../shared/services/Database';\nimport { isPropertyDelta, isPureObject } from '../utils/typePredicates';\nexport class Operation {\n    constructor(changeType, modelName, deltas) {\n        var _a;\n        this.changeType = changeType;\n        this.modelName = modelName;\n        this.operationId = Math.random().toString(36).substring(2);\n        this.payload = deltas ? this.getPayload(deltas) : undefined;\n        this.model = deltas ? deltas[deltas.length - 1].model : undefined;\n        this.applyToRecordId = (_a = deltas === null || deltas === void 0 ? void 0 : deltas[deltas.length - 1]) === null || _a === void 0 ? void 0 : _a.applyToRecordId;\n        this.timestamp = Date.now();\n        // eslint-disable-next-line no-async-promise-executor\n        this.jwtTokenAvailable = new Promise(async (resolve) => {\n            this.jwtToken = await Database.getJWTToken();\n            resolve();\n        });\n    }\n    getPayload(deltas) {\n        // for update operations, we send the aggregated property-level changes\n        if (isPropertyDelta(deltas[0])) {\n            return this.aggregateDeltas(deltas);\n        }\n        // for add and remove operations, we send the model data itself\n        return deltas[0].model.data;\n    }\n    aggregateDeltas(deltas) {\n        const result = {};\n        deltas.forEach((delta) => {\n            if (isPropertyDelta(delta)) {\n                /**\n                 * If the delta is a property delta, we need to check if the property is an object.\n                 * If the object has been previously set, we need to merge the new value with the old value.\n                 * Example:\n                 * 1. Initial value: { a: { b: 1 } }\n                 * 2. Delta 1: { a: { b: 2 } }\n                 * 3. Delta 2: { a: { c: 3 } }\n                 * 4. Result: { a: { b: 2, c: 3 } }\n                 */\n                // eslint-disable-next-line no-prototype-builtins\n                const hasExistingProperty = result.hasOwnProperty(delta.property);\n                const newValueIsPureObject = isPureObject(delta.newValue);\n                const oldValueIsPureObject = isPureObject(delta.oldValue);\n                const isNewAndOldCompatible = newValueIsPureObject === oldValueIsPureObject ||\n                    delta.oldValue === undefined;\n                if (!isNewAndOldCompatible) {\n                    throw new Error('Cannot merge incompatible values');\n                }\n                const shouldMergeExistingAndNew = hasExistingProperty && newValueIsPureObject;\n                const mergedObject = Object.assign(Object.assign({}, result[delta.property]), delta.newValue);\n                result[delta.property] = shouldMergeExistingAndNew\n                    ? mergedObject\n                    : delta.newValue;\n            }\n        });\n        return result;\n    }\n    static getInstanceWithModelReference(rawOperation) {\n        var _a;\n        const { operationId, payload, modelName, changeType, timestamp, model } = rawOperation;\n        if (!model) {\n            throw new OneSignalError('Operation.fromJSON: model is undefined');\n        }\n        const osModel = (_a = OneSignal.coreDirector) === null || _a === void 0 ? void 0 : _a.getModelByTypeAndId(modelName, model.modelId);\n        if (!!osModel) {\n            const operation = new Operation(changeType, modelName);\n            operation.model = osModel;\n            operation.operationId = operationId;\n            operation.timestamp = timestamp;\n            operation.payload = payload;\n            operation.jwtToken = rawOperation.jwtToken;\n            operation.jwtTokenAvailable = Promise.resolve();\n            return operation;\n        }\n        else {\n            throw new Error(`Could not find model with id ${model.modelId} of type ${modelName}. Maybe user logged out?`);\n        }\n    }\n}\n//# sourceMappingURL=Operation.js.map","import Log from '../../shared/libraries/Log';\nimport { logMethodCall } from '../../shared/utils/utils';\nimport { Operation } from '../operationRepo/Operation';\nexport default class OperationCache {\n    static enqueue(operation) {\n        logMethodCall('OperationCache.enqueue', { operation });\n        const fromCache = localStorage.getItem('operationCache');\n        const operations = fromCache\n            ? JSON.parse(fromCache)\n            : {};\n        operations[operation.operationId] = operation;\n        localStorage.setItem('operationCache', JSON.stringify(operations));\n    }\n    static getOperationsWithModelName(modelName) {\n        const fromCache = localStorage.getItem('operationCache');\n        const rawOperations = fromCache\n            ? Object.values(JSON.parse(fromCache))\n            : [];\n        const operations = [];\n        for (let i = 0; i < rawOperations.length; i++) {\n            const rawOperation = rawOperations[i];\n            try {\n                // return an operation object with correct references (in particular reference to the model)\n                const operation = Operation.getInstanceWithModelReference(rawOperation);\n                if (operation) {\n                    operations.push(operation);\n                }\n            }\n            catch (e) {\n                Log.warn(`Could not parse operation ${rawOperation.operationId} from cache`, e);\n                this.delete(rawOperation.operationId);\n            }\n        }\n        const sorted = operations.sort((a, b) => a.timestamp - b.timestamp);\n        return sorted.filter((operation) => operation.modelName === modelName);\n    }\n    static delete(id) {\n        logMethodCall('OperationCache.delete', { id });\n        const fromCache = localStorage.getItem('operationCache');\n        const operations = fromCache\n            ? JSON.parse(fromCache)\n            : {};\n        delete operations[id];\n        localStorage.setItem('operationCache', JSON.stringify(operations));\n    }\n    static flushOperations() {\n        logMethodCall('OperationCache.flushOperations');\n        localStorage.removeItem('operationCache');\n    }\n}\n//# sourceMappingURL=OperationCache.js.map","import OperationCache from '../caching/OperationCache';\nimport { CoreChangeType } from '../models/CoreChangeType';\nimport { Operation } from '../operationRepo/Operation';\nimport { logMethodCall } from '../../shared/utils/utils';\nimport Log from '../../shared/libraries/Log';\nimport Database from '../../shared/services/Database';\nimport LocalStorage from '../../shared/utils/LocalStorage';\nconst RETRY_AFTER = 5000;\nexport default class ExecutorBase {\n    constructor(executorConfig, newRecordsState) {\n        this._deltaQueue = [];\n        this._operationQueue = [];\n        this.onlineStatus = true;\n        setInterval(() => {\n            Log.debug('OneSignal: checking for operations to process from cache');\n            const cachedOperations = this.getOperationsFromCache();\n            this._operationQueue = [...cachedOperations, ...this._operationQueue];\n            if (this._operationQueue.length > 0) {\n                this._processOperationQueue.call(this);\n            }\n        }, ExecutorBase.OPERATIONS_BATCH_PROCESSING_TIME * 1000);\n        window.addEventListener('online', this._onNetworkChange.bind(this, true));\n        window.addEventListener('offline', this._onNetworkChange.bind(this, false));\n        this._executeAdd = executorConfig.add;\n        this._executeUpdate = executorConfig.update;\n        this._executeRemove = executorConfig.remove;\n        this._newRecordsState = newRecordsState;\n    }\n    enqueueDelta(delta) {\n        logMethodCall('ExecutorBase.enqueueDelta', { delta });\n        /**\n         * deep copy (snapshot)\n         * if we add alias and then login to a user, we want to ensure that the external id of the\n         * login call doesn't get included in the add alias call so this helps keep the changes separate\n         */\n        const deltaCopy = JSON.parse(JSON.stringify(delta));\n        this._deltaQueue.push(deltaCopy);\n    }\n    get deltaQueue() {\n        return this._deltaQueue;\n    }\n    get operationQueue() {\n        return this._operationQueue;\n    }\n    _enqueueOperation(operation) {\n        logMethodCall('ExecutorBase.enqueueOperation', { operation });\n        this._operationQueue.push(operation);\n    }\n    _flushDeltas() {\n        this._deltaQueue = [];\n    }\n    _flushOperations() {\n        logMethodCall('ExecutorBase._flushOperations');\n        this._operationQueue = [];\n    }\n    _getChangeType(oldValue, newValue) {\n        logMethodCall('ExecutorBase._getChangeType', { oldValue, newValue });\n        const wasPropertyAdded = !oldValue && !!newValue;\n        const wasPropertyRemoved = !!oldValue && !newValue;\n        const wasPropertyUpdated = oldValue !== newValue && !!newValue && !!oldValue;\n        let finalChangeType;\n        if (wasPropertyAdded) {\n            finalChangeType = CoreChangeType.Add;\n        }\n        else if (wasPropertyRemoved) {\n            finalChangeType = CoreChangeType.Remove;\n        }\n        else if (wasPropertyUpdated) {\n            finalChangeType = CoreChangeType.Update;\n        }\n        else {\n            throw new Error('Unsupported change type');\n        }\n        return finalChangeType;\n    }\n    async _processOperationQueue() {\n        const consentRequired = OneSignal.config.userConfig.requiresUserPrivacyConsent ||\n            LocalStorage.getConsentRequired();\n        const consentGiven = await Database.getConsentGiven();\n        if (consentRequired && !consentGiven) {\n            return;\n        }\n        while (this._operationQueue.length > 0) {\n            const operation = this._operationQueue.shift();\n            if (operation) {\n                OperationCache.enqueue(operation);\n                if (this._canExecute(operation)) {\n                    this._processOperation(operation, ExecutorBase.RETRY_COUNT).catch((err) => {\n                        Log.error(err);\n                    });\n                }\n            }\n        }\n    }\n    async _processOperation(operation, retries) {\n        var _a, _b, _c, _d, _e;\n        logMethodCall('ExecutorBase._processOperation', { operation, retries });\n        // TO DO: fix optional model object. should always be defined on operation\n        await ((_a = operation.model) === null || _a === void 0 ? void 0 : _a.awaitOneSignalIdAvailable);\n        await operation.jwtTokenAvailable;\n        let res = {\n            success: false,\n            retriable: true,\n        };\n        if ((operation === null || operation === void 0 ? void 0 : operation.changeType) === CoreChangeType.Add) {\n            res = await ((_b = this._executeAdd) === null || _b === void 0 ? void 0 : _b.call(this, operation));\n        }\n        else if ((operation === null || operation === void 0 ? void 0 : operation.changeType) === CoreChangeType.Remove) {\n            res = await ((_c = this._executeRemove) === null || _c === void 0 ? void 0 : _c.call(this, operation));\n        }\n        else if ((operation === null || operation === void 0 ? void 0 : operation.changeType) === CoreChangeType.Update) {\n            res = await ((_d = this._executeUpdate) === null || _d === void 0 ? void 0 : _d.call(this, operation));\n        }\n        // HYDRATE\n        if (res.success) {\n            if (res.result) {\n                // since we took a snapshot of the operation, we get a new instance with the correct model reference\n                const operationInstance = await Operation.getInstanceWithModelReference(operation);\n                (_e = operationInstance === null || operationInstance === void 0 ? void 0 : operationInstance.model) === null || _e === void 0 ? void 0 : _e.hydrate(res.result);\n            }\n            OperationCache.delete(operation === null || operation === void 0 ? void 0 : operation.operationId);\n        }\n        else {\n            if (res.retriable && retries > 0) {\n                setTimeout(() => {\n                    this._processOperation(operation, retries - 1).catch((err) => {\n                        Log.error(err);\n                    });\n                }, RETRY_AFTER);\n            }\n            else {\n                OperationCache.delete(operation === null || operation === void 0 ? void 0 : operation.operationId);\n            }\n        }\n    }\n    _onNetworkChange(online) {\n        logMethodCall('ExecutorBase._onNetworkChange', { online });\n        this.onlineStatus = online;\n        if (online) {\n            this._processOperationQueue.call(this);\n        }\n    }\n    _canExecute(operation) {\n        if (!this.onlineStatus) {\n            return false;\n        }\n        if (operation.applyToRecordId) {\n            if (!this._newRecordsState.canAccess(operation.applyToRecordId)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nExecutorBase.OPERATIONS_BATCH_PROCESSING_TIME = 5;\nExecutorBase.RETRY_COUNT = 5;\n//# sourceMappingURL=ExecutorBase.js.map","import OperationCache from '../caching/OperationCache';\nimport { CoreChangeType } from '../models/CoreChangeType';\nimport { ModelName } from '../models/SupportedModels';\nimport { Operation } from '../operationRepo/Operation';\nimport { isPropertyDelta } from '../utils/typePredicates';\nimport ExecutorBase from './ExecutorBase';\nexport class IdentityExecutor extends ExecutorBase {\n    constructor(executorConfig, newRecordsState) {\n        super(executorConfig, newRecordsState);\n    }\n    processDeltaQueue() {\n        if (this._deltaQueue.length === 0) {\n            return;\n        }\n        const addAndUpdatedDeltas = [];\n        const removeDeltas = [];\n        this._deltaQueue.forEach((delta) => {\n            if (!isPropertyDelta(delta)) {\n                return;\n            }\n            const deltaChangeType = this._getChangeType(delta.oldValue, delta.newValue);\n            if (deltaChangeType === CoreChangeType.Add ||\n                deltaChangeType === CoreChangeType.Update) {\n                addAndUpdatedDeltas.push(delta);\n            }\n            else if (deltaChangeType === CoreChangeType.Remove) {\n                removeDeltas.push(delta);\n            }\n        });\n        if (addAndUpdatedDeltas.length > 0) {\n            this._enqueueOperation(new Operation(CoreChangeType.Add, ModelName.Identity, addAndUpdatedDeltas));\n        }\n        if (removeDeltas.length > 0) {\n            this._enqueueOperation(new Operation(CoreChangeType.Remove, ModelName.Identity, removeDeltas));\n        }\n        this._flushDeltas();\n    }\n    getOperationsFromCache() {\n        return OperationCache.getOperationsWithModelName(ModelName.Identity);\n    }\n}\n//# sourceMappingURL=IdentityExecutor.js.map","import ExecutorBase from './ExecutorBase';\nimport { Operation } from '../operationRepo/Operation';\nimport { CoreChangeType } from '../models/CoreChangeType';\nimport { ModelName } from '../models/SupportedModels';\nimport OperationCache from '../caching/OperationCache';\nexport class PropertiesExecutor extends ExecutorBase {\n    constructor(executorConfig, newRecordsState) {\n        super(executorConfig, newRecordsState);\n    }\n    processDeltaQueue() {\n        if (this._deltaQueue.length === 0) {\n            return;\n        }\n        this._enqueueOperation(new Operation(CoreChangeType.Update, ModelName.Properties, this._deltaQueue));\n        this._flushDeltas();\n    }\n    getOperationsFromCache() {\n        return OperationCache.getOperationsWithModelName(ModelName.Properties);\n    }\n}\n//# sourceMappingURL=PropertiesExecutor.js.map","import OperationCache from '../caching/OperationCache';\nimport { CoreChangeType } from '../models/CoreChangeType';\nimport { ModelName } from '../models/SupportedModels';\nimport { Operation } from '../operationRepo/Operation';\nimport ExecutorBase from './ExecutorBase';\nexport class SubscriptionExecutor extends ExecutorBase {\n    constructor(executorConfig, newRecordsState) {\n        super(executorConfig, newRecordsState);\n    }\n    processDeltaQueue() {\n        const modelSpecificDeltasArrays = this.separateDeltasByModelId();\n        modelSpecificDeltasArrays.forEach((deltasArray) => {\n            const changeSpecificDeltas = this.separateDeltasByChangeType(deltasArray);\n            Object.keys(changeSpecificDeltas).forEach((changeType) => {\n                const deltas = changeSpecificDeltas[changeType];\n                if (deltas.length > 0) {\n                    this._enqueueOperation(new Operation(changeType, deltas[0].model.modelName, deltas));\n                }\n            });\n        });\n        this._flushDeltas();\n    }\n    getOperationsFromCache() {\n        return OperationCache.getOperationsWithModelName(ModelName.Subscriptions);\n    }\n    separateDeltasByChangeType(deltas) {\n        const deltasByChangeType = {\n            [CoreChangeType.Add]: [],\n            [CoreChangeType.Remove]: [],\n            [CoreChangeType.Update]: [],\n        };\n        deltas.forEach((delta) => {\n            var _a;\n            if (!deltasByChangeType[delta.changeType]) {\n                deltasByChangeType[delta.changeType] = [];\n            }\n            (_a = deltasByChangeType[delta.changeType]) === null || _a === void 0 ? void 0 : _a.push(delta);\n        });\n        return deltasByChangeType;\n    }\n    separateDeltasByModelId() {\n        const deltasByModelId = {};\n        this._deltaQueue.forEach((delta) => {\n            const { modelId } = delta.model;\n            if (!deltasByModelId[modelId]) {\n                deltasByModelId[modelId] = [];\n            }\n            deltasByModelId[modelId].push(delta);\n        });\n        return Object.values(deltasByModelId);\n    }\n}\n//# sourceMappingURL=SubscriptionExecutor.js.map","import { ModelName } from '../models/SupportedModels';\nimport { IdentityExecutor } from './IdentityExecutor';\nimport { PropertiesExecutor } from './PropertiesExecutor';\nimport { SubscriptionExecutor } from './SubscriptionExecutor';\nexport class ExecutorFactory {\n    static build(executorConfig, newRecordsState) {\n        switch (executorConfig.modelName) {\n            case ModelName.Identity:\n                return new IdentityExecutor(executorConfig, newRecordsState);\n            case ModelName.Properties:\n                return new PropertiesExecutor(executorConfig, newRecordsState);\n            case ModelName.Subscriptions:\n                return new SubscriptionExecutor(executorConfig, newRecordsState);\n        }\n    }\n}\n//# sourceMappingURL=ExecutorFactory.js.map","import { ModelName } from '../models/SupportedModels';\nimport { EXECUTOR_CONFIG_MAP } from './ExecutorConfigMap';\nimport { ExecutorFactory } from './ExecutorFactory';\nexport class ExecutorStore {\n    constructor(newRecordsState) {\n        this.store = {};\n        Object.values(ModelName).forEach((modelName) => {\n            const config = EXECUTOR_CONFIG_MAP[modelName];\n            this.store[modelName] = ExecutorFactory.build(config, newRecordsState);\n        });\n    }\n    // call processDeltaQueue on all executors immediately\n    forceDeltaQueueProcessingOnAllExecutors() {\n        Object.values(this.store).forEach((executor) => {\n            executor.processDeltaQueue();\n        });\n    }\n}\n//# sourceMappingURL=ExecutorStore.js.map","import { ExecutorStore } from '../executors/ExecutorStore';\nimport { logMethodCall } from '../../shared/utils/utils';\nexport class OperationRepo {\n    constructor(modelRepo, newRecordsState) {\n        this.modelRepo = modelRepo;\n        this._deltaQueue = [];\n        this.newRecordsState = newRecordsState;\n        this.executorStore = new ExecutorStore(this.newRecordsState);\n        this._unsubscribeFromModelRepo = this.modelRepo.subscribe((delta) => {\n            this._processDelta(delta);\n        });\n        setInterval(() => {\n            this._processDeltaQueue();\n        }, OperationRepo.DELTAS_BATCH_PROCESSING_TIME * 1000);\n    }\n    setModelRepoAndResubscribe(modelRepo) {\n        this.modelRepo = modelRepo;\n        this._unsubscribeFromModelRepo();\n        this._unsubscribeFromModelRepo = this.modelRepo.subscribe((delta) => {\n            this._processDelta(delta);\n        });\n    }\n    // call processDeltaQueue on all executors immediately\n    forceDeltaQueueProcessingOnAllExecutors() {\n        this.executorStore.forceDeltaQueueProcessingOnAllExecutors();\n    }\n    _flushDeltas() {\n        this._deltaQueue = [];\n    }\n    _processDelta(delta) {\n        logMethodCall('OperationRepo._processDelta', { delta });\n        const deltaCopy = JSON.parse(JSON.stringify(delta));\n        this._deltaQueue.push(deltaCopy);\n    }\n    _processDeltaQueue() {\n        logMethodCall('OperationRepo._processDeltaQueue');\n        this._deltaQueue.forEach((delta) => {\n            var _a;\n            const { modelName } = delta.model;\n            (_a = this.executorStore.store[modelName]) === null || _a === void 0 ? void 0 : _a.enqueueDelta(delta);\n        });\n        // for each executor: processDeltaQueue and flush\n        this.forceDeltaQueueProcessingOnAllExecutors();\n        this._flushDeltas();\n    }\n}\nOperationRepo.DELTAS_BATCH_PROCESSING_TIME = 1;\n//# sourceMappingURL=OperationRepo.js.map","import Subscribable from '../Subscribable';\nimport { ModelStoreAdded, ModelStoreRemoved, ModelStoreUpdated, ModelStoreHydrated, } from '../models/ModelStoreChange';\nimport { CoreChangeType } from '../models/CoreChangeType';\nimport { isOSModel, isOSModelUpdatedArgs } from '../utils/typePredicates';\nexport class OSModelStore extends Subscribable {\n    constructor(modelArray = []) {\n        super();\n        this.models = {};\n        this.unsubscribeCallbacks = {};\n        modelArray.forEach((model) => {\n            this.models[model.modelId] = model;\n            this.subscribeUpdateListener(model);\n        });\n    }\n    add(model, propagate) {\n        this.subscribeUpdateListener(model);\n        this.models[model.modelId] = model;\n        if (propagate) {\n            this.broadcast(new ModelStoreAdded(model.modelId, model));\n        }\n        else {\n            this.broadcast(new ModelStoreHydrated(model.modelId, model));\n        }\n    }\n    remove(modelId) {\n        const modelCopy = JSON.stringify(this.models[modelId]);\n        delete this.models[modelId];\n        this.unsubscribeCallbacks[modelId]();\n        this.broadcast(new ModelStoreRemoved(modelId, JSON.parse(modelCopy)));\n    }\n    subscribeUpdateListener(model) {\n        this.unsubscribeCallbacks[model.modelId] = model.subscribe((change) => {\n            const { payload } = change;\n            if (change.type === CoreChangeType.Update &&\n                isOSModelUpdatedArgs(payload)) {\n                this.broadcast(new ModelStoreUpdated(model.modelId, payload));\n            }\n            else if (change.type === CoreChangeType.Hydrate &&\n                isOSModel(payload)) {\n                this.broadcast(new ModelStoreHydrated(model.modelId, payload));\n            }\n        });\n    }\n}\n//# sourceMappingURL=OSModelStore.js.map","import { ModelName } from '../models/SupportedModels';\nimport { OSModelStore } from './OSModelStore';\nexport class OSModelStoreFactory {\n    static build(cachedModels) {\n        const modelStores = {};\n        Object.values(ModelName).forEach((modelName) => {\n            const models = !!cachedModels ? cachedModels[modelName] : undefined;\n            const modelStore = new OSModelStore(models);\n            modelStores[modelName] = modelStore;\n        });\n        return modelStores;\n    }\n}\n//# sourceMappingURL=OSModelStoreFactory.js.map","/**\n * Purpose: Keeps track of IDs that were just created on the backend.\n * This list gets used to delay network calls to ensure upcoming\n * requests are ready to be accepted by the backend.\n */\nexport class NewRecordsState {\n    constructor(time = 3000) {\n        // Key = a string id\n        // Value = A Timestamp in ms of when the id was created\n        this.records = new Map();\n        this.OP_REPO_POST_CREATE_DELAY = time;\n    }\n    add(key, overwrite = false) {\n        if (overwrite || this.records.get(key)) {\n            this.records.set(key, Date.now());\n        }\n    }\n    canAccess(key) {\n        const timeLastMovedOrCreated = this.records.get(key);\n        return timeLastMovedOrCreated\n            ? Date.now() - timeLastMovedOrCreated > this.OP_REPO_POST_CREATE_DELAY\n            : true;\n    }\n}\n//# sourceMappingURL=NewRecordsState.js.map","import ModelCache from './caching/ModelCache';\nimport { ModelRepo } from './modelRepo/ModelRepo';\nimport { OperationRepo } from './operationRepo/OperationRepo';\nimport { OSModelStoreFactory } from './modelRepo/OSModelStoreFactory';\nimport Log from '../shared/libraries/Log';\nimport { logMethodCall } from '../shared/utils/utils';\nimport { NewRecordsState } from '../shared/models/NewRecordsState';\nexport default class CoreModule {\n    constructor() {\n        this.initResolver = () => null;\n        this.initPromise = new Promise((resolve) => {\n            this.initResolver = resolve;\n        });\n        this.modelCache = new ModelCache();\n        this.modelCache\n            .load(ModelRepo.supportedModels)\n            .then((allCachedOSModels) => {\n            const modelStores = OSModelStoreFactory.build(allCachedOSModels);\n            this.modelRepo = new ModelRepo(this.modelCache, modelStores);\n            this.newRecordsState = new NewRecordsState();\n            this.operationRepo = new OperationRepo(this.modelRepo, this.newRecordsState);\n            this.initResolver();\n        })\n            .catch((e) => {\n            Log.error(e);\n        });\n    }\n    async init() {\n        logMethodCall('CoreModule.init');\n        await this.initPromise;\n    }\n    async resetModelRepoAndCache() {\n        var _a;\n        logMethodCall('CoreModule.resetModelRepo');\n        await this.modelCache.reset();\n        const modelStores = OSModelStoreFactory.build();\n        this.modelRepo = new ModelRepo(this.modelCache, modelStores);\n        (_a = this.operationRepo) === null || _a === void 0 ? void 0 : _a.setModelRepoAndResubscribe(this.modelRepo);\n    }\n    // call processDeltaQueue on all executors immediately\n    forceDeltaQueueProcessingOnAllExecutors() {\n        var _a;\n        (_a = this.operationRepo) === null || _a === void 0 ? void 0 : _a.forceDeltaQueueProcessingOnAllExecutors();\n    }\n}\n//# sourceMappingURL=CoreModule.js.map","import { logMethodCall } from '../shared/utils/utils';\nimport Log from '../shared/libraries/Log';\nimport { OSModel } from './modelRepo/OSModel';\nimport { SubscriptionChannel, SubscriptionType, } from './models/SubscriptionModels';\nimport { ModelName } from './models/SupportedModels';\nimport OneSignalError from '../shared/errors/OneSignalError';\nimport MainHelper from '../shared/helpers/MainHelper';\nimport FuturePushSubscriptionRecord from '../page/userModel/FuturePushSubscriptionRecord';\nimport User from '../onesignal/User';\nimport OneSignal from '../onesignal/OneSignal';\nimport Database from '../shared/services/Database';\nimport EventHelper from '../shared/helpers/EventHelper';\nimport SubscriptionHelper from '../../src/shared/helpers/SubscriptionHelper';\n/* Contains OneSignal User-Model-specific logic*/\nexport class CoreModuleDirector {\n    constructor(core) {\n        this.core = core;\n    }\n    generatePushSubscriptionModel(rawPushSubscription) {\n        logMethodCall('CoreModuleDirector.generatePushSubscriptionModel', {\n            rawPushSubscription,\n        });\n        // new subscription\n        const pushModel = new OSModel(ModelName.Subscriptions, new FuturePushSubscriptionRecord(rawPushSubscription).serialize());\n        const user = User.createOrGetInstance();\n        if (user.hasOneSignalId) {\n            pushModel.setOneSignalId(user.onesignalId);\n        }\n        const identity = this.getIdentityModel();\n        const externalId = identity === null || identity === void 0 ? void 0 : identity.data.external_id;\n        if (externalId) {\n            pushModel.setExternalId(externalId);\n        }\n        // don't propagate since we will be including the subscription in the user create call\n        OneSignal.coreDirector.add(ModelName.Subscriptions, pushModel, false);\n    }\n    async resetModelRepoAndCache() {\n        await this.core.resetModelRepoAndCache();\n    }\n    hydrateUser(user, externalId) {\n        logMethodCall('CoreModuleDirector.hydrateUser', { user, externalId });\n        try {\n            const identity = this.getIdentityModel();\n            const properties = this.getPropertiesModel();\n            const { onesignal_id: onesignalId } = user.identity;\n            if (!onesignalId) {\n                throw new OneSignalError('OneSignal ID is missing from user data');\n            }\n            // set OneSignal ID *before* hydrating models so that the onesignalId is also updated in model cache\n            identity === null || identity === void 0 ? void 0 : identity.setOneSignalId(onesignalId);\n            properties === null || properties === void 0 ? void 0 : properties.setOneSignalId(onesignalId);\n            if (externalId) {\n                identity === null || identity === void 0 ? void 0 : identity.setExternalId(externalId);\n                properties === null || properties === void 0 ? void 0 : properties.setExternalId(externalId);\n                user.identity.external_id = externalId;\n            }\n            // identity and properties models are always single, so we hydrate immediately (i.e. replace existing data)\n            identity === null || identity === void 0 ? void 0 : identity.hydrate(user.identity);\n            properties === null || properties === void 0 ? void 0 : properties.hydrate(user.properties);\n            // subscriptions are duplicable, so we hydrate them separately\n            // when hydrating, we should have the full subscription object (i.e. include ID from server)\n            this._hydrateSubscriptions(user.subscriptions, onesignalId, externalId);\n            EventHelper.checkAndTriggerUserChanged();\n        }\n        catch (e) {\n            Log.error(`Error hydrating user: ${e}`);\n        }\n    }\n    _hydrateSubscriptions(subscriptions, onesignalId, externalId) {\n        logMethodCall('CoreModuleDirector._hydrateSubscriptions', {\n            subscriptions,\n            onesignalId,\n            externalId,\n        });\n        if (!subscriptions) {\n            return;\n        }\n        const modelStores = this.getModelStores();\n        subscriptions.forEach(async (subscription) => {\n            /* We use the token to identify the model because the subscription ID is not set until the server responds.\n             * So when we initially hydrate after init, we may already have a push model with a token, but no ID.\n             * We don't want to create a new model in this case, so we use the token to identify the model.\n             */\n            const existingSubscription = !!subscription.token\n                ? this.getSubscriptionOfTypeWithToken(SubscriptionHelper.toSubscriptionChannel(subscription.type), subscription.token)\n                : undefined;\n            if (existingSubscription) {\n                // set onesignalId on existing subscription *before* hydrating so that the onesignalId is updated in model cache\n                existingSubscription.setOneSignalId(onesignalId);\n                if (externalId) {\n                    existingSubscription === null || existingSubscription === void 0 ? void 0 : existingSubscription.setExternalId(externalId);\n                }\n                existingSubscription.hydrate(subscription);\n            }\n            else {\n                const model = new OSModel(ModelName.Subscriptions, subscription);\n                model.setOneSignalId(onesignalId);\n                if (externalId) {\n                    model === null || model === void 0 ? void 0 : model.setExternalId(externalId);\n                }\n                modelStores[ModelName.Subscriptions].add(model, false); // don't propagate to server\n            }\n        });\n    }\n    // call processDeltaQueue on all executors immediately\n    forceDeltaQueueProcessingOnAllExecutors() {\n        logMethodCall('CoreModuleDirector.forceDeltaQueueProcessingOnAllExecutors');\n        this.core.forceDeltaQueueProcessingOnAllExecutors();\n    }\n    /* O P E R A T I O N S */\n    add(modelName, model, propagate = true) {\n        logMethodCall('CoreModuleDirector.add', { modelName, model });\n        const modelStores = this.getModelStores();\n        modelStores[modelName].add(model, propagate);\n    }\n    remove(modelName, modelId) {\n        logMethodCall('CoreModuleDirector.remove', { modelName, modelId });\n        const modelStores = this.getModelStores();\n        modelStores[modelName].remove(modelId);\n    }\n    /* G E T T E R S */\n    getNewRecordsState() {\n        return this.core.newRecordsState;\n    }\n    getModelByTypeAndId(modelName, modelId) {\n        logMethodCall('CoreModuleDirector.getModelByTypeAndId', {\n            modelName,\n            modelId,\n        });\n        const modelStores = this.getModelStores();\n        return modelStores[modelName].models[modelId];\n    }\n    getEmailSubscriptionModels() {\n        logMethodCall('CoreModuleDirector.getEmailSubscriptionModels');\n        const modelStores = this.getModelStores();\n        const subscriptionModels = modelStores.subscriptions.models;\n        const emailSubscriptions = Object.fromEntries(Object.entries(subscriptionModels).filter(([, model]) => { var _a; return ((_a = model.data) === null || _a === void 0 ? void 0 : _a.type) === SubscriptionType.Email; }));\n        return emailSubscriptions;\n    }\n    async hasEmail() {\n        const emails = this.getEmailSubscriptionModels();\n        return Object.keys(emails).length > 0;\n    }\n    getSmsSubscriptionModels() {\n        logMethodCall('CoreModuleDirector.getSmsSubscriptionModels');\n        const modelStores = this.getModelStores();\n        const subscriptionModels = modelStores.subscriptions.models;\n        const smsSubscriptions = Object.fromEntries(Object.entries(subscriptionModels).filter(([, model]) => { var _a; return ((_a = model.data) === null || _a === void 0 ? void 0 : _a.type) === SubscriptionType.SMS; }));\n        return smsSubscriptions;\n    }\n    async hasSms() {\n        const smsModels = this.getSmsSubscriptionModels();\n        return Object.keys(smsModels).length > 0;\n    }\n    /**\n     * Returns all push subscription models, including push subscriptions from other browsers.\n     */\n    getAllPushSubscriptionModels() {\n        logMethodCall('CoreModuleDirector.getAllPushSubscriptionModels');\n        const modelStores = this.getModelStores();\n        const subscriptionModels = modelStores.subscriptions.models;\n        const pushSubscriptions = Object.fromEntries(Object.entries(subscriptionModels).filter(([, model]) => { var _a; return SubscriptionHelper.isPushSubscriptionType((_a = model.data) === null || _a === void 0 ? void 0 : _a.type); }));\n        return pushSubscriptions;\n    }\n    async getPushSubscriptionModelByCurrentToken() {\n        logMethodCall('CoreModuleDirector.getPushSubscriptionModelByCurrentToken');\n        const pushToken = await MainHelper.getCurrentPushToken();\n        if (pushToken) {\n            return this.getSubscriptionOfTypeWithToken(SubscriptionChannel.Push, pushToken);\n        }\n        return undefined;\n    }\n    // Browser may return a different PushToken value, use the last-known value as a fallback.\n    //   - This happens if you disable notification permissions then re-enable them.\n    async getPushSubscriptionModelByLastKnownToken() {\n        logMethodCall('CoreModuleDirector.getPushSubscriptionModelByLastKnownToken');\n        const { lastKnownPushToken } = await Database.getAppState();\n        if (lastKnownPushToken) {\n            return this.getSubscriptionOfTypeWithToken(SubscriptionChannel.Push, lastKnownPushToken);\n        }\n        return undefined;\n    }\n    /**\n     * Gets the current push subscription model for the current browser.\n     * @returns The push subscription model for the current browser, or undefined if no push subscription exists.\n     */\n    async getPushSubscriptionModel() {\n        logMethodCall('CoreModuleDirector.getPushSubscriptionModel');\n        return ((await this.getPushSubscriptionModelByCurrentToken()) ||\n            (await this.getPushSubscriptionModelByLastKnownToken()));\n    }\n    getIdentityModel() {\n        logMethodCall('CoreModuleDirector.getIdentityModel');\n        const modelStores = this.getModelStores();\n        const modelKeys = Object.keys(modelStores.identity.models);\n        return modelStores.identity.models[modelKeys[0]];\n    }\n    getPropertiesModel() {\n        logMethodCall('CoreModuleDirector.getPropertiesModel');\n        const modelStores = this.getModelStores();\n        const modelKeys = Object.keys(modelStores.properties.models);\n        return modelStores.properties.models[modelKeys[0]];\n    }\n    async getAllSubscriptionsModels() {\n        logMethodCall('CoreModuleDirector.getAllSubscriptionsModels');\n        const emailSubscriptions = this.getEmailSubscriptionModels();\n        const smsSubscriptions = this.getSmsSubscriptionModels();\n        const pushSubscription = await this.getPushSubscriptionModel();\n        const subscriptions = Object.values(emailSubscriptions)\n            .concat(Object.values(smsSubscriptions))\n            .concat(pushSubscription ? [pushSubscription] : []);\n        return subscriptions;\n    }\n    getSubscriptionOfTypeWithToken(type, token) {\n        logMethodCall('CoreModuleDirector.getSubscriptionOfTypeWithToken', {\n            type,\n            token,\n        });\n        let subscriptions;\n        switch (type) {\n            case SubscriptionChannel.Email:\n                subscriptions = this.getEmailSubscriptionModels();\n                break;\n            case SubscriptionChannel.SMS:\n                subscriptions = this.getSmsSubscriptionModels();\n                break;\n            case SubscriptionChannel.Push:\n                subscriptions = this.getAllPushSubscriptionModels();\n                break;\n            default:\n                return undefined;\n        }\n        return Object.values(subscriptions).find((subscription) => subscription.data.token === token);\n    }\n    /* P R I V A T E */\n    getModelStores() {\n        var _a;\n        return (_a = this.core.modelRepo) === null || _a === void 0 ? void 0 : _a.modelStores;\n    }\n}\n//# sourceMappingURL=CoreModuleDirector.js.map","import OneSignalError from '../../shared/errors/OneSignalError';\nimport { logMethodCall } from '../../shared/utils/utils';\nimport OneSignal from '../../onesignal/OneSignal';\nimport { RequestService } from '../../core/requestService/RequestService';\nimport AliasPair from '../../core/requestService/AliasPair';\nimport Log from '../../shared/libraries/Log';\nimport MainHelper from '../../shared/helpers/MainHelper';\nimport { awaitableTimeout } from '../../shared/utils/AwaitableTimeout';\nimport { RETRY_BACKOFF } from '../../shared/api/RetryBackoff';\nimport { isCompleteSubscriptionObject } from '../../core/utils/typePredicates';\nimport UserDirector from '../../onesignal/UserDirector';\nimport Database from '../../shared/services/Database';\nimport LocalStorage from '../../shared/utils/LocalStorage';\nimport { ModelName } from '../../core/models/SupportedModels';\nexport default class LoginManager {\n    static async login(externalId, token) {\n        var _a, _b;\n        const consentRequired = LocalStorage.getConsentRequired();\n        const consentGiven = await Database.getConsentGiven();\n        if (consentRequired && !consentGiven) {\n            throw new OneSignalError('Login: Consent required but not given, skipping login');\n        }\n        try {\n            // before, logging in, process anything waiting in the delta queue so it's not lost\n            OneSignal.coreDirector.forceDeltaQueueProcessingOnAllExecutors();\n            if (token) {\n                await Database.setJWTToken(token);\n            }\n            const identityModel = OneSignal.coreDirector.getIdentityModel();\n            const onesignalIdBackup = identityModel === null || identityModel === void 0 ? void 0 : identityModel.onesignalId;\n            if (!identityModel) {\n                throw new OneSignalError('Login: No identity model found');\n            }\n            const currentExternalId = (_a = identityModel === null || identityModel === void 0 ? void 0 : identityModel.data) === null || _a === void 0 ? void 0 : _a.external_id;\n            // if the current externalId is the same as the one we're trying to set, do nothing\n            if (currentExternalId === externalId) {\n                Log.debug('Login: External ID already set, skipping login');\n                return;\n            }\n            const pushSubModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n            let currentPushSubscriptionId;\n            if (pushSubModel && isCompleteSubscriptionObject(pushSubModel.data)) {\n                currentPushSubscriptionId = pushSubModel.data.id;\n            }\n            const isIdentified = LoginManager.isIdentified(identityModel.data);\n            // set the external id on the user locally\n            LoginManager.setExternalId(identityModel, externalId);\n            let userData;\n            if (!isIdentified) {\n                // Guest User -> Logged In User\n                //    If login was not called before we want to keep all data from the \"Guest User\".\n                userData = await UserDirector.getAllUserData();\n            }\n            else {\n                // Stripping all other Aliases, The REST API POST /users API only allows one. (as of 2023/07/19)\n                userData = {\n                    identity: {\n                        external_id: externalId,\n                    },\n                };\n                const pushSubscription = await OneSignal.coreDirector.getPushSubscriptionModel();\n                if (pushSubscription) {\n                    userData.subscriptions = [pushSubscription.data];\n                }\n                // We don't want to carry over tags and other properties from the current User if we are switching Users.\n                //   - Example switching from User A to User B.\n            }\n            await OneSignal.coreDirector.resetModelRepoAndCache();\n            await UserDirector.initializeUser(true);\n            try {\n                const result = await LoginManager.identifyOrUpsertUser(userData, isIdentified, currentPushSubscriptionId);\n                const onesignalId = (_b = result === null || result === void 0 ? void 0 : result.identity) === null || _b === void 0 ? void 0 : _b.onesignal_id;\n                if (!onesignalId) {\n                    Log.info('Caching login call, waiting on network or subscription creation.');\n                    return;\n                }\n                // hydrating with local externalId as server could still be updating\n                await LoginManager.fetchAndHydrate(onesignalId, externalId);\n            }\n            catch (e) {\n                Log.error(`Login: Error while identifying/upserting user: ${e.message}`);\n                // if the login fails, restore the old user data\n                if (onesignalIdBackup) {\n                    Log.debug('Login: Restoring old user data');\n                    try {\n                        await LoginManager.fetchAndHydrate(onesignalIdBackup, currentExternalId);\n                    }\n                    catch (e) {\n                        Log.error(`Login: Error while restoring old user data: ${e.message}`);\n                    }\n                }\n                throw e;\n            }\n        }\n        catch (e) {\n            Log.error(e);\n        }\n    }\n    static async logout() {\n        // check if user is already logged out\n        const identityModel = OneSignal.coreDirector.getIdentityModel();\n        if (!identityModel ||\n            !identityModel.data ||\n            !identityModel.data.external_id) {\n            Log.debug('Logout: User is not logged in, skipping logout');\n            return;\n        }\n        // before, logging out, process anything waiting in the delta queue so it's not lost\n        OneSignal.coreDirector.forceDeltaQueueProcessingOnAllExecutors();\n        UserDirector.resetUserMetaProperties();\n        const pushSubModel = await OneSignal.coreDirector.getPushSubscriptionModel();\n        pushSubModel === null || pushSubModel === void 0 ? void 0 : pushSubModel.setExternalId(undefined);\n        await OneSignal.coreDirector.resetModelRepoAndCache();\n        // Initialize as a local User, as we don't have a push subscription to create a remote anonymous user.\n        if (pushSubModel === undefined) {\n            await UserDirector.initializeUser(true);\n            return;\n        }\n        // add the push subscription model back to the repo since we need at least 1 sub to create a new user\n        OneSignal.coreDirector.add(ModelName.Subscriptions, pushSubModel, false);\n        // Initialize as non-local, make a request to OneSignal to create a new anonymous user\n        await UserDirector.initializeUser(false);\n    }\n    static setExternalId(identityOSModel, externalId) {\n        logMethodCall('LoginManager.setExternalId', { externalId });\n        if (!identityOSModel) {\n            throw new OneSignalError('login: no identity model found');\n        }\n        identityOSModel.set('external_id', externalId, false);\n    }\n    static isIdentified(identity) {\n        logMethodCall('LoginManager.isIdentified', { identity });\n        return identity.external_id !== undefined;\n    }\n    static async identifyOrUpsertUser(userData, isIdentified, subscriptionId) {\n        logMethodCall('LoginManager.identifyOrUpsertUser', {\n            userData,\n            isIdentified,\n            subscriptionId,\n        });\n        let result;\n        if (isIdentified) {\n            // if started off identified, upsert a user\n            result = await this.upsertUser(userData, subscriptionId);\n        }\n        else {\n            // promoting anonymous user to identified user\n            // from user data, we only use identity (and we remove all aliases except external_id)\n            result = await this.identifyUser(userData, subscriptionId);\n        }\n        return result;\n    }\n    static async upsertUser(userData, subscriptionId, retry = 5) {\n        var _a, _b, _c, _d;\n        logMethodCall('LoginManager.upsertUser', { userData, subscriptionId });\n        if (retry === 0) {\n            throw new OneSignalError('Login: upsertUser failed: max retries reached');\n        }\n        const appId = await MainHelper.getAppId();\n        const userDataCopy = JSON.parse(JSON.stringify(userData));\n        // only accepts one alias, so remove other aliases only leaving external_id\n        this.stripAliasesOtherThanExternalId(userData);\n        const response = await RequestService.createUser({ appId, subscriptionId }, userData);\n        const result = response === null || response === void 0 ? void 0 : response.result;\n        const status = response === null || response === void 0 ? void 0 : response.status;\n        if (status >= 200 && status < 300) {\n            const onesignalId = (_a = userData.identity) === null || _a === void 0 ? void 0 : _a.onesignal_id;\n            const newRecordsState = OneSignal.coreDirector.getNewRecordsState();\n            if (!newRecordsState) {\n                Log.error(`UpsertUser: NewRecordsState is undefined`);\n            }\n            if (onesignalId) {\n                newRecordsState === null || newRecordsState === void 0 ? void 0 : newRecordsState.add(onesignalId);\n            }\n            const payloadSubcriptionToken = (_c = (_b = userData.subscriptions) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.token;\n            const resultSubscription = (_d = result.subscriptions) === null || _d === void 0 ? void 0 : _d.find((sub) => sub.token === payloadSubcriptionToken);\n            if (resultSubscription) {\n                if (isCompleteSubscriptionObject(resultSubscription)) {\n                    newRecordsState === null || newRecordsState === void 0 ? void 0 : newRecordsState.add(resultSubscription.id);\n                }\n            }\n            Log.info('Successfully created user', result);\n        }\n        else if (status >= 400 && status < 500) {\n            Log.error('Malformed request', result);\n        }\n        else if (status >= 500) {\n            Log.error('Server error. Retrying...');\n            await awaitableTimeout(RETRY_BACKOFF[retry]);\n            return this.upsertUser(userDataCopy, subscriptionId, retry - 1);\n        }\n        return result;\n    }\n    static async identifyUser(userData, pushSubscriptionId, retry = 5) {\n        var _a;\n        logMethodCall('LoginManager.identifyUser', {\n            userData,\n            pushSubscriptionId,\n        });\n        if (retry === 0) {\n            throw new OneSignalError('Login: identifyUser failed: max retries reached');\n        }\n        const { onesignal_id: onesignalId } = userData.identity;\n        const userDataCopy = JSON.parse(JSON.stringify(userData));\n        // only accepts one alias, so remove other aliases only leaving external_id\n        this.stripAliasesOtherThanExternalId(userData);\n        const { identity } = userData;\n        if (!identity) {\n            throw new OneSignalError('identifyUser failed: no identity found');\n        }\n        if (!onesignalId) {\n            // Persist to disk so it is used once we have the opportunity to create a User.\n            const identityModel = OneSignal.coreDirector.getIdentityModel();\n            identityModel === null || identityModel === void 0 ? void 0 : identityModel.set(AliasPair.EXTERNAL_ID, identity.external_id, false);\n            return userData;\n        }\n        const appId = await MainHelper.getAppId();\n        const aliasPair = new AliasPair(AliasPair.ONESIGNAL_ID, onesignalId);\n        // identify user\n        const identifyUserResponse = await RequestService.addAlias({ appId }, aliasPair, identity);\n        const identifyResponseStatus = identifyUserResponse === null || identifyUserResponse === void 0 ? void 0 : identifyUserResponse.status;\n        if (identifyResponseStatus >= 200 && identifyResponseStatus < 300) {\n            Log.info('identifyUser succeeded');\n            const newRecordsState = OneSignal.coreDirector.getNewRecordsState();\n            if (!newRecordsState) {\n                Log.error(`IdentifyUser: NewRecordsState is undefined`);\n            }\n            // External id takes time to update on server. Include as new record with current time\n            newRecordsState === null || newRecordsState === void 0 ? void 0 : newRecordsState.add(onesignalId, true);\n        }\n        else if (identifyResponseStatus === 409 && pushSubscriptionId) {\n            return await this.transferSubscription(appId, pushSubscriptionId, identity);\n        }\n        else if (identifyResponseStatus >= 400 && identifyResponseStatus < 500) {\n            throw new OneSignalError(`identifyUser: malformed request: ${JSON.stringify(identifyUserResponse === null || identifyUserResponse === void 0 ? void 0 : identifyUserResponse.result)}`);\n        }\n        else if (identifyResponseStatus >= 500) {\n            Log.error('identifyUser failed: server error. Retrying...');\n            await awaitableTimeout(RETRY_BACKOFF[retry]);\n            return this.identifyUser(userDataCopy, pushSubscriptionId, retry - 1);\n        }\n        const identityResult = (_a = identifyUserResponse === null || identifyUserResponse === void 0 ? void 0 : identifyUserResponse.result) === null || _a === void 0 ? void 0 : _a.identity;\n        return { identity: identityResult };\n    }\n    static async fetchAndHydrate(onesignalId, externalId) {\n        logMethodCall('LoginManager.fetchAndHydrate', { onesignalId, externalId });\n        const fetchUserResponse = await RequestService.getUser({ appId: await MainHelper.getAppId() }, new AliasPair(AliasPair.ONESIGNAL_ID, onesignalId));\n        OneSignal.coreDirector.hydrateUser(fetchUserResponse === null || fetchUserResponse === void 0 ? void 0 : fetchUserResponse.result, externalId);\n    }\n    /**\n     * identity object should only contain external_id\n     * if logging in from identified user a to identified user b, the identity object would\n     * otherwise contain any existing user a aliases\n     */\n    static stripAliasesOtherThanExternalId(userData) {\n        logMethodCall('LoginManager.stripAliasesOtherThanExternalId', { userData });\n        const { identity } = userData;\n        if (!identity) {\n            throw new OneSignalError('stripAliasesOtherThanExternalId failed: no identity found');\n        }\n        const { external_id } = identity;\n        if (!external_id) {\n            throw new OneSignalError('stripAliasesOtherThanExternalId failed: no external_id found');\n        }\n        const newIdentity = { external_id };\n        userData.identity = newIdentity;\n    }\n    /**\n     * Transfer subscription when identifyUser fails with 409\n     * @param appId\n     * @param pushSubscriptionId\n     * @param identity\n     * @returns Promise<Partial<UserData>>\n     */\n    static async transferSubscription(appId, pushSubscriptionId, identity) {\n        Log.error('^^^ Handling 409 HTTP response reported by the browser above.' +\n            ' This is an expected result when the User already exists.' +\n            ' Push subscription is being transferred the existing User.');\n        const retainPreviousOwner = false;\n        const transferResponse = await RequestService.transferSubscription({ appId }, pushSubscriptionId, identity, retainPreviousOwner);\n        const transferResponseStatus = transferResponse === null || transferResponse === void 0 ? void 0 : transferResponse.status;\n        const tansferResult = transferResponse === null || transferResponse === void 0 ? void 0 : transferResponse.result;\n        if (transferResponseStatus &&\n            transferResponseStatus >= 200 &&\n            transferResponseStatus < 300) {\n            Log.info('transferSubscription succeeded');\n            const transferResultIdentity = tansferResult === null || tansferResult === void 0 ? void 0 : tansferResult.identity;\n            return { identity: transferResultIdentity };\n        }\n        else {\n            throw new OneSignalError(`transferSubscription failed: ${JSON.stringify(tansferResult)}}`);\n        }\n    }\n}\n//# sourceMappingURL=LoginManager.js.map","import { EnvironmentInfoHelper } from '../page/helpers/EnvironmentInfoHelper';\nimport ConfigManager from '../page/managers/ConfigManager';\nimport Context from '../page/models/Context';\nimport TimedLocalStorage from '../page/modules/TimedLocalStorage';\nimport { ProcessOneSignalPushCalls } from '../page/utils/ProcessOneSignalPushCalls';\nimport { SdkInitError, SdkInitErrorKind } from '../shared/errors/SdkInitError';\nimport Environment from '../shared/helpers/Environment';\nimport EventHelper from '../shared/helpers/EventHelper';\nimport InitHelper from '../shared/helpers/InitHelper';\nimport MainHelper from '../shared/helpers/MainHelper';\nimport Emitter from '../shared/libraries/Emitter';\nimport Log from '../shared/libraries/Log';\nimport SdkEnvironment from '../shared/managers/SdkEnvironment';\nimport Database from '../shared/services/Database';\nimport { logMethodCall } from '../shared/utils/utils';\nimport OneSignalEvent from '../shared/services/OneSignalEvent';\nimport NotificationsNamespace from './NotificationsNamespace';\nimport CoreModule from '../core/CoreModule';\nimport { CoreModuleDirector } from '../core/CoreModuleDirector';\nimport UserNamespace from './UserNamespace';\nimport SlidedownNamespace from './SlidedownNamespace';\nimport LocalStorage from '../shared/utils/LocalStorage';\nimport LoginManager from '../page/managers/LoginManager';\nimport { SessionNamespace } from './SessionNamespace';\nimport DebugNamespace from './DebugNamesapce';\nimport { InvalidArgumentError, InvalidArgumentReason, } from '../shared/errors/InvalidArgumentError';\nimport { ONESIGNAL_EVENTS } from './OneSignalEvents';\nimport { bowserCastle } from '../shared/utils/bowserCastle';\nexport default class OneSignal {\n    static async _initializeCoreModuleAndOSNamespaces() {\n        const core = new CoreModule();\n        await core.initPromise;\n        OneSignal.coreDirector = new CoreModuleDirector(core);\n        const subscription = await Database.getSubscription();\n        const permission = await OneSignal.context.permissionManager.getPermissionStatus();\n        OneSignal.User = new UserNamespace(true, subscription, permission);\n        this.Notifications = new NotificationsNamespace(permission);\n    }\n    static async _initializeConfig(options) {\n        const appConfig = await new ConfigManager().getAppConfig(options);\n        Log.debug('OneSignal: Final web app config:', appConfig);\n        // TODO: environmentInfo is explicitly dependent on existence of OneSignal.config. Needs refactor.\n        // Workaround to temp assign config so that it can be used in context.\n        OneSignal.config = appConfig;\n        OneSignal.environmentInfo = EnvironmentInfoHelper.getEnvironmentInfo();\n        OneSignal.context = new Context(appConfig);\n        OneSignal.config = OneSignal.context.appConfig;\n    }\n    /**\n     * Login user\n     * @PublicApi\n     *\n     * When logging in, we must set a new blank temporary user that will be able to hold potential changes following the\n     * login call (e.g: addTag) while we wait for the result of the login call (in particular the final `onesignal_id`).\n     *\n     * After the call completes, we should fetch the user and hydrate the models with updated data.\n     *\n     * Finally, we should transfer the push subscription if the `externalId` already exists on the target login user.\n     *\n     *          anon -> identified   |   identified -> identified\n     *          -------------------------------------------------\n     *  success: fetch user data     |   fetch user data\n     *                               |   transfer push subscription\n     *                               |   merge users (v2)\n     *          -------------------------------------------------\n     *  failure: fetch user data     |   fetch user data\n     *           transfer push sub   |   transfer push subscription\n     *           merge users (v2)    |   merge users (v2)\n     *\n     * @param externalId - The external user ID to set\n     * @param jwtToken - The JWT auth token to use when setting the external user ID\n     */\n    static async login(externalId, jwtToken) {\n        logMethodCall('login', { externalId, jwtToken });\n        if (typeof externalId === 'undefined') {\n            throw new InvalidArgumentError('externalId', InvalidArgumentReason.Empty);\n        }\n        if (typeof externalId !== 'string') {\n            throw new InvalidArgumentError('externalId', InvalidArgumentReason.WrongType);\n        }\n        if (jwtToken !== undefined && typeof jwtToken !== 'string') {\n            throw new InvalidArgumentError('jwtToken', InvalidArgumentReason.WrongType);\n        }\n        await LoginManager.login(externalId, jwtToken);\n    }\n    static async logout() {\n        logMethodCall('logout');\n        LoginManager.logout();\n    }\n    /**\n     * Initializes the SDK, called by the developer.\n     * @PublicApi\n     */\n    static async init(options) {\n        logMethodCall('init');\n        Log.debug(`Browser Environment: ${bowserCastle().name} ${bowserCastle().version}`);\n        LocalStorage.removeLegacySubscriptionOptions();\n        await InitHelper.polyfillSafariFetch();\n        InitHelper.errorIfInitAlreadyCalled();\n        await OneSignal._initializeConfig(options);\n        if (!OneSignal.config) {\n            throw new Error('OneSignal config not initialized!');\n        }\n        if (bowserCastle().name == 'safari' && !OneSignal.config.safariWebId) {\n            /**\n             * Don't throw an error for missing Safari config; many users set up\n             * support on Chrome/Firefox and don't intend to support Safari but don't\n             * place conditional initialization checks.\n             */\n            Log.warn(new SdkInitError(SdkInitErrorKind.MissingSafariWebId));\n            return;\n        }\n        await OneSignal._initializeCoreModuleAndOSNamespaces();\n        if (LocalStorage.getConsentRequired()) {\n            const providedConsent = await Database.getConsentGiven();\n            if (!providedConsent) {\n                OneSignal.pendingInit = true;\n                return;\n            }\n        }\n        await OneSignal._delayedInit();\n    }\n    static async _delayedInit() {\n        OneSignal.pendingInit = false;\n        // Ignore Promise as doesn't return until the service worker becomes active.\n        OneSignal.context.workerMessenger.listen();\n        async function __init() {\n            if (OneSignal.__initAlreadyCalled)\n                return;\n            OneSignal.__initAlreadyCalled = true;\n            OneSignal.emitter.on(OneSignal.EVENTS.NOTIFICATION_PERMISSION_CHANGED_AS_STRING, EventHelper.onNotificationPermissionChange);\n            OneSignal.emitter.on(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, EventHelper._onSubscriptionChanged);\n            OneSignal.emitter.on(OneSignal.EVENTS.SDK_INITIALIZED, InitHelper.onSdkInitialized);\n            window.addEventListener('focus', () => {\n                // Checks if permission changed every time a user focuses on the page,\n                //     since a user has to click out of and back on the page to check permissions\n                MainHelper.checkAndTriggerNotificationPermissionChanged();\n            });\n            await InitHelper.initSaveState();\n            await InitHelper.saveInitOptions();\n            await InitHelper.internalInit();\n        }\n        if (document.readyState === 'complete' ||\n            document.readyState === 'interactive')\n            await __init();\n        else {\n            Log.debug('OneSignal: Waiting for DOMContentLoaded or readyStateChange event before continuing' +\n                ' initialization...');\n            window.addEventListener('DOMContentLoaded', () => {\n                __init();\n            });\n            document.onreadystatechange = () => {\n                if (document.readyState === 'complete' ||\n                    document.readyState === 'interactive')\n                    __init();\n            };\n        }\n    }\n    /**\n     * Call after user accepts your user consent agreement\n     * @PublicApi\n     */\n    static async setConsentGiven(consent) {\n        logMethodCall('setConsentGiven', { consent });\n        if (typeof consent === 'undefined') {\n            throw new InvalidArgumentError('consent', InvalidArgumentReason.Empty);\n        }\n        if (typeof consent !== 'boolean') {\n            throw new InvalidArgumentError('consent', InvalidArgumentReason.WrongType);\n        }\n        await Database.setConsentGiven(consent);\n        if (consent && OneSignal.pendingInit)\n            await OneSignal._delayedInit();\n    }\n    static async setConsentRequired(requiresConsent) {\n        logMethodCall('setConsentRequired', { requiresConsent });\n        if (typeof requiresConsent === 'undefined') {\n            throw new InvalidArgumentError('requiresConsent', InvalidArgumentReason.Empty);\n        }\n        if (typeof requiresConsent !== 'boolean') {\n            throw new InvalidArgumentError('requiresConsent', InvalidArgumentReason.WrongType);\n        }\n        LocalStorage.setConsentRequired(requiresConsent);\n    }\n    /**\n     * Used to load OneSignal asynchronously / deferred from a webpage\n     * Allows asynchronous function queuing while the SDK loads in the browser with <script src=\"...\" async or defer />\n     * @PublicApi\n     * @param item - A function to be executed if the browser supports the OneSignal SDK\n     * @Example\n     *  OneSignalDeferred.push(function(onesignal) { onesignal.functionName(param1, param2); });\n     */\n    static push(item) {\n        ProcessOneSignalPushCalls.processItem(OneSignal, item);\n    }\n}\nOneSignal.EVENTS = ONESIGNAL_EVENTS;\nOneSignal.VERSION = Environment.version();\nOneSignal._VERSION = Environment.version();\nOneSignal.sdkEnvironment = SdkEnvironment;\nOneSignal.config = null;\nOneSignal._sessionInitAlreadyRunning = false;\nOneSignal._isNewVisitor = false;\nOneSignal.timedLocalStorage = TimedLocalStorage;\nOneSignal.initialized = false;\nOneSignal._didLoadITILibrary = false;\nOneSignal.notifyButton = null;\nOneSignal.environment = Environment;\nOneSignal.database = Database;\nOneSignal.event = OneSignalEvent;\nOneSignal.pendingInit = true;\nOneSignal.emitter = new Emitter();\nOneSignal.cache = {};\nOneSignal._LOGGING = false;\nOneSignal.LOGGING = false;\nOneSignal._initCalled = false;\nOneSignal.__initAlreadyCalled = false;\nOneSignal.Notifications = new NotificationsNamespace();\nOneSignal.Slidedown = new SlidedownNamespace();\nOneSignal.Session = new SessionNamespace();\nOneSignal.User = new UserNamespace(false);\nOneSignal.Debug = new DebugNamespace();\nLog.info(`OneSignal Web SDK loaded (version ${OneSignal._VERSION},\n  ${SdkEnvironment.getWindowEnv().toString()} environment).`);\nLog.debug(`Current Page URL: ${typeof location === 'undefined' ? 'NodeJS' : location.href}`);\n//# sourceMappingURL=OneSignal.js.map","export const ONESIGNAL_EVENTS = {\n    /**\n     * Occurs immediately when the notification permission changes for the domain at the browser level.\n     * This normally happens when the user clicks \"Allow\" or \"Block\" on the native permission prompt\n     * on Chrome, Firefox, etc, however it also changes if the end-user clicks on the lock icon and\n     * manually changes it.\n     * Occurs BEFORE the actual push subscription is created on on the backend.\n     */\n    NOTIFICATION_PERMISSION_CHANGED_AS_STRING: 'permissionChangeAsString',\n    /**\n     * Same as NOTIFICATION_PERMISSION_CHANGED_AS_STRING, expect a boolean and will be used to fire\n     * events to the public API OneSignal.Notification.addEventListener(\"permissionChange\", function....)\n     */\n    NOTIFICATION_PERMISSION_CHANGED_AS_BOOLEAN: 'permissionChange',\n    /**\n     * Occurs after the user is officially subscribed to push notifications. The service worker is fully registered\n     * and activated and the user is eligible to receive push notifications at any point after this.\n     */\n    SUBSCRIPTION_CHANGED: 'change',\n    /**\n     * Occurs after a POST call to OneSignal's server to send the welcome notification has completed. The actual\n     * notification arrives shortly after.\n     */\n    WELCOME_NOTIFICATION_SENT: 'sendWelcomeNotification',\n    /**\n     * Occurs when a notification is displayed.\n     */\n    NOTIFICATION_WILL_DISPLAY: 'foregroundWillDisplay',\n    /**\n     * Occurs when a notification is dismissed by the user either clicking 'X' or clearing all notifications\n     * (available in Android). This event is NOT called if the user clicks the notification's body or any of the\n     * action buttons.\n     */\n    NOTIFICATION_DISMISSED: 'dismiss',\n    /**\n     * New event replacing legacy addNotificationOpenedHandler(). Used when the notification was clicked.\n     */\n    NOTIFICATION_CLICKED: 'click',\n    /**\n     * Occurs after the document ready event fires\n     */\n    SDK_INITIALIZED: 'initializeInternal',\n    /**\n     * Occurs after the SDK finishes its final internal initialization. The final initialization event.\n     */\n    SDK_INITIALIZED_PUBLIC: 'initialize',\n    /**\n     * Occurs after the user subscribes to push notifications and a new user entry is created on OneSignal's server,\n     * and also occurs when the user begins a new site session and the last_session and last_active is updated on\n     * OneSignal's server.\n     */\n    REGISTERED: 'register',\n    /**\n     * Occurs when the native permission prompt is displayed.\n     */\n    PERMISSION_PROMPT_DISPLAYED: 'permissionPromptDisplay',\n    /**\n     * For internal testing only. Used for all sorts of things.\n     */\n    TEST_FINISHED_ALLOW_CLICK_HANDLING: 'testFinishedAllowClickHandling',\n    SESSION_STARTED: 'os.sessionStarted',\n};\n//# sourceMappingURL=OneSignalEvents.js.map","import { DelayedPromptType } from '../shared/models/Prompts';\nimport { awaitOneSignalInitAndSupported } from '../shared/utils/utils';\nimport OneSignal from './OneSignal';\nimport { EventListenerBase } from '../page/userModel/EventListenerBase';\nexport default class SlidedownNamespace extends EventListenerBase {\n    constructor() {\n        super();\n    }\n    /**\n     * Shows a sliding modal prompt on the page for users.\n     * @PublicApi\n     */\n    async promptPush(options) {\n        await awaitOneSignalInitAndSupported();\n        await OneSignal.context.promptsManager.internalShowParticularSlidedown(DelayedPromptType.Push, options);\n    }\n    async promptPushCategories(options) {\n        await awaitOneSignalInitAndSupported();\n        const isPushEnabled = await OneSignal.context.subscriptionManager.isPushNotificationsEnabled();\n        await OneSignal.context.promptsManager.internalShowCategorySlidedown(Object.assign(Object.assign({}, options), { isInUpdateMode: isPushEnabled }));\n    }\n    async promptSms(options) {\n        await awaitOneSignalInitAndSupported();\n        await OneSignal.context.promptsManager.internalShowSmsSlidedown(Object.assign({}, options));\n    }\n    async promptEmail(options) {\n        await awaitOneSignalInitAndSupported();\n        await OneSignal.context.promptsManager.internalShowEmailSlidedown(Object.assign({}, options));\n    }\n    async promptSmsAndEmail(options) {\n        await awaitOneSignalInitAndSupported();\n        await OneSignal.context.promptsManager.internalShowSmsAndEmailSlidedown(Object.assign({}, options));\n    }\n    addEventListener(event, listener) {\n        OneSignal.emitter.on(event, listener);\n    }\n    removeEventListener(event, listener) {\n        OneSignal.emitter.off(event, listener);\n    }\n}\n//# sourceMappingURL=SlidedownNamespace.js.map","import OutcomesHelper from '../shared/helpers/OutcomesHelper';\nimport Log from '../shared/libraries/Log';\nimport { OutcomeAttributionType } from '../shared/models/Outcomes';\nexport class SessionNamespace {\n    async sendOutcome(outcomeName, outcomeWeight) {\n        const config = OneSignal.config.userConfig.outcomes;\n        if (!config) {\n            Log.error(`Could not send ${outcomeName}. No outcomes config found.`);\n            return;\n        }\n        const outcomesHelper = new OutcomesHelper(OneSignal.config.appId, config, outcomeName, false);\n        if (typeof outcomeWeight !== 'undefined' &&\n            typeof outcomeWeight !== 'number') {\n            Log.error('Outcome weight can only be a number if present.');\n            return;\n        }\n        if (!(await outcomesHelper.beforeOutcomeSend())) {\n            return;\n        }\n        const outcomeAttribution = await outcomesHelper.getAttribution();\n        await outcomesHelper.send({\n            type: outcomeAttribution.type,\n            notificationIds: outcomeAttribution.notificationIds,\n            weight: outcomeWeight,\n        });\n    }\n    async sendUniqueOutcome(outcomeName) {\n        const config = OneSignal.config.userConfig.outcomes;\n        if (!config) {\n            Log.error(`Could not send ${outcomeName}. No outcomes config found.`);\n            return;\n        }\n        const outcomesHelper = new OutcomesHelper(OneSignal.config.appId, config, outcomeName, true);\n        if (!(await outcomesHelper.beforeOutcomeSend())) {\n            return;\n        }\n        const outcomeAttribution = await outcomesHelper.getAttribution();\n        if (outcomeAttribution.type === OutcomeAttributionType.NotSupported) {\n            Log.warn('You are on a free plan. Please upgrade to use this functionality.');\n            return;\n        }\n        // all notifs in attribution window\n        const { notificationIds } = outcomeAttribution;\n        // only new notifs that ought to be attributed\n        const newNotifsToAttributeWithOutcome = await outcomesHelper.getNotifsToAttributeWithUniqueOutcome(notificationIds);\n        if (!outcomesHelper.shouldSendUnique(outcomeAttribution, newNotifsToAttributeWithOutcome)) {\n            Log.warn(`'${outcomeName}' was already reported for all notifications.`);\n            return;\n        }\n        await outcomesHelper.send({\n            type: outcomeAttribution.type,\n            notificationIds: newNotifsToAttributeWithOutcome,\n        });\n    }\n}\n//# sourceMappingURL=SessionNamespace.js.map","import Log from '../shared/libraries/Log';\nexport default class DebugNamespace {\n    /**\n     * @PublicApi\n     * @param logLevel - string\n     */\n    setLogLevel(logLevel) {\n        Log.setLevel(logLevel);\n    }\n}\n//# sourceMappingURL=DebugNamesapce.js.map","import OneSignal from './OneSignal';\n// This class is simply used as a proxy to OneSignal.push when the SDK is fully loaded.\n// This way the site developer can use OneSignalDeferred.push without have to check\n//   if the SDK is loaded or not.\nexport default class OneSignalDeferred {\n    static push(item) {\n        OneSignal.push(item);\n    }\n}\n//# sourceMappingURL=OneSignalDeferred.js.map","import OneSignalError from './OneSignalError';\nexport default class TimeoutError extends OneSignalError {\n    constructor(message = 'The asynchronous operation has timed out.') {\n        super(message);\n        this.message = message;\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#\n         * extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, TimeoutError.prototype);\n    }\n}\n//# sourceMappingURL=TimeoutError.js.map","import TimeoutError from '../errors/TimeoutError';\nexport class Utils {\n    /**\n     * Returns true if match is in string; otherwise, returns false.\n     */\n    static contains(indexOfAble, match) {\n        if (!indexOfAble)\n            return false;\n        return indexOfAble.indexOf(match) !== -1;\n    }\n    /**\n     * Returns the current object without keys that have undefined values.\n     * Regardless of whether the return result is used, the passed-in object is destructively modified.\n     * Only affects keys that the object directly contains (i.e. not those inherited via the object's prototype).\n     * @param object\n     */\n    static trimUndefined(object) {\n        for (const property in object) {\n            if (object[property] === undefined) {\n                delete object[property];\n            }\n        }\n        return object;\n    }\n    /**\n     * Capitalizes the first letter of the string.\n     * @returns {string} The string with the first letter capitalized.\n     */\n    static capitalize(text) {\n        return text.charAt(0).toUpperCase() + text.slice(1);\n    }\n    static isNullOrUndefined(value) {\n        return typeof value === 'undefined' || value === null;\n    }\n    static valueOrDefault(value, defaultValue) {\n        if (typeof value === 'undefined' || value === null) {\n            return defaultValue;\n        }\n        return value;\n    }\n    /**\n     * JSON.stringify() but converts functions to \"[Function]\" so they aren't lost.\n     * Helps when logging method calls.\n     */\n    static stringify(obj) {\n        return JSON.stringify(obj, (_, value) => {\n            if (typeof value === 'function') {\n                return '[Function]';\n            }\n            else {\n                return value;\n            }\n        }, 4);\n    }\n    /**\n     * Used for generating query params\n     *  e.g: -> hash = { appId } // with appId = '1234'\n     *       -> returns \"appId=1234\"\n     * @param  {any} hash\n     * @returns string\n     */\n    static encodeHashAsUriComponent(hash) {\n        let uriComponent = '';\n        const keys = Object.keys(hash);\n        for (const key of keys) {\n            const value = hash[key];\n            uriComponent += `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        return uriComponent;\n    }\n    static timeoutPromise(promise, milliseconds) {\n        const timeoutPromise = new Promise((_, reject) => {\n            setTimeout(() => {\n                reject(new TimeoutError());\n            }, milliseconds);\n        });\n        return Promise.race([promise, timeoutPromise]);\n    }\n    static getValueOrDefault(value, defaultValue) {\n        if (value !== undefined && value !== null) {\n            return value;\n        }\n        return defaultValue;\n    }\n    /**\n     * This is similar to ECMAScript2107 String.prototype.padStart.\n     * Switch to this after updating TypeScript and can confirm it gets transpiled down to ES6\n     * @param str - String to pad left\n     * @param targetLength - Length to make the string\n     * @param padString - String value of length one to pad with.\n     * @returns {string} - Resulting string padded\n     */\n    static padStart(str, targetLength, padString) {\n        let result = str;\n        while (result.length < targetLength) {\n            result = padString + result;\n        }\n        return result;\n    }\n    /**\n     * Returns trimmed version number\n     * e.g: \"10.01.30\" becomes \"10.01\"\n     * @param version - version number we want to check\n     */\n    static parseVersionString(version) {\n        const osVersionParts = version.toString().split('.');\n        const majorVersion = Utils.padStart(osVersionParts[0], 2, '0');\n        let minorVersion;\n        if (osVersionParts[1]) {\n            minorVersion = Utils.padStart(osVersionParts[1], 2, '0');\n        }\n        else {\n            minorVersion = '00';\n        }\n        return Number(`${majorVersion}.${minorVersion}`);\n    }\n    /**\n     * Gives back the last x number of parts providing a string with a delimiter.\n     * Example: lastParts(\"api.staging.onesignal.com\", \".\", 3) will return \"staging.onesignal.com\"\n     */\n    static lastParts(subject, delimiter, maxParts) {\n        const parts = subject.split(delimiter);\n        const skipParts = Math.max(parts.length - maxParts, 0);\n        return parts.slice(skipParts).join(delimiter);\n    }\n    static enforceAppId(appId) {\n        if (!appId) {\n            throw new Error('App id cannot be empty');\n        }\n    }\n    static enforceAlias(aliasPair) {\n        if (!aliasPair.label) {\n            throw new Error('Alias label cannot be empty');\n        }\n        if (!aliasPair.id) {\n            throw new Error('Alias id cannot be empty');\n        }\n    }\n    static sortArrayOfObjects(arrayToSort, predicateForProperty, descending = false, doItInPlace = true) {\n        const internalArrayToSort = doItInPlace ? arrayToSort : arrayToSort.slice();\n        internalArrayToSort.sort((a, b) => {\n            const propertyA = predicateForProperty(a);\n            const propertyB = predicateForProperty(b);\n            if (propertyA > propertyB) {\n                return !!descending ? -1 : 1;\n            }\n            if (propertyA < propertyB) {\n                return !!descending ? 1 : -1;\n            }\n            return 0;\n        });\n        return internalArrayToSort;\n    }\n}\nexport default Utils;\n//# sourceMappingURL=Utils.js.map","import OneSignalError from './OneSignalError';\nexport var InvalidArgumentReason;\n(function (InvalidArgumentReason) {\n    InvalidArgumentReason[InvalidArgumentReason[\"Empty\"] = 0] = \"Empty\";\n    InvalidArgumentReason[InvalidArgumentReason[\"Malformed\"] = 1] = \"Malformed\";\n    InvalidArgumentReason[InvalidArgumentReason[\"EnumOutOfRange\"] = 2] = \"EnumOutOfRange\";\n    InvalidArgumentReason[InvalidArgumentReason[\"WrongType\"] = 3] = \"WrongType\";\n})(InvalidArgumentReason || (InvalidArgumentReason = {}));\nexport class InvalidArgumentError extends OneSignalError {\n    constructor(argName, reason, message) {\n        let errorMessage;\n        switch (reason) {\n            case InvalidArgumentReason.Empty:\n                errorMessage = `Supply a non-empty value to '${argName}'. ${message}`;\n                break;\n            case InvalidArgumentReason.Malformed:\n                errorMessage = `The value for '${argName}' was malformed. ${message}`;\n                break;\n            case InvalidArgumentReason.EnumOutOfRange:\n                errorMessage = `The value for '${argName}' was out of range of the expected input enum. ${message}`;\n                break;\n            case InvalidArgumentReason.WrongType:\n                errorMessage = `The value for '${argName}' was of the wrong type. ${message}`;\n                break;\n        }\n        super(errorMessage);\n        this.argument = argName;\n        this.reason = InvalidArgumentReason[reason];\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n         * #extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, InvalidArgumentError.prototype);\n    }\n}\n//# sourceMappingURL=InvalidArgumentError.js.map","export default class OneSignalError extends Error {\n    constructor(message = '') {\n        super(message);\n        // extending Error is weird and does not propagate `message`\n        Object.defineProperty(this, 'message', {\n            configurable: true,\n            enumerable: false,\n            value: message,\n            writable: true,\n        });\n        Object.defineProperty(this, 'name', {\n            configurable: true,\n            enumerable: false,\n            value: this.constructor.name,\n            writable: true,\n        });\n        // eslint-disable-next-line no-prototype-builtins\n        if (Error.hasOwnProperty('captureStackTrace')) {\n            Error.captureStackTrace(this, this.constructor);\n            return;\n        }\n        Object.defineProperty(this, 'stack', {\n            configurable: true,\n            enumerable: false,\n            value: new Error(message).stack,\n            writable: true,\n        });\n        /**\n         * Important! Required to make sure the correct error type is detected during instanceof checks.\n         * Same applies to all derived classes.\n         * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#\n         * extending-built-ins-like-error-array-and-map-may-no-longer-work\n         */\n        Object.setPrototypeOf(this, OneSignalError.prototype);\n    }\n}\n//# sourceMappingURL=OneSignalError.js.map","// Light weight JS to detect browsers push notification capabilities\n//\n// This is used by the OneSignalSDK.page.js shim\n// DO NOT add other imports since it is an ES5 target and dead code imports can't be clean up.\n// Checks if the browser supports push notifications by checking if specific\n//   classes and properties on them exist\nexport function isPushNotificationsSupported() {\n    return supportsVapidPush() || supportsSafariLegacyPush();\n}\n// Does the browser support legacy Safari push? (only available on macOS)\nexport function supportsSafariLegacyPush() {\n    return (typeof window.safari !== 'undefined' &&\n        typeof window.safari.pushNotification !== 'undefined');\n}\n// Does the browser support the standard Push API\nexport function supportsVapidPush() {\n    return (typeof PushSubscriptionOptions !== 'undefined' &&\n        // eslint-disable-next-line no-prototype-builtins\n        PushSubscriptionOptions.prototype.hasOwnProperty('applicationServerKey'));\n}\n// Is Safari on iOS or iPadOS\nexport function isIosSafari() {\n    // Safari's \"Request Desktop Website\" (default for iPad) masks the\n    // userAgent as macOS. So we are using maxTouchPoints to assume it is\n    // iOS, since there are no touch screen Macs.\n    return isSafariBrowser() && navigator.maxTouchPoints > 0;\n}\n// Is any Safari browser, includes macOS and iOS.\nfunction isSafariBrowser() {\n    return navigator.vendor === 'Apple Computer, Inc.';\n}\n/* Notes on browser results which lead the logic of the functions above */\n// Safari\n//   macOS - typeof safari.pushNotification == \"object\"\n//         - iframe context - typeof safari == \"undefined\"\n//   iOS -  typeof safari == \"undefined\"\n// Chrome\n//   HTTP & HTTPS - typeof PushSubscriptionOptions == \"function\"\n//   HTTP - navigator.serviceWorker == \"undefined\"\n// Firefox\n//   Normal - typeof PushSubscriptionOptions == \"function\"\n//     HTTP & HTTPS - typeof PushSubscriptionOptions == \"function\"\n//# sourceMappingURL=BrowserSupportsPush.js.map","import SdkEnvironment from '../managers/SdkEnvironment';\nimport { WindowEnvironmentKind } from '../models/WindowEnvironmentKind';\nimport { bowserCastle } from '../utils/bowserCastle';\nimport { supportsVapidPush } from '../../page/utils/BrowserSupportsPush';\nexport default class Environment {\n    /**\n     * True if not in a service worker environment.\n     */\n    static isBrowser() {\n        return typeof window !== 'undefined';\n    }\n    // Prefer Legacy Safari if API is available over VAPID until Safari\n    // fixes issues with it.\n    static useSafariLegacyPush() {\n        var _a;\n        return this.isBrowser() && ((_a = window.safari) === null || _a === void 0 ? void 0 : _a.pushNotification) != undefined;\n    }\n    // This is the counter part to useSafariLegacyPush(); as it notes only use\n    // Safari VAPID if it doesn't have legacy Safari push.\n    static useSafariVapidPush() {\n        return (bowserCastle().name == 'safari' &&\n            supportsVapidPush() &&\n            !this.useSafariLegacyPush());\n    }\n    static version() {\n        return typeof __VERSION__ === 'undefined' ? 1 : Number(__VERSION__);\n    }\n    static get TRADITIONAL_CHINESE_LANGUAGE_TAG() {\n        return ['tw', 'hant'];\n    }\n    static get SIMPLIFIED_CHINESE_LANGUAGE_TAG() {\n        return ['cn', 'hans'];\n    }\n    /* Specifications: https://tools.ietf.org/html/bcp47 */\n    static getLanguage() {\n        let languageTag = navigator.language;\n        if (languageTag) {\n            languageTag = languageTag.toLowerCase();\n            const languageSubtags = languageTag.split('-');\n            if (languageSubtags[0] == 'zh') {\n                // The language is zh-?\n                // We must categorize the language as either zh-Hans (simplified) or zh-Hant (traditional);\n                // OneSignal only supports these two Chinese variants\n                for (const traditionalSubtag of Environment.TRADITIONAL_CHINESE_LANGUAGE_TAG) {\n                    if (languageSubtags.indexOf(traditionalSubtag) !== -1) {\n                        return 'zh-Hant';\n                    }\n                }\n                for (const simpleSubtag of Environment.SIMPLIFIED_CHINESE_LANGUAGE_TAG) {\n                    if (languageSubtags.indexOf(simpleSubtag) !== -1) {\n                        return 'zh-Hans';\n                    }\n                }\n                return 'zh-Hant'; // Return Chinese traditional by default\n            }\n            else {\n                // Return the language subtag (it can be three characters, so truncate it down to 2 just to be sure)\n                return languageSubtags[0].substring(0, 2);\n            }\n        }\n        else {\n            return 'en';\n        }\n    }\n    static supportsServiceWorkers() {\n        const env = SdkEnvironment.getWindowEnv();\n        switch (env) {\n            case WindowEnvironmentKind.ServiceWorker:\n                return true;\n            default:\n                return typeof navigator !== 'undefined' && 'serviceWorker' in navigator;\n        }\n    }\n    /*\n      Returns the MD5 hash of all stylesheets within the src/stylesheets\n      directory.\n     */\n    static getSdkStylesVersionHash() {\n        return typeof __SRC_STYLESHEETS_MD5_HASH__ === 'undefined'\n            ? '2'\n            : __SRC_STYLESHEETS_MD5_HASH__;\n    }\n}\n//# sourceMappingURL=Environment.js.map","/**\n * Source: https://github.com/pazguille/emitter-es6\n */\n/**\n * Creates a new instance of Emitter.\n * @class\n * @returns {Object} emitter - An instance of Emitter.\n * @example\n * var emitter = new Emitter();\n */\nexport default class Emitter {\n    constructor() {\n        this._events = {};\n    }\n    /**\n     * Adds a listener to the collection for a specified event.\n     */\n    on(event, listener) {\n        this._events[event] = this._events[event] || [];\n        this._events[event].push(listener);\n        return this;\n    }\n    /**\n     * Adds a one time listener to the collection for a specified event. It will\n     * execute only once.\n     */\n    once(event, listener) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        function fn() {\n            that.off(event, fn);\n            // eslint-disable-next-line prefer-rest-params\n            listener.apply(this, arguments);\n        }\n        fn.listener = listener;\n        this.on(event, fn);\n        return this;\n    }\n    /**\n     * Removes a listener from the collection for a specified event.\n     */\n    off(event, listener) {\n        const listeners = this._events[event];\n        if (listeners !== undefined) {\n            for (let j = 0; j < listeners.length; j += 1) {\n                if (listeners[j] === listener ||\n                    listeners[j].listener === listener) {\n                    listeners.splice(j, 1);\n                    break;\n                }\n            }\n            if (listeners.length === 0)\n                this.removeAllListeners(event);\n        }\n        return this;\n    }\n    /**\n     * Removes all listeners from the collection for a specified event.\n     */\n    removeAllListeners(event) {\n        if (event)\n            delete this._events[event];\n        else\n            this._events = {};\n        return this;\n    }\n    /**\n     * Returns all listeners from the collection for a specified event.\n     * @public\n     * @function\n     * @name Emitter#listeners\n     * @param {String} event - Event name.\n     * @returns {Array}\n     * @example\n     * me.listeners('ready');\n     */\n    listeners(event) {\n        try {\n            return this._events[event];\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    /**\n     * Returns number of listeners from the collection for a specified event.\n     * @public\n     * @function\n     * @name Emitter#numberOfListeners\n     * @param {String} event - Event name.\n     * @returns {number}\n     * @example\n     * me.numberOfListeners('ready');\n     */\n    numberOfListeners(event) {\n        const listeners = this.listeners(event);\n        if (listeners)\n            return listeners.length;\n        return 0;\n    }\n    /**\n     * Execute each item in the listener collection in order with the specified data.\n     * @param event - String of the event name\n     * @param args - Variable number of args to pass to the functions subscribe to the event\n     */\n    async emit(...args) {\n        const event = args.shift();\n        let listeners = this._events[event];\n        if (listeners !== undefined) {\n            listeners = listeners.slice(0);\n            const len = listeners.length;\n            for (let i = 0; i < len; i += 1)\n                await listeners[i].apply(this, args);\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Emitter.js.map","export default class Log {\n    static shouldLog() {\n        try {\n            if (typeof window === 'undefined' ||\n                typeof window.localStorage === 'undefined') {\n                return false;\n            }\n            const level = window.localStorage.getItem('loglevel');\n            if (level && level.toLowerCase() === 'trace') {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        catch (e) {\n            /* LocalStorage may not be accessible on browser profiles that restrict 3rd party cookies */\n            return false;\n        }\n    }\n    static setLevel(level) {\n        if (typeof window === 'undefined' ||\n            typeof window.localStorage === 'undefined') {\n            return;\n        }\n        try {\n            window.localStorage.setItem('loglevel', level);\n            Log.proxyMethodsCreated = undefined;\n            Log.createProxyMethods();\n        }\n        catch (e) {\n            /* LocalStorage may not be accessible on browser profiles that restrict 3rd party cookies */\n            return;\n        }\n    }\n    static createProxyMethods() {\n        if (typeof Log.proxyMethodsCreated !== 'undefined') {\n            return;\n        }\n        else {\n            Log.proxyMethodsCreated = true;\n        }\n        const methods = {\n            log: 'debug',\n            trace: 'trace',\n            info: 'info',\n            warn: 'warn',\n            error: 'error',\n        };\n        for (const nativeMethod of Object.keys(methods)) {\n            const nativeMethodExists = typeof console[nativeMethod] !== 'undefined';\n            const methodToMapTo = methods[nativeMethod];\n            const shouldMap = nativeMethodExists &&\n                ((typeof __LOGGING__ !== 'undefined' && __LOGGING__ === true) ||\n                    Log.shouldLog() ||\n                    methodToMapTo === 'error');\n            if (shouldMap) {\n                Log[methodToMapTo] = console[nativeMethod].bind(console);\n            }\n            else {\n                // We want to skip logging, so this is internally an empty function.\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                Log[methodToMapTo] = function () { };\n            }\n        }\n    }\n}\nLog.createProxyMethods();\n//# sourceMappingURL=Log.js.map","/**\n * Build Environment Kind\n */\nexport var EnvironmentKind;\n(function (EnvironmentKind) {\n    EnvironmentKind[\"Development\"] = \"Development\";\n    EnvironmentKind[\"Staging\"] = \"Staging\";\n    EnvironmentKind[\"Production\"] = \"Production\";\n})(EnvironmentKind || (EnvironmentKind = {}));\n//# sourceMappingURL=EnvironmentKind.js.map","import { EnvironmentKind } from '../models/EnvironmentKind';\nimport { WindowEnvironmentKind } from '../models/WindowEnvironmentKind';\nimport { InvalidArgumentError, InvalidArgumentReason, } from '../errors/InvalidArgumentError';\nimport Environment from '../helpers/Environment';\nconst RESOURCE_HTTP_PORT = 4000;\nconst RESOURCE_HTTPS_PORT = 4001;\nconst API_URL_PORT = 3000;\nconst TURBINE_API_URL_PORT = 18080;\nconst TURBINE_ENDPOINTS = ['outcomes', 'on_focus'];\nexport default class SdkEnvironment {\n    /**\n     * Returns development, staging, or production.\n     *\n     * The magic constants used to detect the environment is set or unset when\n     * building the SDK.\n     */\n    static getBuildEnv() {\n        if (typeof __BUILD_TYPE__ === 'undefined') {\n            return EnvironmentKind.Production;\n        }\n        switch (__BUILD_TYPE__) {\n            case 'development':\n                return EnvironmentKind.Development;\n            case 'staging':\n                return EnvironmentKind.Staging;\n            case 'production':\n                return EnvironmentKind.Production;\n            default:\n                return EnvironmentKind.Production;\n        }\n    }\n    /**\n     * Returns development staging, or production.\n     *\n     * Refers to which API environment should be used. These constants are set when building the SDK\n     */\n    static getApiEnv() {\n        if (typeof __API_TYPE__ === 'undefined') {\n            return EnvironmentKind.Production;\n        }\n        switch (__API_TYPE__) {\n            case 'development':\n                return EnvironmentKind.Development;\n            case 'staging':\n                return EnvironmentKind.Staging;\n            case 'production':\n                return EnvironmentKind.Production;\n            default:\n                return EnvironmentKind.Production;\n        }\n    }\n    static getOrigin() {\n        if (Environment.isBrowser()) {\n            return window.location.origin;\n        }\n        else if (typeof self !== 'undefined' &&\n            typeof ServiceWorkerGlobalScope !== 'undefined') {\n            return self.location.origin;\n        }\n        return 'Unknown';\n    }\n    /**\n     * Describes the current frame context.\n     */\n    static getWindowEnv() {\n        if (typeof window === 'undefined') {\n            if (typeof self !== 'undefined' &&\n                typeof ServiceWorkerGlobalScope !== 'undefined') {\n                return WindowEnvironmentKind.ServiceWorker;\n            }\n            else {\n                throw Error('OneSignalSDK: Unsupported JS runtime!');\n            }\n        }\n        return WindowEnvironmentKind.Host;\n    }\n    /**\n     * Returns build-specific prefixes used for operations like registering the\n     * service worker.\n     *\n     * For example, in staging the registered service worker filename is\n     * Staging-OneSignalSDKWorker.js.\n     */\n    static getBuildEnvPrefix(buildEnv = SdkEnvironment.getBuildEnv()) {\n        switch (buildEnv) {\n            case EnvironmentKind.Development:\n                return 'Dev-';\n            case EnvironmentKind.Staging:\n                return 'Staging-';\n            case EnvironmentKind.Production:\n                return '';\n            default:\n                throw new InvalidArgumentError('buildEnv', InvalidArgumentReason.EnumOutOfRange);\n        }\n    }\n    /**\n     * Returns the URL object representing the components of OneSignal's API\n     * endpoint.\n     */\n    static getOneSignalApiUrl(buildEnv = SdkEnvironment.getApiEnv(), action) {\n        const apiOrigin = typeof __API_ORIGIN__ !== 'undefined'\n            ? __API_ORIGIN__ || 'localhost'\n            : 'localhost';\n        switch (buildEnv) {\n            case EnvironmentKind.Development:\n                if (SdkEnvironment.isTurbineEndpoint(action)) {\n                    return new URL(`http://${apiOrigin}:${TURBINE_API_URL_PORT}/api/v1`);\n                }\n                return new URL(`http://${apiOrigin}:${API_URL_PORT}/api/v1`);\n            case EnvironmentKind.Staging:\n                return new URL(`https://${apiOrigin}/api/v1`);\n            case EnvironmentKind.Production:\n                return new URL('https://onesignal.com/api/v1');\n            default:\n                throw new InvalidArgumentError('buildEnv', InvalidArgumentReason.EnumOutOfRange);\n        }\n    }\n    /**\n     * Returns the URL object pointing to our static resources location\n     */\n    static getOneSignalStaticResourcesUrl() {\n        return new URL('https://media.onesignal.com/web-sdk');\n    }\n    static getOneSignalResourceUrlPath(buildEnv = SdkEnvironment.getBuildEnv()) {\n        const buildOrigin = typeof __BUILD_ORIGIN__ !== 'undefined'\n            ? __BUILD_ORIGIN__ || 'localhost'\n            : 'localhost';\n        const isHttps = typeof __IS_HTTPS__ !== 'undefined' ? __IS_HTTPS__ : true;\n        let origin;\n        const protocol = isHttps ? 'https' : 'http';\n        const port = isHttps ? RESOURCE_HTTPS_PORT : RESOURCE_HTTP_PORT;\n        switch (buildEnv) {\n            case EnvironmentKind.Development:\n                origin = __NO_DEV_PORT__\n                    ? `${protocol}://${buildOrigin}`\n                    : `${protocol}://${buildOrigin}:${port}`;\n                break;\n            case EnvironmentKind.Staging:\n                origin = `https://${buildOrigin}`;\n                break;\n            case EnvironmentKind.Production:\n                origin = 'https://onesignal.com';\n                break;\n            default:\n                throw new InvalidArgumentError('buildEnv', InvalidArgumentReason.EnumOutOfRange);\n        }\n        return new URL(`${origin}/sdks/web/v16`);\n    }\n    static getOneSignalCssFileName(buildEnv = SdkEnvironment.getBuildEnv()) {\n        const baseFileName = 'OneSignalSDK.page.styles.css';\n        switch (buildEnv) {\n            case EnvironmentKind.Development:\n                return `Dev-${baseFileName}`;\n            case EnvironmentKind.Staging:\n                return `Staging-${baseFileName}`;\n            case EnvironmentKind.Production:\n                return baseFileName;\n            default:\n                throw new InvalidArgumentError('buildEnv', InvalidArgumentReason.EnumOutOfRange);\n        }\n    }\n    static isTurbineEndpoint(action) {\n        if (!action) {\n            return false;\n        }\n        return TURBINE_ENDPOINTS.some((turbine_endpoint) => action.indexOf(turbine_endpoint) > -1);\n    }\n}\n//# sourceMappingURL=SdkEnvironment.js.map","export var SessionStatus;\n(function (SessionStatus) {\n    SessionStatus[\"Active\"] = \"active\";\n    SessionStatus[\"Inactive\"] = \"inactive\";\n})(SessionStatus || (SessionStatus = {}));\nexport var SessionOrigin;\n(function (SessionOrigin) {\n    SessionOrigin[SessionOrigin[\"UserCreate\"] = 1] = \"UserCreate\";\n    SessionOrigin[SessionOrigin[\"UserNewSession\"] = 2] = \"UserNewSession\";\n    SessionOrigin[SessionOrigin[\"VisibilityVisible\"] = 3] = \"VisibilityVisible\";\n    SessionOrigin[SessionOrigin[\"VisibilityHidden\"] = 4] = \"VisibilityHidden\";\n    SessionOrigin[SessionOrigin[\"BeforeUnload\"] = 5] = \"BeforeUnload\";\n    SessionOrigin[SessionOrigin[\"PageRefresh\"] = 6] = \"PageRefresh\";\n    SessionOrigin[SessionOrigin[\"Focus\"] = 7] = \"Focus\";\n    SessionOrigin[SessionOrigin[\"Blur\"] = 8] = \"Blur\";\n})(SessionOrigin || (SessionOrigin = {}));\nexport const ONESIGNAL_SESSION_KEY = 'oneSignalSession';\nexport function initializeNewSession(options) {\n    const currentTimestamp = new Date().getTime();\n    const notificationId = (options && options.notificationId) || null;\n    return {\n        sessionKey: ONESIGNAL_SESSION_KEY,\n        appId: options.appId,\n        startTimestamp: currentTimestamp,\n        accumulatedDuration: 0,\n        notificationId,\n        status: SessionStatus.Active,\n        lastDeactivatedTimestamp: null,\n        lastActivatedTimestamp: currentTimestamp,\n    };\n}\n//# sourceMappingURL=Session.js.map","export var WindowEnvironmentKind;\n(function (WindowEnvironmentKind) {\n    /**\n     * A service worker environment.\n     */\n    WindowEnvironmentKind[\"ServiceWorker\"] = \"ServiceWorker\";\n    /**\n     * The top-level frame to the \"main\" client's site.\n     */\n    WindowEnvironmentKind[\"Host\"] = \"Host\";\n})(WindowEnvironmentKind || (WindowEnvironmentKind = {}));\n//# sourceMappingURL=WindowEnvironmentKind.js.map","import { ModelName, LegacyModelName } from '../../core/models/SupportedModels';\nimport Utils from '../context/Utils';\nimport Emitter from '../libraries/Emitter';\nimport Log from '../libraries/Log';\nconst DATABASE_VERSION = 6;\nexport default class IndexedDb {\n    constructor(databaseName, dbVersion = DATABASE_VERSION) {\n        this.databaseName = databaseName;\n        this.dbVersion = dbVersion;\n        this.emitter = new Emitter();\n    }\n    open(databaseName) {\n        return new Promise((resolve) => {\n            let request = undefined;\n            try {\n                // Open algorithm: https://www.w3.org/TR/IndexedDB/#h-opening\n                request = indexedDB.open(databaseName, this.dbVersion);\n            }\n            catch (e) {\n                // Errors should be thrown on the request.onerror event, but just in case Firefox throws additional errors\n                // for profile schema too high\n            }\n            if (!request) {\n                return null;\n            }\n            request.onerror = this.onDatabaseOpenError.bind(this);\n            request.onblocked = this.onDatabaseOpenBlocked.bind(this);\n            request.onupgradeneeded = this.onDatabaseUpgradeNeeded.bind(this);\n            request.onsuccess = () => {\n                this.database = request.result;\n                this.database.onerror = this.onDatabaseError;\n                this.database.onversionchange = this.onDatabaseVersionChange;\n                resolve(this.database);\n            };\n        });\n    }\n    async close() {\n        var _a;\n        // TODO:CLEANUP: Seems we have always had two DB connections open\n        // one could be delete to clean this up.\n        const dbLock = await this.ensureDatabaseOpen();\n        dbLock.close();\n        (_a = this.database) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    async ensureDatabaseOpen() {\n        if (!this.openLock) {\n            this.openLock = this.open(this.databaseName);\n        }\n        return await this.openLock;\n    }\n    onDatabaseOpenError(event) {\n        // Prevent the error from bubbling: https://bugzilla.mozilla.org/show_bug.cgi?id=1331103#c3\n        /**\n         * To prevent error reporting tools like Sentry.io from picking up errors that\n         * the site owner can't do anything about and use up their quota, hide database open\n         * errors.\n         */\n        event.preventDefault();\n        const error = event.target.error;\n        if (Utils.contains(error.message, 'The operation failed for reasons unrelated to the database itself and not covered by any other error code') ||\n            Utils.contains(error.message, 'A mutation operation was attempted on a database that did not allow mutations')) {\n            Log.warn(\"OneSignal: IndexedDb web storage is not available on this origin since this profile's IndexedDb schema has been upgraded in a newer version of Firefox. See: https://bugzilla.mozilla.org/show_bug.cgi?id=1236557#c6\");\n        }\n        else {\n            Log.warn('OneSignal: Fatal error opening IndexedDb database:', error);\n        }\n    }\n    /**\n     * Error events bubble. Error events are targeted at the request that generated the error, then the event bubbles to\n     * the transaction, and then finally to the database object. If you want to avoid adding error handlers to every\n     * request, you can instead add a single error handler on the database object.\n     */\n    onDatabaseError(event) {\n        Log.debug('IndexedDb: Generic database error', event.target.errorCode);\n    }\n    /**\n     * Occurs when the upgradeneeded should be triggered because of a version change but the database is still in use\n     * (that is, not closed) somewhere, even after the versionchange event was sent.\n     */\n    onDatabaseOpenBlocked() {\n        Log.debug('IndexedDb: Blocked event');\n    }\n    /**\n     * Occurs when a database structure change (IDBOpenDBRequest.onupgradeneeded event or IDBFactory.deleteDatabase) was\n     * requested elsewhere (most probably in another window/tab on the same computer).\n     *\n     * versionchange Algorithm: https://www.w3.org/TR/IndexedDB/#h-versionchange-transaction-steps\n     *\n     * Ref: https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase/onversionchange\n     */\n    onDatabaseVersionChange() {\n        Log.debug('IndexedDb: versionchange event');\n    }\n    /**\n     * Occurs when a new version of the database needs to be created, or has not been created before, or a new version\n     * of the database was requested to be opened when calling window.indexedDB.open.\n     *\n     * Ref: https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/onupgradeneeded\n     */\n    onDatabaseUpgradeNeeded(event) {\n        Log.debug('IndexedDb: Database is being rebuilt or upgraded (upgradeneeded event).');\n        const target = event.target;\n        const transaction = target.transaction;\n        if (!transaction) {\n            throw Error(\"Can't migrate DB without a transaction\");\n        }\n        const db = target.result;\n        const newDbVersion = event.newVersion || Number.MAX_SAFE_INTEGER;\n        if (newDbVersion >= 1 && event.oldVersion < 1) {\n            db.createObjectStore('Ids', { keyPath: 'type' });\n            db.createObjectStore('NotificationOpened', { keyPath: 'url' });\n            db.createObjectStore('Options', { keyPath: 'key' });\n        }\n        if (newDbVersion >= 2 && event.oldVersion < 2) {\n            db.createObjectStore('Sessions', { keyPath: 'sessionKey' });\n            db.createObjectStore('NotificationReceived', {\n                keyPath: 'notificationId',\n            });\n            // NOTE: 160000.beta4 to 160000 releases modified this line below as\n            // \"{ keyPath: \"notification.id\" }\". This resulted in DB v4 either\n            // having \"notificationId\" or \"notification.id\" depending if the visitor\n            // was new while this version was live.\n            // DB v5 was created to trigger a migration to fix this bug.\n            db.createObjectStore('NotificationClicked', {\n                keyPath: 'notificationId',\n            });\n        }\n        if (newDbVersion >= 3 && event.oldVersion < 3) {\n            db.createObjectStore('SentUniqueOutcome', { keyPath: 'outcomeName' });\n        }\n        if (newDbVersion >= 4 && event.oldVersion < 4) {\n            db.createObjectStore(ModelName.Identity, { keyPath: 'modelId' });\n            db.createObjectStore(ModelName.Properties, { keyPath: 'modelId' });\n            db.createObjectStore(LegacyModelName.PushSubscriptions, {\n                keyPath: 'modelId',\n            });\n            db.createObjectStore(LegacyModelName.SmsSubscriptions, {\n                keyPath: 'modelId',\n            });\n            db.createObjectStore(LegacyModelName.EmailSubscriptions, {\n                keyPath: 'modelId',\n            });\n        }\n        if (newDbVersion >= 5 && event.oldVersion < 5) {\n            this.migrateOutcomesNotificationClickedTableForV5(db, transaction);\n            this.migrateOutcomesNotificationReceivedTableForV5(db, transaction);\n        }\n        if (newDbVersion >= 6 && event.oldVersion < 6) {\n            this.migrateModelNameSubscriptionsTableForV6(db, transaction);\n        }\n        if (newDbVersion >= 7 && event.oldVersion < 7) {\n            // Make sure to update the database version at the top of the file\n        }\n        // Wrap in conditional for tests\n        if (typeof OneSignal !== 'undefined') {\n            OneSignal._isNewVisitor = true;\n        }\n    }\n    // Table rename \"NotificationClicked\" -> \"Outcomes.NotificationClicked\"\n    // and migrate existing records.\n    // Motivation: This is done to correct the keyPath, you can't change it\n    // so a new table must be created.\n    // Background: Table was created with wrong keyPath of \"notification.id\"\n    // for new visitors for versions 160000.beta4 to 160000. Writes were\n    // attempted as \"notificationId\" in released 160000 however they may\n    // have failed if the visitor was new when those releases were in the wild.\n    // However those new on 160000.beta4 to 160000.beta8 will have records\n    // saved as \"notification.id\" that will be converted here.\n    migrateOutcomesNotificationClickedTableForV5(db, transaction) {\n        const newTableName = 'Outcomes.NotificationClicked';\n        db.createObjectStore(newTableName, { keyPath: 'notificationId' });\n        const oldTableName = 'NotificationClicked';\n        const cursor = transaction.objectStore(oldTableName).openCursor();\n        cursor.onsuccess = () => {\n            if (!cursor.result) {\n                // Delete old table once we have gone through all records\n                db.deleteObjectStore(oldTableName);\n                return;\n            }\n            const oldValue = cursor.result.value;\n            transaction.objectStore(newTableName).put({\n                // notification.id was possible from 160000.beta4 to 160000.beta8\n                notificationId: oldValue.notificationId || oldValue.notification.id,\n                appId: oldValue.appId,\n                timestamp: oldValue.timestamp,\n            });\n            cursor.result.continue();\n        };\n        cursor.onerror = () => {\n            // If there is an error getting old records nothing we can do but\n            // move on. Old table will stay around so an attempt could be made\n            // later.\n            console.error('Could not migrate NotificationClicked records', cursor.error);\n        };\n    }\n    // Table rename \"NotificationReceived\" -> \"Outcomes.NotificationReceived\"\n    // and migrate existing records.\n    // Motivation: Consistency of using pre-fix \"Outcomes.\" like we have for\n    // the \"Outcomes.NotificationClicked\" table.\n    migrateOutcomesNotificationReceivedTableForV5(db, transaction) {\n        const newTableName = 'Outcomes.NotificationReceived';\n        db.createObjectStore(newTableName, { keyPath: 'notificationId' });\n        const oldTableName = 'NotificationReceived';\n        const cursor = transaction.objectStore(oldTableName).openCursor();\n        cursor.onsuccess = () => {\n            if (!cursor.result) {\n                // Delete old table once we have gone through all records\n                db.deleteObjectStore(oldTableName);\n                return;\n            }\n            transaction.objectStore(newTableName).put(cursor.result.value);\n            cursor.result.continue();\n        };\n        cursor.onerror = () => {\n            // If there is an error getting old records nothing we can do but\n            // move on. Old table will stay around so an attempt could be made\n            // later.\n            console.error('Could not migrate NotificationReceived records', cursor.error);\n        };\n    }\n    migrateModelNameSubscriptionsTableForV6(db, transaction) {\n        const newTableName = ModelName.Subscriptions;\n        db.createObjectStore(newTableName, { keyPath: 'modelId' });\n        let currentExternalId;\n        const identityCursor = transaction\n            .objectStore(ModelName.Identity)\n            .openCursor();\n        identityCursor.onsuccess = () => {\n            if (identityCursor.result) {\n                currentExternalId = identityCursor.result.value.externalId;\n            }\n        };\n        identityCursor.onerror = () => {\n            console.error('Could not find ' + ModelName.Identity + ' records', identityCursor.error);\n        };\n        Object.values(LegacyModelName).forEach((oldTableName) => {\n            const legacyCursor = transaction.objectStore(oldTableName).openCursor();\n            legacyCursor.onsuccess = () => {\n                if (!legacyCursor.result) {\n                    // Delete old table once we have gone through all records\n                    db.deleteObjectStore(oldTableName);\n                    return;\n                }\n                const oldValue = legacyCursor.result.value;\n                transaction.objectStore(newTableName).put(Object.assign(Object.assign({}, oldValue), { modelName: ModelName.Subscriptions, externalId: currentExternalId }));\n                legacyCursor.result.continue();\n            };\n            legacyCursor.onerror = () => {\n                // If there is an error getting old records nothing we can do but\n                // move on. Old table will stay around so an attempt could be made\n                // later.\n                console.error('Could not migrate ' + oldTableName + ' records', legacyCursor.error);\n            };\n        });\n    }\n    /**\n     * Asynchronously retrieves the value of the key at the table (if key is specified), or the entire table\n     * (if key is not specified).\n     * @param table The table to retrieve the value from.\n     * @param key The key in the table to retrieve the value of. Leave blank to get the entire table.\n     * @returns {Promise} Returns a promise that fulfills when the value(s) are available.\n     */\n    async get(table, key) {\n        const database = await this.ensureDatabaseOpen();\n        if (key) {\n            // Return a table-key value\n            return await new Promise((resolve, reject) => {\n                const request = database\n                    .transaction(table)\n                    .objectStore(table)\n                    .get(key);\n                request.onsuccess = () => {\n                    resolve(request.result);\n                };\n                request.onerror = () => {\n                    reject(request.error);\n                };\n            });\n        }\n        else {\n            // Return all values in table\n            return await new Promise((resolve, reject) => {\n                const jsonResult = {};\n                const cursor = database\n                    .transaction(table)\n                    .objectStore(table)\n                    .openCursor();\n                cursor.onsuccess = (event) => {\n                    const cursorResult = event.target.result;\n                    if (cursorResult) {\n                        const cursorResultKey = cursorResult.key;\n                        jsonResult[cursorResultKey] = cursorResult.value;\n                        cursorResult.continue();\n                    }\n                    else {\n                        resolve(jsonResult);\n                    }\n                };\n                cursor.onerror = () => {\n                    reject(cursor.error);\n                };\n            });\n        }\n    }\n    async getAll(table) {\n        const database = await this.ensureDatabaseOpen();\n        return await new Promise((resolve, reject) => {\n            const cursor = database\n                .transaction(table)\n                .objectStore(table)\n                .openCursor();\n            const result = [];\n            cursor.onsuccess = (event) => {\n                const cursorResult = event.target.result;\n                if (cursorResult) {\n                    result.push(cursorResult.value);\n                    cursorResult.continue();\n                }\n                else {\n                    resolve(result);\n                }\n            };\n            cursor.onerror = () => {\n                reject(cursor.error);\n            };\n        });\n    }\n    /**\n     * Asynchronously puts the specified value in the specified table.\n     */\n    async put(table, key) {\n        await this.ensureDatabaseOpen();\n        return await new Promise((resolve, reject) => {\n            var _a;\n            try {\n                const request = (_a = this.database) === null || _a === void 0 ? void 0 : _a.transaction([table], 'readwrite').objectStore(table).put(key);\n                if (request) {\n                    request.onsuccess = () => {\n                        resolve(key);\n                    };\n                    request.onerror = (e) => {\n                        Log.error('Database PUT Transaction Error:', e);\n                        reject(e);\n                    };\n                }\n            }\n            catch (e) {\n                Log.error('Database PUT Error:', e);\n                reject(e);\n            }\n        });\n    }\n    /**\n     * Asynchronously removes the specified key from the table, or if the key is not specified, removes\n     * all keys in the table.\n     * @returns {Promise} Returns a promise containing a key that is fulfilled when deletion is completed.\n     */\n    async remove(table, key) {\n        const database = await this.ensureDatabaseOpen();\n        return new Promise((resolve, reject) => {\n            try {\n                const store = database\n                    .transaction([table], 'readwrite')\n                    .objectStore(table);\n                // If key is present remove a single key from a table.\n                // Otherwise wipe the table\n                const request = key ? store.delete(key) : store.clear();\n                request.onsuccess = () => {\n                    resolve(key);\n                };\n                request.onerror = (e) => {\n                    Log.error('Database REMOVE Transaction Error:', e);\n                    reject(e);\n                };\n            }\n            catch (e) {\n                Log.error('Database REMOVE Error:', e);\n                reject(e);\n            }\n        });\n    }\n}\n//# sourceMappingURL=IndexedDb.js.map","class AppState {\n    constructor() {\n        // default true\n        this.lastKnownOptedIn = true;\n    }\n}\nexport { AppState };\n//# sourceMappingURL=AppState.js.map","class UserState {\n}\nexport { UserState };\n//# sourceMappingURL=UserState.js.map","export class Subscription {\n    serialize() {\n        return {\n            deviceId: this.deviceId,\n            subscriptionToken: this.subscriptionToken,\n            optedOut: this.optedOut,\n            createdAt: this.createdAt,\n            expirationTime: this.expirationTime,\n        };\n    }\n    static deserialize(bundle) {\n        const subscription = new Subscription();\n        subscription.deviceId = bundle.deviceId;\n        subscription.subscriptionToken = bundle.subscriptionToken;\n        subscription.optedOut = bundle.optedOut;\n        subscription.createdAt = bundle.createdAt;\n        subscription.expirationTime = bundle.expirationTime;\n        return subscription;\n    }\n}\n//# sourceMappingURL=Subscription.js.map","import Emitter from '../libraries/Emitter';\nimport IndexedDb from './IndexedDb';\nimport { AppState } from '../models/AppState';\nimport { UserState } from '../models/UserState';\nimport { Subscription } from '../models/Subscription';\nimport { ONESIGNAL_SESSION_KEY } from '../models/Session';\nimport Log from '../libraries/Log';\nimport { NotificationClickForOpenHandlingSerializer, NotificationClickedForOutcomesSerializer, NotificationReceivedForOutcomesSerializer, } from '../helpers/OSNotificationDatabaseSerializer';\nvar DatabaseEventName;\n(function (DatabaseEventName) {\n    DatabaseEventName[DatabaseEventName[\"SET\"] = 0] = \"SET\";\n})(DatabaseEventName || (DatabaseEventName = {}));\n/**\n * \"NotificationOpened\" = Pending Notification Click events that haven't fired yet\n */\nexport const TABLE_OUTCOMES_NOTIFICATION_CLICKED = 'Outcomes.NotificationClicked';\nexport const TABLE_OUTCOMES_NOTIFICATION_RECEIVED = 'Outcomes.NotificationReceived';\nexport default class Database {\n    constructor(databaseName) {\n        this.databaseName = databaseName;\n        this.emitter = new Emitter();\n        this.database = new IndexedDb(this.databaseName);\n    }\n    static resetInstance() {\n        Database.databaseInstance = null;\n    }\n    static get singletonInstance() {\n        if (!Database.databaseInstanceName) {\n            Database.databaseInstanceName = 'ONE_SIGNAL_SDK_DB';\n        }\n        if (!Database.databaseInstance) {\n            Database.databaseInstance = new Database(Database.databaseInstanceName);\n        }\n        return Database.databaseInstance;\n    }\n    static applyDbResultFilter(table, key, result) {\n        switch (table) {\n            case 'Options':\n                if (result && key)\n                    return result.value;\n                else if (result && !key)\n                    return result;\n                else\n                    return null;\n            case 'Ids':\n                if (result && key)\n                    return result.id;\n                else if (result && !key)\n                    return result;\n                else\n                    return null;\n            default:\n                if (result)\n                    return result;\n                else\n                    return null;\n        }\n    }\n    /**\n     * Asynchronously retrieves the value of the key at the table (if key is specified), or the entire table\n     * (if key is not specified).\n     * @param table The table to retrieve the value from.\n     * @param key The key in the table to retrieve the value of. Leave blank to get the entire table.\n     * @returns {Promise} Returns a promise that fulfills when the value(s) are available.\n     */\n    async get(table, key) {\n        const result = await this.database.get(table, key);\n        const cleanResult = Database.applyDbResultFilter(table, key, result);\n        return cleanResult;\n    }\n    async getAll(table) {\n        const result = await this.database.getAll(table);\n        return result;\n    }\n    /**\n     * Asynchronously puts the specified value in the specified table.\n     * @param table\n     * @param keypath\n     */\n    async put(table, keypath) {\n        await new Promise((resolve) => {\n            this.database.put(table, keypath).then(() => resolve());\n        });\n        this.emitter.emit(Database.EVENTS.SET, keypath);\n    }\n    /**\n     * Asynchronously removes the specified key from the table, or if the key is not specified, removes all\n     * keys in the table.\n     * @returns {Promise} Returns a promise containing a key that is fulfilled when deletion is completed.\n     */\n    remove(table, keypath) {\n        return this.database.remove(table, keypath);\n    }\n    async getAppConfig() {\n        const config = {};\n        const appIdStr = await this.get('Ids', 'appId');\n        config.appId = appIdStr;\n        config.vapidPublicKey = await this.get('Options', 'vapidPublicKey');\n        return config;\n    }\n    async setAppConfig(appConfig) {\n        if (appConfig.appId)\n            await this.put('Ids', { type: 'appId', id: appConfig.appId });\n        if (appConfig.vapidPublicKey)\n            await this.put('Options', {\n                key: 'vapidPublicKey',\n                value: appConfig.vapidPublicKey,\n            });\n    }\n    async getAppState() {\n        const state = new AppState();\n        state.defaultNotificationUrl = await this.get('Options', 'defaultUrl');\n        state.defaultNotificationTitle = await this.get('Options', 'defaultTitle');\n        state.lastKnownPushEnabled = await this.get('Options', 'isPushEnabled');\n        state.pendingNotificationClickEvents =\n            await this.getAllPendingNotificationClickEvents();\n        // lastKnown<PushId|PushToken|OptedIn> are used to track changes to the user's subscription\n        // state. Displayed in the `current` & `previous` fields of the `subscriptionChange` event.\n        state.lastKnownPushId = await this.get('Options', 'lastPushId');\n        state.lastKnownPushToken = await this.get('Options', 'lastPushToken');\n        state.lastKnownOptedIn = await this.get('Options', 'lastOptedIn');\n        return state;\n    }\n    async setIsPushEnabled(enabled) {\n        await this.put('Options', { key: 'isPushEnabled', value: enabled });\n    }\n    async setAppState(appState) {\n        if (appState.defaultNotificationUrl)\n            await this.put('Options', {\n                key: 'defaultUrl',\n                value: appState.defaultNotificationUrl,\n            });\n        if (appState.defaultNotificationTitle ||\n            appState.defaultNotificationTitle === '')\n            await this.put('Options', {\n                key: 'defaultTitle',\n                value: appState.defaultNotificationTitle,\n            });\n        if (appState.lastKnownPushEnabled != null)\n            await this.setIsPushEnabled(appState.lastKnownPushEnabled);\n        if (appState.lastKnownPushId != null)\n            await this.put('Options', {\n                key: 'lastPushId',\n                value: appState.lastKnownPushId,\n            });\n        if (appState.lastKnownPushToken != null)\n            await this.put('Options', {\n                key: 'lastPushToken',\n                value: appState.lastKnownPushToken,\n            });\n        if (appState.lastKnownOptedIn != null)\n            await this.put('Options', {\n                key: 'lastOptedIn',\n                value: appState.lastKnownOptedIn,\n            });\n        if (appState.pendingNotificationClickEvents) {\n            const clickedNotificationUrls = Object.keys(appState.pendingNotificationClickEvents);\n            for (const url of clickedNotificationUrls) {\n                const notificationDetails = appState.pendingNotificationClickEvents[url];\n                if (notificationDetails) {\n                    await this.put('NotificationOpened', {\n                        url: url,\n                        data: notificationDetails.data,\n                        timestamp: notificationDetails.timestamp,\n                    });\n                }\n                else if (notificationDetails === null) {\n                    // If we get an object like:\n                    // { \"http://site.com/page\": null}\n                    // It means we need to remove that entry\n                    await this.remove('NotificationOpened', url);\n                }\n            }\n        }\n    }\n    async getUserState() {\n        const userState = new UserState();\n        userState.previousOneSignalId = '';\n        userState.previousExternalId = '';\n        // previous<OneSignalId|ExternalId> are used to track changes to the user's state.\n        // Displayed in the `current` & `previous` fields of the `userChange` event.\n        userState.previousOneSignalId = await this.get('Options', 'previousOneSignalId');\n        userState.previousExternalId = await this.get('Options', 'previousExternalId');\n        return userState;\n    }\n    async setUserState(userState) {\n        await this.put('Options', {\n            key: 'previousOneSignalId',\n            value: userState.previousOneSignalId,\n        });\n        await this.put('Options', {\n            key: 'previousExternalId',\n            value: userState.previousExternalId,\n        });\n    }\n    async getSubscription() {\n        const subscription = new Subscription();\n        subscription.deviceId = await this.get('Ids', 'userId');\n        subscription.subscriptionToken = await this.get('Ids', 'registrationId');\n        // The preferred database key to store our subscription\n        const dbOptedOut = await this.get('Options', 'optedOut');\n        // For backwards compatibility, we need to read from this if the above is not found\n        const dbNotOptedOut = await this.get('Options', 'subscription');\n        const createdAt = await this.get('Options', 'subscriptionCreatedAt');\n        const expirationTime = await this.get('Options', 'subscriptionExpirationTime');\n        if (dbOptedOut != null) {\n            subscription.optedOut = dbOptedOut;\n        }\n        else {\n            if (dbNotOptedOut == null) {\n                subscription.optedOut = false;\n            }\n            else {\n                subscription.optedOut = !dbNotOptedOut;\n            }\n        }\n        subscription.createdAt = createdAt;\n        subscription.expirationTime = expirationTime;\n        return subscription;\n    }\n    async setDeviceId(deviceId) {\n        await this.put('Ids', { type: 'userId', id: deviceId });\n    }\n    async setSubscription(subscription) {\n        if (subscription.deviceId) {\n            await this.setDeviceId(subscription.deviceId);\n        }\n        if (typeof subscription.subscriptionToken !== 'undefined') {\n            // Allow null subscriptions to be set\n            await this.put('Ids', {\n                type: 'registrationId',\n                id: subscription.subscriptionToken,\n            });\n        }\n        if (subscription.optedOut != null) {\n            // Checks if null or undefined, allows false\n            await this.put('Options', {\n                key: 'optedOut',\n                value: subscription.optedOut,\n            });\n        }\n        if (subscription.createdAt != null) {\n            await this.put('Options', {\n                key: 'subscriptionCreatedAt',\n                value: subscription.createdAt,\n            });\n        }\n        if (subscription.expirationTime != null) {\n            await this.put('Options', {\n                key: 'subscriptionExpirationTime',\n                value: subscription.expirationTime,\n            });\n        }\n        else {\n            await this.remove('Options', 'subscriptionExpirationTime');\n        }\n    }\n    async setJWTToken(token) {\n        await this.put('Ids', { type: 'jwtToken', id: token });\n    }\n    async getJWTToken() {\n        return await this.get('Ids', 'jwtToken');\n    }\n    async setProvideUserConsent(consent) {\n        await this.put('Options', { key: 'userConsent', value: consent });\n    }\n    async getConsentGiven() {\n        return await this.get('Options', 'userConsent');\n    }\n    async getSession(sessionKey) {\n        return await this.get('Sessions', sessionKey);\n    }\n    async setSession(session) {\n        await this.put('Sessions', session);\n    }\n    async removeSession(sessionKey) {\n        await this.remove('Sessions', sessionKey);\n    }\n    async getLastNotificationClickedForOutcomes(appId) {\n        let allClickedNotifications = [];\n        try {\n            allClickedNotifications =\n                await this.getAllNotificationClickedForOutcomes();\n        }\n        catch (e) {\n            Log.error('Database.getLastNotificationClickedForOutcomes', e);\n        }\n        const predicate = (notification) => notification.appId === appId;\n        return allClickedNotifications.find(predicate) || null;\n    }\n    async getAllNotificationClickedForOutcomes() {\n        const notifications = await this.getAll(TABLE_OUTCOMES_NOTIFICATION_CLICKED);\n        return notifications.map((notification) => NotificationClickedForOutcomesSerializer.fromDatabase(notification));\n    }\n    async putNotificationClickedForOutcomes(appId, event) {\n        await this.put(TABLE_OUTCOMES_NOTIFICATION_CLICKED, NotificationClickedForOutcomesSerializer.toDatabase(appId, event));\n    }\n    async putNotificationClickedEventPendingUrlOpening(event) {\n        await this.put('NotificationOpened', NotificationClickForOpenHandlingSerializer.toDatabase(event));\n    }\n    async getAllPendingNotificationClickEvents() {\n        const clickedNotifications = {};\n        const eventsFromDb = await this.getAll('NotificationOpened');\n        for (const eventFromDb of eventsFromDb) {\n            const event = NotificationClickForOpenHandlingSerializer.fromDatabase(eventFromDb);\n            const url = event.result.url;\n            if (!url) {\n                continue;\n            }\n            clickedNotifications[url] = event;\n        }\n        return clickedNotifications;\n    }\n    async removeAllNotificationClickedForOutcomes() {\n        await this.remove(TABLE_OUTCOMES_NOTIFICATION_CLICKED);\n    }\n    async getAllNotificationReceivedForOutcomes() {\n        const notifications = await this.getAll(TABLE_OUTCOMES_NOTIFICATION_RECEIVED);\n        return notifications.map((notification) => NotificationReceivedForOutcomesSerializer.fromDatabase(notification));\n    }\n    async putNotificationReceivedForOutcomes(appId, notification) {\n        await this.put(TABLE_OUTCOMES_NOTIFICATION_RECEIVED, NotificationReceivedForOutcomesSerializer.toDatabase(appId, notification, new Date().getTime()));\n    }\n    async resetSentUniqueOutcomes() {\n        const outcomes = await this.getAll('SentUniqueOutcome');\n        const promises = outcomes.map((o) => {\n            o.sentDuringSession = null;\n            return Database.put('SentUniqueOutcome', o);\n        });\n        await Promise.all(promises);\n    }\n    /**\n     * Asynchronously removes the Ids, NotificationOpened, and Options tables from the database and recreates them\n     * with blank values.\n     * @returns {Promise} Returns a promise that is fulfilled when rebuilding is completed, or rejects with an error.\n     */\n    static async rebuild() {\n        return Promise.all([\n            Database.singletonInstance.remove('Ids'),\n            Database.singletonInstance.remove('NotificationOpened'),\n            Database.singletonInstance.remove('Options'),\n            Database.singletonInstance.remove(TABLE_OUTCOMES_NOTIFICATION_RECEIVED),\n            Database.singletonInstance.remove(TABLE_OUTCOMES_NOTIFICATION_CLICKED),\n            Database.singletonInstance.remove('SentUniqueOutcome'),\n        ]);\n    }\n    // START: Static mappings to instance methods\n    static async on(...args) {\n        // eslint-disable-next-line prefer-spread\n        return Database.singletonInstance.emitter.on.apply(Database.singletonInstance.emitter, args);\n    }\n    static async setIsPushEnabled(enabled) {\n        return Database.singletonInstance.setIsPushEnabled(enabled);\n    }\n    static async getCurrentSession() {\n        return await Database.singletonInstance.getSession(ONESIGNAL_SESSION_KEY);\n    }\n    static async upsertSession(session) {\n        await Database.singletonInstance.setSession(session);\n    }\n    static async cleanupCurrentSession() {\n        await Database.singletonInstance.removeSession(ONESIGNAL_SESSION_KEY);\n    }\n    static async setSubscription(subscription) {\n        return await Database.singletonInstance.setSubscription(subscription);\n    }\n    static async getSubscription() {\n        return await Database.singletonInstance.getSubscription();\n    }\n    static async setJWTToken(token) {\n        return await Database.singletonInstance.setJWTToken(token);\n    }\n    static async getJWTToken() {\n        return await Database.singletonInstance.getJWTToken();\n    }\n    static async setConsentGiven(consent) {\n        return await Database.singletonInstance.setProvideUserConsent(consent);\n    }\n    static async getConsentGiven() {\n        return await Database.singletonInstance.getConsentGiven();\n    }\n    static async setAppState(appState) {\n        return await Database.singletonInstance.setAppState(appState);\n    }\n    static async getAppState() {\n        return await Database.singletonInstance.getAppState();\n    }\n    static async setUserState(userState) {\n        return await Database.singletonInstance.setUserState(userState);\n    }\n    static async getUserState() {\n        return await Database.singletonInstance.getUserState();\n    }\n    static async setAppConfig(appConfig) {\n        return await Database.singletonInstance.setAppConfig(appConfig);\n    }\n    static async getAppConfig() {\n        return await Database.singletonInstance.getAppConfig();\n    }\n    static async getLastNotificationClickedForOutcomes(appId) {\n        return await Database.singletonInstance.getLastNotificationClickedForOutcomes(appId);\n    }\n    static async removeAllNotificationClickedForOutcomes() {\n        return await Database.singletonInstance.removeAllNotificationClickedForOutcomes();\n    }\n    static async getAllNotificationReceivedForOutcomes() {\n        return await Database.singletonInstance.getAllNotificationReceivedForOutcomes();\n    }\n    static async putNotificationReceivedForOutcomes(appId, notification) {\n        return await Database.singletonInstance.putNotificationReceivedForOutcomes(appId, notification);\n    }\n    static async getAllNotificationClickedForOutcomes() {\n        return await Database.singletonInstance.getAllNotificationClickedForOutcomes();\n    }\n    static async putNotificationClickedForOutcomes(appId, event) {\n        return await Database.singletonInstance.putNotificationClickedForOutcomes(appId, event);\n    }\n    static async putNotificationClickedEventPendingUrlOpening(event) {\n        return await Database.singletonInstance.putNotificationClickedEventPendingUrlOpening(event);\n    }\n    static async resetSentUniqueOutcomes() {\n        return await Database.singletonInstance.resetSentUniqueOutcomes();\n    }\n    static async setDeviceId(deviceId) {\n        await Database.singletonInstance.setDeviceId(deviceId);\n    }\n    static async remove(table, keypath) {\n        return await Database.singletonInstance.remove(table, keypath);\n    }\n    static async put(table, keypath) {\n        return await Database.singletonInstance.put(table, keypath);\n    }\n    static async get(table, key) {\n        return await Database.singletonInstance.get(table, key);\n    }\n    static async getAll(table) {\n        return await Database.singletonInstance.getAll(table);\n    }\n}\n/* End Temp Database Proxy */\nDatabase.EVENTS = DatabaseEventName;\n//# sourceMappingURL=Database.js.map","export class NotificationClickForOpenHandlingSerializer {\n    static toDatabase(event) {\n        const notification = event.notification;\n        const result = event.result;\n        return {\n            id: notification.notificationId,\n            heading: notification.title,\n            content: notification.body,\n            data: notification.additionalData,\n            url: result.url,\n            rr: notification.confirmDelivery,\n            icon: notification.icon,\n            image: notification.image,\n            tag: notification.topic,\n            badge: notification.badgeIcon,\n            action: result.actionId,\n            buttons: this.toDatabaseButtons(notification.actionButtons),\n            timestamp: event.timestamp,\n        };\n    }\n    static toDatabaseButtons(actionButtons) {\n        return actionButtons === null || actionButtons === void 0 ? void 0 : actionButtons.map((button) => ({\n            action: button.actionId,\n            title: button.text,\n            icon: button.icon,\n            url: button.launchURL,\n        }));\n    }\n    static fromDatabase(record) {\n        return {\n            result: {\n                actionId: record.action,\n                url: record.url,\n            },\n            notification: {\n                notificationId: record.id,\n                title: record.heading,\n                body: record.content,\n                additionalData: record.data,\n                launchURL: record.url,\n                confirmDelivery: record.rr,\n                icon: record.icon,\n                image: record.image,\n                topic: record.tag,\n                badgeIcon: record.badge,\n                actionButtons: this.toOSNotificationButtons(record.buttons),\n            },\n            timestamp: record.timestamp,\n        };\n    }\n    static toOSNotificationButtons(buttons) {\n        return buttons === null || buttons === void 0 ? void 0 : buttons.map((button) => ({\n            actionId: button.action,\n            text: button.title,\n            icon: button.icon,\n            launchURL: button.url,\n        }));\n    }\n}\nexport class NotificationClickedForOutcomesSerializer {\n    static toDatabase(appId, event) {\n        return {\n            appId: appId,\n            notificationId: event.notification.notificationId,\n            timestamp: event.timestamp,\n        };\n    }\n    static fromDatabase(record) {\n        return {\n            appId: record.appId,\n            notificationId: record.notificationId,\n            timestamp: record.timestamp,\n        };\n    }\n}\nexport class NotificationReceivedForOutcomesSerializer {\n    static toDatabase(appId, notification, timeStamp) {\n        return {\n            appId: appId,\n            notificationId: notification.notificationId,\n            timestamp: timeStamp,\n        };\n    }\n    static fromDatabase(record) {\n        return {\n            appId: record.appId,\n            notificationId: record.notificationId,\n            timestamp: record.timestamp,\n        };\n    }\n}\n//# sourceMappingURL=OSNotificationDatabaseSerializer.js.map","import Environment from '../helpers/Environment';\nimport SdkEnvironment from '../managers/SdkEnvironment';\nimport Utils from '../context/Utils';\nimport Log from '../libraries/Log';\nconst SILENT_EVENTS = [\n    'notifyButtonHovering',\n    'notifyButtonHover',\n    'notifyButtonButtonClick',\n    'notifyButtonLauncherClick',\n    'animatedElementHiding',\n    'animatedElementHidden',\n    'animatedElementShowing',\n    'animatedElementShown',\n    'activeAnimatedElementActivating',\n    'activeAnimatedElementActive',\n    'activeAnimatedElementInactivating',\n    'activeAnimatedElementInactive',\n];\nexport default class OneSignalEvent {\n    /**\n     * Triggers an internal event with optional custom data.\n     * @param eventName The string event name to be emitted.\n     * @param data Any JavaScript variable to be passed with the event.\n     * @param emitter Emitter to emit the event from.\n     */\n    static async trigger(eventName, data, emitter) {\n        if (!Utils.contains(SILENT_EVENTS, eventName)) {\n            const displayData = data;\n            const env = Utils.capitalize(SdkEnvironment.getWindowEnv().toString());\n            if (displayData || displayData === false) {\n                Log.debug(`(${env}) » ${eventName}:`, displayData);\n            }\n            else {\n                Log.debug(`(${env}) » ${eventName}`);\n            }\n        }\n        // Fire internal event to those listening via OneSignal.emitter.on()\n        if (Environment.isBrowser()) {\n            if (eventName === OneSignal.EVENTS.SDK_INITIALIZED) {\n                if (OneSignal.initialized)\n                    return;\n                else\n                    OneSignal.initialized = true;\n            }\n            if (emitter) {\n                await emitter.emit(eventName, data);\n            }\n            else {\n                await OneSignal.emitter.emit(eventName, data);\n            }\n        }\n    }\n}\n//# sourceMappingURL=OneSignalEvent.js.map","import bowser from 'bowser';\nimport Environment from '../helpers/Environment';\nimport { Utils } from '../context/Utils';\nimport Log from '../libraries/Log';\nimport { bowserCastle } from './bowserCastle';\nexport class OneSignalUtils {\n    static getBaseUrl() {\n        return location.origin;\n    }\n    static isLocalhostAllowedAsSecureOrigin() {\n        return (OneSignal.config &&\n            OneSignal.config.userConfig &&\n            OneSignal.config.userConfig.allowLocalhostAsSecureOrigin === true);\n    }\n    static redetectBrowserUserAgent() {\n        // During testing, the browser object may be initialized before the userAgent is injected\n        if (bowserCastle().name === '' && bowserCastle().version === '') {\n            return bowser._detect(navigator.userAgent);\n        }\n        return bowser;\n    }\n    /**\n     * Returns true if the UUID is a string of 36 characters;\n     * @param uuid\n     * @returns {*|boolean}\n     */\n    static isValidUuid(uuid) {\n        return /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/.test(uuid);\n    }\n    static getRandomUuid() {\n        const crypto = typeof window === 'undefined'\n            ? global.crypto\n            : window.crypto || window.msCrypto;\n        const uuidStr = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = crypto.getRandomValues(new Uint8Array(1))[0] % 16 | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n        return uuidStr;\n    }\n    static logMethodCall(methodName, ...args) {\n        return Log.debug(`Called ${methodName}(${args.map(Utils.stringify).join(', ')})`);\n    }\n    static isSafari() {\n        return Environment.isBrowser() && typeof window.safari !== 'undefined';\n    }\n}\nexport default OneSignalUtils;\n//# sourceMappingURL=OneSignalUtils.js.map","import Database from '../services/Database';\nimport OneSignalEvent from '../services/OneSignalEvent';\nexport class PermissionUtils {\n    static async triggerNotificationPermissionChanged(force = false) {\n        if (PermissionUtils.executing) {\n            return;\n        }\n        PermissionUtils.executing = true;\n        try {\n            await PermissionUtils.privateTriggerNotificationPermissionChanged(force);\n        }\n        finally {\n            PermissionUtils.executing = false;\n        }\n    }\n    static async privateTriggerNotificationPermissionChanged(force) {\n        const newPermission = await OneSignal.context.permissionManager.getPermissionStatus();\n        const previousPermission = await Database.get('Options', 'notificationPermission');\n        const triggerEvent = newPermission !== previousPermission || force;\n        if (!triggerEvent) {\n            return;\n        }\n        await Database.put('Options', {\n            key: 'notificationPermission',\n            value: newPermission,\n        });\n        OneSignalEvent.trigger(OneSignal.EVENTS.NOTIFICATION_PERMISSION_CHANGED_AS_STRING, newPermission);\n        this.triggerBooleanPermissionChangeEvent(previousPermission, newPermission, force);\n    }\n    static triggerBooleanPermissionChangeEvent(previousPermission, newPermission, force) {\n        const newPermissionBoolean = newPermission === 'granted';\n        const previousPermissionBoolean = previousPermission === 'granted';\n        const triggerEvent = newPermissionBoolean !== previousPermissionBoolean || force;\n        if (!triggerEvent) {\n            return;\n        }\n        OneSignalEvent.trigger(OneSignal.EVENTS.NOTIFICATION_PERMISSION_CHANGED_AS_BOOLEAN, newPermissionBoolean);\n    }\n}\n// This flag prevents firing the NOTIFICATION_PERMISSION_CHANGED_AS_STRING event twice\n// We use multiple APIs:\n//    1. Notification.requestPermission callback\n//    2. navigator.permissions.query({ name: 'notifications' }`).onchange\n// Some browsers support both, while others only support Notification.requestPermission\nPermissionUtils.executing = false;\n//# sourceMappingURL=PermissionUtils.js.map","import * as bowser from 'bowser';\nexport function bowserCastle() {\n    return {\n        mobile: bowser.mobile,\n        tablet: bowser.tablet,\n        name: bowser.name.toLowerCase(),\n        version: bowser.version,\n    };\n}\n//# sourceMappingURL=bowserCastle.js.map","import SdkEnvironment from '../managers/SdkEnvironment';\nimport { WindowEnvironmentKind } from '../models/WindowEnvironmentKind';\nimport { OneSignalUtils } from './OneSignalUtils';\nimport { PermissionUtils } from './PermissionUtils';\nimport { Utils } from '../context/Utils';\nimport Log from '../libraries/Log';\nimport { bowserCastle } from './bowserCastle';\nexport function isArray(variable) {\n    return Object.prototype.toString.call(variable) === '[object Array]';\n}\nexport function removeDomElement(selector) {\n    const els = document.querySelectorAll(selector);\n    if (els.length > 0) {\n        for (let i = 0; i < els.length; i++) {\n            const parentNode = els[i].parentNode;\n            if (parentNode) {\n                parentNode.removeChild(els[i]);\n            }\n        }\n    }\n}\n/**\n * Helper method for public APIs that waits until OneSignal is initialized, rejects if push notifications are\n * not supported, and wraps these tasks in a Promise.\n */\nexport async function awaitOneSignalInitAndSupported() {\n    return new Promise((resolve) => {\n        if (!OneSignal.initialized)\n            OneSignal.emitter.once(OneSignal.EVENTS.SDK_INITIALIZED, resolve);\n        else\n            resolve();\n    });\n}\nexport async function triggerNotificationPermissionChanged(updateIfIdentical = false) {\n    return PermissionUtils.triggerNotificationPermissionChanged(updateIfIdentical);\n}\n/**\n * JSON.stringify() but converts functions to \"[Function]\" so they aren't lost.\n * Helps when logging method calls.\n */\nexport function stringify(obj) {\n    return Utils.stringify(obj);\n}\nexport function executeCallback(callback, ...args) {\n    if (callback) {\n        // eslint-disable-next-line prefer-spread\n        return callback.apply(null, args);\n    }\n}\nexport function logMethodCall(methodName, ...args) {\n    return OneSignalUtils.logMethodCall(methodName, ...args);\n}\nexport function isValidEmail(email) {\n    return (!!email &&\n        !!email.match(\n        // eslint-disable-next-line no-control-regex\n        /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*$/));\n}\nexport function addDomElement(targetSelectorOrElement, addOrder, elementHtml) {\n    let targetElement;\n    if (typeof targetSelectorOrElement === 'string') {\n        targetElement = document.querySelector(targetSelectorOrElement);\n    }\n    else {\n        targetElement = targetSelectorOrElement;\n    }\n    if (targetElement) {\n        targetElement.insertAdjacentHTML(addOrder, elementHtml);\n        return;\n    }\n    throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n}\nexport function clearDomElementChildren(targetSelectorOrElement) {\n    if (typeof targetSelectorOrElement === 'string') {\n        const element = document.querySelector(targetSelectorOrElement);\n        if (element === null) {\n            throw new Error(`Cannot find element with selector \"${targetSelectorOrElement}\"`);\n        }\n        while (element.firstChild) {\n            element.removeChild(element.firstChild);\n        }\n    }\n    else if (typeof targetSelectorOrElement === 'object') {\n        while (targetSelectorOrElement.firstChild) {\n            targetSelectorOrElement.removeChild(targetSelectorOrElement.firstChild);\n        }\n    }\n    else\n        throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n}\nexport function addCssClass(targetSelectorOrElement, cssClass) {\n    if (typeof targetSelectorOrElement === 'string') {\n        const element = document.querySelector(targetSelectorOrElement);\n        if (element === null) {\n            throw new Error(`Cannot find element with selector \"${targetSelectorOrElement}\"`);\n        }\n        element.classList.add(cssClass);\n    }\n    else if (typeof targetSelectorOrElement === 'object') {\n        targetSelectorOrElement.classList.add(cssClass);\n    }\n    else {\n        throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n    }\n}\nexport function removeCssClass(targetSelectorOrElement, cssClass) {\n    if (typeof targetSelectorOrElement === 'string') {\n        const element = document.querySelector(targetSelectorOrElement);\n        if (element === null) {\n            throw new Error(`Cannot find element with selector \"${targetSelectorOrElement}\"`);\n        }\n        element.classList.remove(cssClass);\n    }\n    else if (typeof targetSelectorOrElement === 'object') {\n        targetSelectorOrElement.classList.remove(cssClass);\n    }\n    else {\n        throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n    }\n}\nexport function hasCssClass(targetSelectorOrElement, cssClass) {\n    if (typeof targetSelectorOrElement === 'string') {\n        const element = document.querySelector(targetSelectorOrElement);\n        if (element === null) {\n            throw new Error(`Cannot find element with selector \"${targetSelectorOrElement}\"`);\n        }\n        return element.classList.contains(cssClass);\n    }\n    else if (typeof targetSelectorOrElement === 'object') {\n        return targetSelectorOrElement.classList.contains(cssClass);\n    }\n    else {\n        throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n    }\n}\n/**\n * Returns a promise for the setTimeout() method.\n * @param durationMs\n * @returns {Promise} Returns a promise that resolves when the timeout is complete.\n */\nexport function delay(durationMs) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, durationMs);\n    });\n}\nexport function nothing() {\n    return Promise.resolve();\n}\nexport function timeoutPromise(promise, milliseconds) {\n    return Utils.timeoutPromise(promise, milliseconds);\n}\n/**\n * Returns true if match is in string; otherwise, returns false.\n */\nexport function contains(indexOfAble, match) {\n    return Utils.contains(indexOfAble, match);\n}\n/**\n * Returns the current object without keys that have undefined values.\n * Regardless of whether the return result is used, the passed-in object is destructively modified.\n * Only affects keys that the object directly contains (i.e. not those inherited via the object's prototype).\n * @param object\n */\nexport function trimUndefined(object) {\n    return Utils.trimUndefined(object);\n}\nexport function getRandomUuid() {\n    return OneSignalUtils.getRandomUuid();\n}\n/**\n * Returns true if the UUID is a string of 36 characters;\n * @param uuid\n * @returns {*|boolean}\n */\nexport function isValidUuid(uuid) {\n    return OneSignalUtils.isValidUuid(uuid);\n}\n/**\n * Capitalizes the first letter of the string.\n * @returns {string} The string with the first letter capitalized.\n */\nexport function capitalize(text) {\n    return Utils.capitalize(text);\n}\n/**\n * Unsubscribe from push notifications without removing the active service worker.\n */\nexport function unsubscribeFromPush() {\n    Log.warn('OneSignal: Unsubscribing from push.');\n    if (SdkEnvironment.getWindowEnv() !== WindowEnvironmentKind.ServiceWorker) {\n        return self.registration.pushManager\n            .getSubscription()\n            .then((subscription) => {\n            if (subscription) {\n                return subscription.unsubscribe();\n            }\n            else\n                throw new Error('Cannot unsubscribe because not subscribed.');\n        });\n    }\n    else {\n        return OneSignal.context.serviceWorkerManager\n            .getRegistration()\n            .then((serviceWorker) => {\n            if (!serviceWorker) {\n                return Promise.resolve();\n            }\n            return serviceWorker;\n        })\n            .then((registration) => registration.pushManager)\n            .then((pushManager) => pushManager.getSubscription())\n            .then((subscription) => {\n            if (subscription) {\n                return subscription.unsubscribe();\n            }\n            else {\n                return Promise.resolve();\n            }\n        });\n    }\n}\nexport function wait(milliseconds) {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n/**\n * Returns the part of the string after the first occurence of the specified search.\n * @param string The entire string.\n * @param search The text returned will be everything *after* search.\n * e.g. substringAfter('A white fox', 'white') => ' fox'\n */\nexport function substringAfter(string, search) {\n    return string.substr(string.indexOf(search) + search.length);\n}\nexport function once(targetSelectorOrElement, event, task, manualDestroy = false) {\n    if (!event) {\n        Log.error('Cannot call on() with no event: ', event);\n    }\n    if (!task) {\n        Log.error('Cannot call on() with no task: ', task);\n    }\n    if (typeof targetSelectorOrElement === 'string') {\n        const els = document.querySelectorAll(targetSelectorOrElement);\n        if (els.length > 0) {\n            for (let i = 0; i < els.length; i++)\n                once(els[i], event, task);\n        }\n    }\n    else if (isArray(targetSelectorOrElement)) {\n        for (let i = 0; i < targetSelectorOrElement.length; i++)\n            once(targetSelectorOrElement[i], event, task);\n    }\n    else if (typeof targetSelectorOrElement === 'object') {\n        const taskWrapper = (function () {\n            const internalTaskFunction = function (e) {\n                const destroyEventListener = function () {\n                    targetSelectorOrElement.removeEventListener(e.type, taskWrapper);\n                };\n                if (!manualDestroy) {\n                    destroyEventListener();\n                }\n                task(e, destroyEventListener);\n            };\n            return internalTaskFunction;\n        })();\n        targetSelectorOrElement.addEventListener(event, taskWrapper);\n    }\n    else\n        throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n}\n/**\n * Returns the number of times the SDK has been loaded into the browser.\n * Expects a browser environment, otherwise this call will fail.\n */\nexport function getSdkLoadCount() {\n    return window.__oneSignalSdkLoadCount || 0;\n}\nexport async function awaitSdkEvent(eventName) {\n    return await new Promise((resolve) => {\n        OneSignal.emitter.once(eventName, (event) => {\n            resolve(event);\n        });\n    });\n}\n/**\n * Increments the counter describing the number of times the SDK has been loaded into the browser.\n * Expects a browser environment, otherwise this call will fail.\n */\nexport function incrementSdkLoadCount() {\n    window.__oneSignalSdkLoadCount = getSdkLoadCount() + 1;\n}\nexport function getPlatformNotificationIcon(notificationIcons) {\n    if (!notificationIcons)\n        return 'default-icon';\n    if (bowserCastle().name == 'safari' && notificationIcons.safari)\n        return notificationIcons.safari;\n    else if (bowserCastle().name === 'firefox' && notificationIcons.firefox)\n        return notificationIcons.firefox;\n    return (notificationIcons.chrome ||\n        notificationIcons.firefox ||\n        notificationIcons.safari ||\n        'default-icon');\n}\nexport function getDomElementOrStub(selector) {\n    const foundElement = document.querySelector(selector);\n    if (!foundElement) {\n        Log.debug(`No instance of ${selector} found. Returning stub.`);\n        return document.createElement('div');\n    }\n    return foundElement;\n}\nexport function deepCopy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n//# sourceMappingURL=utils.js.map","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import Log from '../../shared/libraries/Log';\nimport OneSignal from '../../onesignal/OneSignal';\n// TODO: Renaming ReplayCallsOnOneSignal in a future commit\nexport class ReplayCallsOnOneSignal {\n    static processOneSignalDeferredArray(onesignalDeferred) {\n        for (const item of onesignalDeferred) {\n            try {\n                OneSignal.push(item);\n            }\n            catch (e) {\n                // Catch and log error here so other elements still run\n                Log.error(e);\n            }\n        }\n    }\n}\n//# sourceMappingURL=ReplayCallsOnOneSignal.js.map","/**\n * This is OneSignalSDK.page.es6.js(ES6)\n * Loaded from OneSignalSDK.page.js only if the browser supports push.\n */\nimport { incrementSdkLoadCount, getSdkLoadCount } from '../shared/utils/utils';\nimport { ReplayCallsOnOneSignal } from '../page/utils/ReplayCallsOnOneSignal';\nimport Log from '../shared/libraries/Log';\nfunction onesignalSdkInit() {\n    incrementSdkLoadCount();\n    if (getSdkLoadCount() > 1) {\n        Log.warn(`OneSignal: The web push SDK is included more than once. For optimal performance, please include our ` +\n            `SDK only once on your page.`);\n        Log.debug(`OneSignal: Exiting from SDK initialization to prevent double-initialization errors. ` +\n            `Occurred ${getSdkLoadCount()} times.`);\n        return;\n    }\n    // Load OneSignal's web SDK\n    // TODO: We might be able to remove this down the line but reasons to keep for now:\n    //         * Number of internal SDK code expects window.OneSignal\n    //         * Keep JS console usage easier for debugging / testing.\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    window.OneSignal = require('../onesignal/OneSignal').default;\n    // TODO: Could we do an import as a different name then assign it instead?\n    // We need to use \"require\" here has as import would clobber OneSignalDeferred and we\n    const existingOneSignalDeferred = window.OneSignalDeferred;\n    window.OneSignalDeferred =\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        require('../onesignal/OneSignalDeferred').default;\n    ReplayCallsOnOneSignal.processOneSignalDeferredArray(existingOneSignalDeferred);\n}\nonesignalSdkInit();\n//# sourceMappingURL=pageSdkInit.js.map"],"names":["definition","t","detect","ua","getFirstMatch","regex","match","length","result","iosdevice","toLowerCase","android","test","nexusMobile","nexusTablet","chromeos","silk","sailfish","tizen","webos","windowsphone","windows","mac","linux","edgeVersion","versionIdentifier","tablet","mobile","xbox","name","opera","version","samsungBrowser","coast","yandexbrowser","ucbrowser","maxthon","epiphany","puffin","sleipnir","kMeleon","msedge","msie","chromeBook","chrome","vivaldi","seamonkey","firefox","firefoxos","phantom","slimer","blackberry","touchpad","bada","qupzilla","chromium","safari","googlebot","blink","webkit","gecko","ios","osVersion","s","getWindowsVersion","replace","osversion","osMajorVersion","split","a","c","x","bowser","navigator","userAgent","getVersionPrecision","map","arr","iterator","i","Array","prototype","call","push","compareVersions","versions","precision","Math","max","chunks","delta","join","chunk","reverse","isUnsupportedBrowser","minVersions","strictMode","_bowser","browser","hasOwnProperty","Error","String","browserList","browserItem","check","_detect","module","exports","url","opts","fn","script","timer","prefix","id","count","param","timeout","enc","encodeURIComponent","target","document","getElementsByTagName","head","setTimeout","cleanup","parentNode","removeChild","window","noop","clearTimeout","data","indexOf","createElement","src","insertBefore","ModelName","LegacyModelName","Browser","EnvironmentInfoHelper","static","browserType","this","getBrowser","browserVersion","getBrowserVersion","isBrowserAndSupportsServiceWorkers","supportsServiceWorkers","requiresUserInteraction","getOsVersion","bowserCastle","Chrome","Edge","Opera","Firefox","isMacOSSafari","Safari","Other","Utils","SubscriptionType","SubscriptionChannel","SubscriptionStateKind","DeliveryPlatformKind","FuturePushSubscriptionRecord","constructor","rawPushSubscription","environment","getEnvironmentInfo","token","_getToken","type","getSubscriptionType","notificationTypes","Subscribed","sdk","deviceModel","platform","deviceOs","isNaN","webAuth","w3cAuth","webp256","w3cP256dh","subscription","w3cEndpoint","toString","safariDeviceToken","serialize","enabled","notification_types","device_model","device_os","web_auth","web_p256","OneSignalUtils","FirefoxPush","Environment","SafariPush","SafariLegacyPush","ChromePush","SafariLegacy","SafariVapid","ChromeLike","AliasPair","label","ONESIGNAL_ID","EXTERNAL_ID","OneSignalApiErrorKind","OneSignalApiError","OneSignalError","reason","errorMessage","MissingAppId","RetryLimitReached","super","Object","setPrototypeOf","awaitableTimeout","ms","Promise","resolve","RETRY_BACKOFF","OneSignalApiBase","action","headers","method","requestHasAppId","reject","callHeaders","Headers","append","SdkEnvironment","key","keys","contents","cache","body","JSON","stringify","undefined","executeFetch","retry","response","fetch","status","json","e","Log","startsWith","parts","encodeRFC3986URIComponent","str","charCodeAt","toUpperCase","SdkInitErrorKind","OutcomeAttributionType","SdkInitError","extra","InvalidAppId","AppNotConfiguredForWebPush","WrongSiteUrl","siteUrl","URL","origin","location","MultipleInitialization","MissingSafariWebId","Unknown","RequestService","requestMetadata","requestBody","appId","subscriptionId","subscriptionHeader","assign","jwtHeader","alias","payload","sanitizedAlias","identity","labelToRemove","retainPreviousOwner","retain_previous_owner","OneSignalApiShared","get","deviceType","identifier","post","app_id","device_type","TemporaryWebRecord","then","catch","onesignalId","aliasPair","updateUserPayload","refresh_device_metadata","deltas","session_count","updateUser","sessionDuration","attribution","session_time","outcomePayload","notification_ids","notificationIds","onesignal_id","direct","Direct","sendOutcome","OneSignalApi","WindowEnvironmentKind","jsonpLib","err","success","DelayedPromptType","SERVER_CONFIG_DEFAULTS_SESSION","SERVER_CONFIG_DEFAULTS_PROMPT_DELAYS","pageViews","timeDelay","SERVER_CONFIG_DEFAULTS_SLIDEDOWN","updateMessage","positiveUpdateButton","negativeUpdateButton","CONFIG_DEFAULTS_SLIDEDOWN_OPTIONS","Push","text","actionMessage","acceptButton","cancelButton","autoPrompt","delay","TagUtils","tags","convertedTags","forEach","localTags","remoteTags","finalTags","categoryArray","checked","category","categories","existingPlayerTags","isTagObjectEmpty","categoriesCopy","markAllTagsAsSpecified","existingTagValue","tag","getCheckedStatusForTagValue","tagValue","tagCategories","tagCategoriesCopy","slice","PromptsHelper","prompts","options","getFirstSlidedownPromptOptionsWithType","Category","_a","_b","filter","slidedownType","ConverterHelper","userConfig","_c","isPromptOptionsVersion0","promptOptions","convertConfigToVersionOne","isSlidedownConfigVersion1","slidedown","convertConfigToVersionTwo","acceptButtonText","cancelButtonText","higherLevelAcceptButtonText","higherLevelCancelButtonText","slidedownConfig","_d","promptType","isCategorySlidedownConfiguredVersion1","version0Keys","version1Keys","ConfigIntegrationKind","NotificationClickMatchBehavior","NotificationClickActionBehavior","IntegrationConfigurationKind","ConfigHelper","downloadServerAppConfig","serverConfig","upgradeConfigToVersionTwo","appConfig","getMergedConfig","checkUnsupportedSubdomain","checkRestrictedOrigin","code","isHttp","isSecureContext","hasUnsupportedSubdomain","restrictedOriginEnabled","doesCurrentOriginMatchConfigOrigin","configOrigin","integration","Custom","WordPress","configuration","JavaScript","Dashboard","configIntegrationKind","getConfigIntegrationKind","hasUnsupportedSubdomainForConfigIntegrationKind","mergedUserConfig","getUserConfigForConfigIntegrationKind","siteName","config","siteInfo","features","restrict_origin","enable","safariWebId","safari_web_id","vapidPublicKey","vapid_public_key","onesignalVapidPublicKey","onesignal_vapid_public_key","enableOnSession","enable_on_session","sessionThreshold","session_threshold","enableSessionDuration","web_on_focus_enabled","kind","initialState","style","size","unsubscribeEnabled","explanation","subscribe","unsubscribe","color","button","staticPrompts","customlink","defaultsFromServer","wholeUserConfig","customlinkUser","customlinkDefaults","promptOptionsConfig","promptOption","_e","_f","_g","_h","_j","confirmMessage","limitCategoriesToMaxCount","native","autoRegister","isSlidedownAutoPromptConfigured","fullscreen","title","message","caption","autoAcceptTitle","getCustomLinkConfig","useUserOverride","serviceWorkerOverrideForTypical","path","serviceWorker","serviceWorkerParam","scope","registrationScope","serviceWorkerPath","workerName","getIntegrationCapabilities","getServiceWorkerValues","autoResubscribe","subdomainName","proxyOrigin","getPromptOptionsForDashboardConfiguration","welcomeNotification","disable","notifyButton","bell","displayPredicate","hideWhenSubscribed","OneSignal","User","PushSubscription","optedIn","position","showCredit","offset","bottom","left","right","colors","main","accent","tooltip","unsubscribed","subscribed","blocked","subscribing","unsubscribing","dialog","subscribeButton","unsubscribeButton","persistNotification","notificationBehavior","display","persist","webhooks","cors","corsEnable","notificationDisplayedHook","notificationClickedHook","notificationDismissedHook","notificationClickHandlerMatch","click","notificationClickHandlerAction","allowLocalhostAsSecureOrigin","setupBehavior","outcomes","indirect","influencedTimePeriodMin","notification_attribution","minutes_since_displayed","influencedNotificationsLimit","limit","unattributed","defaultServiceWorkerParam","defaultServiceWorkerPath","injectDefaultsIntoPromptOptions","proxyOriginEnabled","ConfigManager","getAppConfig","WorkerMessengerCommand","ServiceWorkerUtilHelper","getRegistration","registration","availableWorker","active","installing","waiting","inactiveWorker","addEventListener","state","WorkerMessengerReplyBuffer","replies","addListener","command","callback","onceListenerOnly","record","findListenersForMessage","deleteListenerRecords","deleteAllListenerRecords","deleteListenerRecord","targetRecord","listenersForCommand","listenerRecordIndex","splice","WorkerMessenger","context","broadcast","clients","self","matchAll","includeUncontrolled","client","postMessage","unicast","windowClient","InvalidArgumentError","directPostMessageToSW","workerRegistration","serviceWorkerManager","getOneSignalRegistration","getAvailableServiceWorker","listen","onWorkerMessageReceivedFromPage","bind","listenForPage","onPageMessageReceivedFromServiceWorker","event","listenerRecords","listenersToRemove","listenersToCall","listenerRecord","apply","on","once","off","DynamicResourceLoader","getCache","loadSdkStylesheet","pathForEnv","cssFileForEnv","loadIfNew","loadFetchPolyfill","load","domElement","setAttribute","onerror","onload","querySelector","appendChild","PAGE_VIEWS","REQUIRES_PRIVACY_CONSENT","LocalStorage","localStorage","removeItem","value","setItem","getItem","Number","PageViewManager","incrementedPageViewCount","getPageViewCount","pageViewCountStr","sessionStorage","SESSION_STORAGE_KEY_NAME","pageViewCount","parseInt","setPageViewCount","sessionCount","incrementPageViewCount","newCountSingleTab","newCountAcrossTabs","getLocalPageViewCount","setLocalPageViewCount","simulatePageNavigationOrRefresh","isFirstPageView","PermissionManager","STORED_PERMISSION_KEY","getPermissionStatus","permissionManager","getNotificationPermission","getLegacySafariNotificationPermission","getW3cNotificationPermission","pushNotification","permission","Notification","Path","trim","getQueryString","indexOfDelimiter","substring","getWithoutQueryString","QUERY_STRING","getFileName","pop","getFileNameWithQuery","getFullPath","getPathWithoutFileName","newPath","fileNameIndex","lastIndexOf","pathWithoutFileName","ServiceWorkerRegistrationError","statusText","args","shouldLog","console","debug","trace","info","warn","error","doNothing","cancelableTimeout","delayInSeconds","delayInMilliseconds","timerId","clearTimeoutHandle","promise","startedExecution","cancel","OutcomesHelper","outcomeName","isUnique","getAttribution","beforeOutcomeSend","outcomeMethodString","subscriptionManager","isPushNotificationsEnabled","getAttributedNotifsByUniqueOutcomeName","o","reduce","acc","curr","getNotifsToAttributeWithUniqueOutcome","previouslyAttributedArr","shouldSendUnique","outcomeAttribution","notifArr","Unattributed","saveSentUniqueOutcome","newNotificationIds","existingSentOutcome","currentSession","timestamp","startTimestamp","sentDuringSession","wasSentDuringSession","sentOutcome","session","sessionExistsAndWasPreviouslySent","sessionWasClearedButWasPreviouslySent","send","outcomeProps","weight","updateManager","sendOutcomeDirect","Indirect","sendOutcomeInfluenced","sendOutcomeUnattributed","clickedNotifications","notificationId","timeframeMs","maxTimestamp","Date","getTime","allReceivedNotification","allReceivedNotificationSorted","notif","matchingNotificationIds","notificationIdsToDelete","NotSupported","ServiceWorkerActiveState","ServiceWorkerHelper","sdkVersion","appendServiceWorkerParams","workerPath","workerFullPath","href","sessionThresholdInSeconds","sendOnFocusEnabled","sessionOrigin","outcomesConfig","existingSession","clickedNotification","sendOnSessionCallIfNotPlayerCreate","Session","lastDeactivatedTimestamp","currentTimestamp","timeInSecondsBetweenTimestamps","lastActivatedTimestamp","finalizeSession","thresholdInSeconds","timeSinceLastActivatedInSeconds","accumulatedDuration","cancelableFinalize","all","timestamp1","timestamp2","floor","SLIDEDOWN_CSS_CLASSES","allowButton","buttonIndicatorHolder","container","footer","reset","savingStateButton","slideUp","slideDown","closeSlidedown","icon","defaultIcon","loadingContainer","clearfix","TOAST_CLASSES","TOAST_IDS","SLIDEDOWN_CSS_IDS","normalSlidedown","SLIDEDOWN_BUTTON_CLASSES","TAGGING_CONTAINER_CSS_CLASSES","TAGGING_CONTAINER_CSS_IDS","COLORS","TAGGING_CONTAINER_STRINGS","CHANNEL_CAPTURE_CONTAINER_CSS_CLASSES","CHANNEL_CAPTURE_CONTAINER_CSS_IDS","CUSTOM_LINK_CSS_CLASSES","CUSTOM_LINK_CSS_SELECTORS","containerSelector","subscribeSelector","explanationSelector","CustomLinkManager","initialize","loadSdkStyles","isPushEnabled","customlinkContainerElements","injectMarkup","hideCustomLinkContainers","element","innerHTML","mountExplanationNode","mountSubscriptionNode","textContent","setCustomColors","setTextFromPushStatus","handleClick","dynamicResourceLoader","hideElement","optIn","optOut","backgroundColor","containers","querySelectorAll","LimitStore","store","LIMIT","shift","values","DOMParser","parseFromString","documentElement","PermissionPromptType","InvalidStateReason","InvalidStateError","RedundantPermissionMessage","extraInfo","permissionPromptType","PushPermissionAlreadyGranted","UnsupportedEnvironment","ServiceWorkerNotActivated","description","NotSubscribedReason","CoreChangeType","NotSubscribedError","NoDeviceId","NoEmailSet","NoSMSSet","OptedOut","ValidatorUtils","allowNull","allowEmpty","parsedUrl","requireHttps","protocol","bool","array","MainHelper","buttons","Notifications","isValidUrl","icons","getNotificationIcons","convertButtonsToNotificationActionType","convertedButtons","dataPayload","launchURL","actions","showNotification","previousPermission","currentPermission","PermissionUtils","getAppId","errors","exampleNotificationTitleDesktop","exampleNotificationTitleMobile","exampleNotificationMessageDesktop","exampleNotificationMessageMobile","exampleNotificationCaption","promptOptionsStr","getFullscreenPermissionMessageOptions","hash","getPromptOptionsPostHash","legacyParams","legacyParamKey","legacyParamValue","allowedPromptOptions","encoded_value","database","getSubscription","deviceId","safariToken","deviceToken","pushManager","endpoint","OSModelUpdatedArgs","model","property","oldValue","newValue","Subscribable","subscribers","Set","add","delete","msg","ModelStoreAdded","modelId","Add","ModelStoreRemoved","Remove","ModelStoreUpdated","Update","Hydrate","OSModel","modelName","random","externalId","awaitOneSignalIdAvailable","onesignalIdAvailableCallback","setOneSignalId","setExternalId","setApplyToRecordId","applyToRecordId","set","propagate","change","hydrate","encode","encodedModel","decodedModel","isPropertyDelta","isPureObject","obj","isIdentityObject","isCompleteSubscriptionObject","UserDirector","isTemporary","existingIdentity","coreDirector","getIdentityModel","existingProperties","getPropertiesModel","createUserPropertiesModel","createAnonymousUser","user","createOrGetInstance","hasOneSignalId","isCreatingUser","userData","createUserOnServer","hydrateUser","identityOSModel","copyOneSignalIdPromiseFromIdentityModel","properties","language","timezone_id","Intl","DateTimeFormat","resolvedOptions","timeZone","propertiesOSModel","pushSubscription","getPushSubscriptionModel","getAllUserData","createUser","getNewRecordsState","payloadSubcriptionToken","subscriptions","resultSubscription","find","sub","getAllSubscriptionsModels","singletonInstance","initializeUser","addAlias","addAliases","aliases","identityModel","removeAlias","removeAliases","addEmail","email","Email","newSubscription","external_id","createAndHydrateUser","updateModelWithCurrentUserOneSignalId","addSms","sms","SMS","removeEmail","emailSubscriptions","getEmailSubscriptionModels","remove","removeSms","smsNumber","smsSubscriptions","getSmsSubscriptionModels","addTag","addTags","propertiesModel","removeTag","tagKey","removeTags","tagKeys","tagsCopy","parse","getTags","setLanguage","getLanguage","EventListenerBase","PushSubscriptionNamespace","_optedIn","optedOut","_permission","_token","subscriptionToken","pushModel","_id","emitter","EVENTS","SUBSCRIPTION_CHANGED","current","NOTIFICATION_PERMISSION_CHANGED_AS_STRING","_enable","requestPermission","listener","removeEventListener","subscriptionFromDb","isValidBoolean","EventHelper","onInternalSubscriptionSet","checkAndTriggerSubscriptionChanged","NotificationPermission","PushPermissionNotGrantedErrorReason","SubscriptionErrorReason","UserNamespace","_currentUser","labels","Emitter","put","isOptedIn","appState","lastKnownPushEnabled","lastKnownPushId","lastKnownPushToken","lastKnownOptedIn","currentPushToken","getCurrentPushToken","pushSubscriptionId","updateNotificationTypes","previous","triggerSubscriptionChanged","onSubscriptionChanged_showWelcomeNotification","onSubscriptionChanged_sendCategorySlidedownTags","onSubscriptionChanged_evaluateNotifyButtonDisplayPredicate","onSubscriptionChanged_updateCustomLink","isSubscribed","isCategorySlidedownConfigured","tagManager","sendTags","__doNotShowWelcomeNotification","welcome_notification_opts","unopenableWelcomeNotificationUrl","showLocalNotification","__isOneSignalWelcomeNotification","OneSignalEvent","WELCOME_NOTIFICATION_SENT","launcher","show","hide","publicEvent","notification","NOTIFICATION_CLICKED","pageUrl","fireEventWithNotification","selectedEvent","pendingNotificationClickEvents","now","triggerNotificationClick","clickedNotificationUrl","pageClickedNotifications","endsWith","urlWithoutTrailingSlash","userState","previousOneSignalId","previousExternalId","currentOneSignalId","currentExternalId","triggerUserChanged","ServiceWorkerManager","registrationOptions","getActiveState","OneSignalWorker","None","swFileName","activeSwFileName","swActiveStateByFileName","workerScriptPath","scriptURL","pathname","importedSw","URLSearchParams","search","fileName","ThirdParty","getWorkerVersion","workerMessenger","WorkerVersion","workerVersion","shouldInstallWorker","workerState","notificationsEnabled","haveParamsChanged","workerNeedsUpdate","existingSwScope","configuredSwScope","a_old","b_new","serviceWorkerHref","getServiceWorkerHref","establishServiceWorkerChannel","NotificationWillDisplay","preventDefault","NOTIFICATION_WILL_DISPLAY","NotificationClicked","numberOfListeners","NotificationDismissed","NOTIFICATION_DISMISSED","isSafari","AreYouVisible","incomingPayload","focused","hasFocus","AreYouVisibleResponse","installWorker","workerHref","register","fallbackToUserModelBetaWorker","waitUntilActive","BETA_WORKER_NAME","configWithBetaWorkerName","DEPRECATION_ERROR","NotImplementedError","PushPermissionNotGrantedError","Dismissed","Blocked","Default","SubscriptionError","InvalidSafariSetup","RawPushSubscription","getKey","p256dh","auth","p256dh_base64encoded","btoa","fromCharCode","Uint8Array","auth_base64encoded","setFromSafariSubscription","bundle","SubscriptionManager","safariPermissionPromptFailed","subscriptionState","getSubscriptionState","isOptedOut","subscriptionStrategy","subscribeFcmFromWorker","Denied","subscribeSafari","_updatePushSubscriptionModelWithRawSubscription","subscribeFcmFromPage","generatePushSubscriptionModel","serializedSubscriptionRecord","getNotificationTypes","updatePushSubscriptionNotificationTypes","UserOptedOut","NoNativePermission","registerSubscription","_subscriptionState","deserialize","isAlreadyRegisteredWithOneSignal","sendPushDeviceRecordUpdate","sessionManager","upsertSession","REGISTERED","_sessionInitAlreadyRunning","requestNotificationPermission","strategy","subscribeSafariPromptPermission","pushSubscriptionDetails","existingDeviceToken","PERMISSION_PROMPT_DISPLAYED","requestPresubscribeNotificationPermission","forcePermissionChangeEvent","registerFailedSubscription","ServiceWorkerStatus403","ServiceWorkerStatus404","subscribeWithVapidKey","swRegistration","pushPermission","permissionState","userVisibleOnly","getVapidKeyForBrowser","base64String","base64","repeat","rawData","atob","outputArray","base64ToUint8Array","buffer","existingPushSubscription","doPushUnsubscribe","newPushSubscription","isNewSubscription","doPushSubscribe","updateSubscriptionTime","expirationTime","setFromW3cSubscription","updateCreatedAt","createdAt","applicationServerKey","subscriptionOptions","existingSubscription","isSubscriptionExpiring","serviceWorkerRegistration","subscriptionCreatedAt","ONE_YEAR","midpointExpirationTime","getSubscriptionStateFromBrowserContext","pushSubscriptionOSModel","isValidPushSubscription","notificationPermission","Granted","pageViewManager","serviceWorkerManagerConfig","subscriptionManagerConfig","UpdateManager","onSessionSent","sendOnSessionUpdate","subscriptionModel","stack","pushSubscriptionModel","outcomeRequestData","SessionManager","notifySWToUpsertSession","environmentInfo","SessionUpsert","notifySWToDeactivateSession","SessionDeactivate","_getOneSignalAndSubscriptionIds","handleVisibilityChange","visibilityState","setupOnFocusAndOnBlurForSession","focusHandler","isFocusEventSetup","blurHandler","isBlurEventSetup","handleOnBeforeUnload","handleOnFocus","handleOnBlur","setupSessionEventListeners","emit","SESSION_STARTED","isVisibilityChangeEventSetup","isBeforeUnloadEventSetup","returnValue","sendOnSessionUpdateFromPage","TagManager","tagsFromTaggingContainer","localTagsConvertedToApi","convertTagsBooleansToApi","finalTagsObject","getObjectDifference","storeTagValuesToUpdate","storeRemotePlayerTags","getLoadingIndicatorWithColor","TaggingContainer","mount","remoteTagCategories","taggingContainer","generateHtml","toggleCheckedTag","disabled","loadingMessageContainer","innerText","checkedTagCategories","getCheckedTagCategories","firstColumnArr","elem","secondColumnArr","firstColumnContainer","secondColumnContainer","getCategoryLabelElement","tagCategory","labelElement","labelSpan","inputElement","checkmarkSpan","clear","wrappingDiv","selector","getAttribute","isChecked","inputNodeArr","node","ItiScriptURLs","ItiScriptURLHashes","InvalidChannelInputField","DismissPrompt","DismissCountKey","DismissTimeKey","ChannelCaptureContainer","smsInputFieldIsValid","emailInputFieldIsValid","captureContainer","smsInputElement","emailInputElement","Sms","smsLabel","getInputWithValidationElement","emailLabel","SmsAndEmail","getValidationElementWithMessage","wrapperDiv","iconElement","varPayload","getTypeSpecificVariablesForValidationElemGeneration","clear2","validationElement","validationElementId","htmlFor","inputElementId","domElementType","tabIndex","inputClass","wrappingDivId","initializePhoneInputLibrary","onesignalSmsInput","intlTelInput","itiOneSignal","autoPlaceholder","separateDialCode","addSmsInputEventListeners","smsInput","isValidNumber","getElementById","updateValidationOnSmsInputChange","addEmailInputEventListeners","emailInput","emailValue","validateEmailInputWithReturnVal","updateValidationOnEmailInputChange","smsInputWithValidation","smsValidationElement","emailInputWithValidation","emailValidationElement","loadPhoneLibraryScripts","_didLoadITILibrary","script1","script2","link","Main","Stylesheet","rel","integrity","crossOrigin","promise1","promise2","isUsingSms","isUsingSmsInputField","isUsingEmail","isUsingEmailInputField","isEmailInputFieldEmpty","getValueFromEmailInput","isSmsInputFieldEmpty","getValueFromSmsInput","inputNode","getNumber","intlTelInputUtils","numberFormat","E164","classList","showSmsInputError","showEmailInputError","emailString","ChannelCaptureError","InvalidEmail","InvalidSms","InvalidEmailAndSms","Slidedown","savingButton","errorButton","notificationIcons","channelCaptureContainer","isShowingFailureState","create","isInUpdateMode","className","includes","positiveButtonText","negativeButtonText","slidedownElement","dialogProps","messageText","finalIcon","finalIconClass","slidedownBody","bodyMessage","slidedownBodyIcon","slidedownFooter","positiveButton","negativeButton","clearfix2","image","getSlidedownElement","getPlatformNotificationIcon","slidedownContainer","dialogContainer","onSlidedownAllowed","onSlidedownCanceled","eventName","_","triggerSlidedownEvent","ALLOW_CLICK","CANCEL_CLICK","close","CLOSED","destroyListenerFn","animationName","setSaveState","insertAdjacentElement","getTextSpan","getIndicatorHolder","removeSaveState","setFailureState","getRetryIndicator","setFailureStateForInvalidChannelInput","invalidChannelInput","removeFailureState","isSlidedownPushDependent","resetInputErrorStates","indicatorHolder","textHolder","SHOWN","QUEUED","PermissionMessageDismissedError","ConfirmationToast","toastElement","toastText","AlreadySubscribedError","ExistingChannelError","TimedLocalStorage","expirationInMinutes","isLocalStorageSupported","expirationInMilliseconds","parsedRecord","parsedRecordValue","DISMISS_TYPE_COUNT_MAP","PromptDismissCount","NonPush","NonPushPromptsDismissCount","DISMISS_TYPE_TIME_MAP","OneSignalNotificationPrompt","OneSignalNonPushPrompt","DismissHelper","countKey","timeKey","dismissCount","dismissDays","dismissMinutes","SubscriptionHelper","internalRegisterForPush","rawSubscription","isPushSubscriptionType","AnimatedElement","showClass","hideClass","targetTransitionEvents","nestedContentSelector","transitionCheckTimeout","hidden","SHOWING","propertyName","shown","HIDING","HIDDEN","waitUntilShown","waitUntilHidden","content","innerElement","nestedContent","showing","hiding","ActiveAnimatedElement","activeClass","inactiveClass","activeState","activate","inactive","ACTIVATING","ACTIVE","inactivate","INACTIVATING","INACTIVE","waitUntilInactive","activating","inactivating","Badge","increment","badgeNumber","setCustomColorsIfSpecified","decrement","Message","contentType","queued","TIMEOUT","TYPES","TIP","MESSAGE","duration","getTipForState","Bell","STATES","UNSUBSCRIBED","SUBSCRIBED","BLOCKED","enqueue","badge","initialized","dequeue","dequeuedMessage","numMessagesLeft","Button","events","mouse","onHovering","onTap","passive","onHovered","onEndTap","onClick","isEmpty","getLast","HOVERING","HOVERED","pulse","BELL_CLICK","LAUNCHER_CLICK","activateIfInactive","showDialogProcedure","InitHelper","registerForPushNotifications","_ignoreSubscriptionState","Dialog","subscribeButtonId","unsubscribeButtonId","updateBellLauncherDialogBody","subscribeButtonSelectorId","unsubscribeButtonSelectorId","currentSetSubscription","notificationIconHtml","imageUrl","buttonHtml","instructionsHtml","SUBSCRIBE_CLICK","UNSUBSCRIBE_CLICK","Launcher","wasInactive","resize","MissingDomElement","inactivateIfWasInactive","clearIfWasInactive","STATE_CHANGED","UNINITIALIZED","TEXT_SUBS","default","hovering","DEFAULT_SIZE","DEFAULT_POSITION","DEFAULT_THEME","theme","showLauncherAfter","showBadgeAfter","setDefaultTextOptions","prenotify","_launcher","validateOptions","installEventHooks","updateState","destroyEventListener","contains","bellState","setState","to","addDefaultClasses","wasPromptOfTypeDismissed","resizeTo","applyOffsetIfSpecified","patchSafariSvgFilterBug","bellShadow","badgeShadow","dialogShadow","graphic","cssText","dialogButton","pulseRing","foregroundElements","addCssToHead","css","styleDom","createTextNode","isEnabled","newState","silent","lastState","from","_button","_badge","_message","_dialog","sessionInit","postponeSessionInitUntilPageIsInFocus","doInitialize","handleAutoResubscribe","promptsManager","spawnAutoPrompts","SDK_INITIALIZED","registerForPush","wasUserResubscribed","processExpiringSubscriptions","SDK_INITIALIZED_PUBLIC","promises","storeInitialValues","installNativePromptPermissionChangedHook","setWelcomeNotificationFlag","showNotifyButton","showPromptsFromWebConfigEditor","permissions","query","onchange","opPromises","webhookOptions","overridingPageTitle","pageTitle","_initCalled","SlidedownManager","slidedownQueue","isSlidedownShowing","checkIfSlidedownShouldBeShown","permissionDenied","wasDismissed","subscriptionInfo","slidedownPromptOptions","force","smsSubscribed","hasSms","emailSubscribed","hasEmail","bothSubscribed","handleAllowForCategoryType","getValuesFromTaggingContainer","handleAllowForEmailType","isEmailEmpty","updateEmail","handleAllowForSmsType","isSmsEmpty","updateSMS","handleAllowForSmsAndEmailType","showConfirmationToast","confirmationToast","mountAuxiliaryContainers","mountTaggingContainer","mountChannelCaptureContainer","tagsForComponent","existingTags","convertTagsApiToBooleans","handleAllowClick","markPromptDismissedWithType","setIsSlidedownShowing","isShowing","showQueued","createSlidedown","manageNotifyButtonStateWhileSlidedownShows","PromptsManager","isNativePromptShowing","eventHooksInstalled","shouldForceSlidedownOverNative","userPromptOptions","forceSlidedownOverNative","nativePromptOptions","getDelayedPromptOptions","Native","isPageViewConditionMetForNative","isPageViewConditionMet","conditionMetWithNativeOptions","forceSlidedownWithNativeOptions","internalShowDelayedPrompt","isPushSlidedownConfigured","isPageViewConditionMetForSlidedown","timeDelaySeconds","internalShowNativePrompt","internalShowSlidedownPrompt","internalShowCategorySlidedown","internalShowSmsSlidedown","internalShowEmailSlidedown","internalShowSmsAndEmailSlidedown","installEventHooksForSlidedown","slidedownManager","internalShowParticularSlidedown","typeToPullFromConfig","TEST_FINISHED_ALLOW_CLICK_HANDLING","defaultOptions","Context","ProcessOneSignalPushCalls","oneSignalInstance","item","NotificationsNamespace","_permissionNative","permissionNative","setDefaultUrl","defaultNotificationUrl","setDefaultTitle","defaultNotificationTitle","isPushSupported","fireStoredNotificationClicks","ModelCache","_mutexPromise","_mutexLocked","encoded","modelsObject","update","modelNames","allCachedOSModels","cachedOSModels","getAndDecodeModelsWithModelName","getCachedEncodedModels","models","decode","removePromises","ModelRepo","modelCache","modelStores","processModelChange","modelStoreChange","processModelAdded","processModelRemoved","processModelUpdated","processModelHydrated","changeType","supportedModels","ExecutorResultSuccess","retriable","ExecutorResultFailRetriable","ExecutorResultFailNotRetriable","processSubscriptionOperation","operation","subscriptionOSModel","processIdentityOperation","identityCopy","IdentityRequests","_processIdentityResponse","deleteAlias","SubscriptionRequests","createSubscription","_processSubscriptionResponse","deleteSubscription","updateSubscription","UserPropertyRequests","_processUserPropertyResponse","subscriptionConfig","addSubscription","removeSubscription","EXECUTOR_CONFIG_MAP","addIdentity","removeIdentity","updateUserProperties","Operation","operationId","getPayload","jwtTokenAvailable","jwtToken","aggregateDeltas","hasExistingProperty","newValueIsPureObject","shouldMergeExistingAndNew","mergedObject","rawOperation","osModel","getModelByTypeAndId","OperationCache","fromCache","operations","rawOperations","getInstanceWithModelReference","sort","b","ExecutorBase","executorConfig","newRecordsState","_deltaQueue","_operationQueue","onlineStatus","setInterval","cachedOperations","getOperationsFromCache","_processOperationQueue","OPERATIONS_BATCH_PROCESSING_TIME","_onNetworkChange","_executeAdd","_executeUpdate","_executeRemove","_newRecordsState","enqueueDelta","deltaCopy","deltaQueue","operationQueue","_enqueueOperation","_flushDeltas","_flushOperations","_getChangeType","wasPropertyRemoved","wasPropertyUpdated","finalChangeType","consentRequired","requiresUserPrivacyConsent","getConsentRequired","consentGiven","_canExecute","_processOperation","RETRY_COUNT","retries","res","operationInstance","online","canAccess","IdentityExecutor","processDeltaQueue","addAndUpdatedDeltas","removeDeltas","deltaChangeType","getOperationsWithModelName","PropertiesExecutor","SubscriptionExecutor","separateDeltasByModelId","deltasArray","changeSpecificDeltas","separateDeltasByChangeType","deltasByChangeType","deltasByModelId","ExecutorFactory","ExecutorStore","build","forceDeltaQueueProcessingOnAllExecutors","executor","OperationRepo","modelRepo","executorStore","_unsubscribeFromModelRepo","_processDelta","_processDeltaQueue","DELTAS_BATCH_PROCESSING_TIME","setModelRepoAndResubscribe","OSModelStore","modelArray","unsubscribeCallbacks","subscribeUpdateListener","modelCopy","isOSModel","OSModelStoreFactory","cachedModels","modelStore","NewRecordsState","time","records","Map","OP_REPO_POST_CREATE_DELAY","overwrite","timeLastMovedOrCreated","CoreModule","initResolver","initPromise","operationRepo","init","resetModelRepoAndCache","CoreModuleDirector","core","_hydrateSubscriptions","checkAndTriggerUserChanged","getModelStores","getSubscriptionOfTypeWithToken","toSubscriptionChannel","subscriptionModels","fromEntries","entries","emails","smsModels","getAllPushSubscriptionModels","getPushSubscriptionModelByCurrentToken","pushToken","getPushSubscriptionModelByLastKnownToken","modelKeys","concat","LoginManager","onesignalIdBackup","pushSubModel","currentPushSubscriptionId","isIdentified","identifyOrUpsertUser","fetchAndHydrate","resetUserMetaProperties","upsertUser","identifyUser","userDataCopy","stripAliasesOtherThanExternalId","identifyUserResponse","identifyResponseStatus","transferSubscription","fetchUserResponse","getUser","newIdentity","transferResponse","transferResponseStatus","tansferResult","login","logout","removeLegacySubscriptionOptions","polyfillSafariFetch","errorIfInitAlreadyCalled","_initializeConfig","_initializeCoreModuleAndOSNamespaces","pendingInit","_delayedInit","__init","__initAlreadyCalled","onNotificationPermissionChange","_onSubscriptionChanged","onSdkInitialized","checkAndTriggerNotificationPermissionChanged","initSaveState","saveInitOptions","internalInit","readyState","onreadystatechange","consent","requiresConsent","setConsentRequired","processItem","NOTIFICATION_PERMISSION_CHANGED_AS_BOOLEAN","VERSION","_VERSION","sdkEnvironment","_isNewVisitor","timedLocalStorage","_LOGGING","LOGGING","promptPush","promptPushCategories","promptSms","promptEmail","promptSmsAndEmail","outcomeWeight","outcomesHelper","sendUniqueOutcome","newNotifsToAttributeWithOutcome","Debug","setLogLevel","logLevel","OneSignalDeferred","TimeoutError","indexOfAble","object","charAt","defaultValue","uriComponent","milliseconds","timeoutPromise","race","targetLength","padString","osVersionParts","majorVersion","padStart","minorVersion","subject","delimiter","maxParts","skipParts","arrayToSort","predicateForProperty","descending","doItInPlace","internalArrayToSort","propertyA","propertyB","InvalidArgumentReason","argName","Empty","Malformed","EnumOutOfRange","WrongType","argument","defineProperty","configurable","enumerable","writable","captureStackTrace","supportsVapidPush","PushSubscriptionOptions","isBrowser","useSafariLegacyPush","TRADITIONAL_CHINESE_LANGUAGE_TAG","SIMPLIFIED_CHINESE_LANGUAGE_TAG","languageTag","languageSubtags","traditionalSubtag","simpleSubtag","__SRC_STYLESHEETS_MD5_HASH__","_events","that","arguments","listeners","j","removeAllListeners","len","level","proxyMethodsCreated","createProxyMethods","methods","log","nativeMethod","nativeMethodExists","methodToMapTo","shouldMap","EnvironmentKind","TURBINE_ENDPOINTS","Production","ServiceWorkerGlobalScope","buildEnv","getBuildEnv","Development","Staging","getApiEnv","apiOrigin","isTurbineEndpoint","buildOrigin","baseFileName","some","turbine_endpoint","SessionStatus","SessionOrigin","ONESIGNAL_SESSION_KEY","initializeNewSession","sessionKey","Active","IndexedDb","databaseName","dbVersion","open","request","indexedDB","onDatabaseOpenError","onblocked","onDatabaseOpenBlocked","onupgradeneeded","onDatabaseUpgradeNeeded","onsuccess","onDatabaseError","onversionchange","onDatabaseVersionChange","ensureDatabaseOpen","openLock","errorCode","transaction","db","newDbVersion","newVersion","MAX_SAFE_INTEGER","oldVersion","createObjectStore","keyPath","migrateOutcomesNotificationClickedTableForV5","migrateOutcomesNotificationReceivedTableForV5","migrateModelNameSubscriptionsTableForV6","newTableName","oldTableName","cursor","objectStore","openCursor","deleteObjectStore","continue","identityCursor","legacyCursor","table","jsonResult","cursorResult","cursorResultKey","getAll","AppState","UserState","Subscription","DatabaseEventName","NotificationClickForOpenHandlingSerializer","heading","additionalData","rr","confirmDelivery","topic","badgeIcon","actionId","toDatabaseButtons","actionButtons","toOSNotificationButtons","NotificationClickedForOutcomesSerializer","NotificationReceivedForOutcomesSerializer","timeStamp","TABLE_OUTCOMES_NOTIFICATION_CLICKED","TABLE_OUTCOMES_NOTIFICATION_RECEIVED","Database","databaseInstance","databaseInstanceName","applyDbResultFilter","keypath","SET","appIdStr","setAppConfig","getAppState","getAllPendingNotificationClickEvents","setIsPushEnabled","setAppState","clickedNotificationUrls","notificationDetails","getUserState","setUserState","dbOptedOut","dbNotOptedOut","setDeviceId","setSubscription","setJWTToken","getJWTToken","setProvideUserConsent","getConsentGiven","getSession","setSession","removeSession","getLastNotificationClickedForOutcomes","allClickedNotifications","getAllNotificationClickedForOutcomes","fromDatabase","putNotificationClickedForOutcomes","toDatabase","putNotificationClickedEventPendingUrlOpening","eventsFromDb","eventFromDb","removeAllNotificationClickedForOutcomes","getAllNotificationReceivedForOutcomes","putNotificationReceivedForOutcomes","resetSentUniqueOutcomes","SILENT_EVENTS","displayData","env","uuid","crypto","g","msCrypto","r","getRandomValues","methodName","executing","privateTriggerNotificationPermissionChanged","newPermission","triggerBooleanPermissionChangeEvent","newPermissionBoolean","removeDomElement","els","awaitOneSignalInitAndSupported","triggerNotificationPermissionChanged","updateIfIdentical","executeCallback","logMethodCall","isValidEmail","addDomElement","targetSelectorOrElement","addOrder","elementHtml","targetElement","insertAdjacentHTML","clearDomElementChildren","firstChild","addCssClass","cssClass","removeCssClass","hasCssClass","durationMs","nothing","isValidUuid","task","manualDestroy","variable","taskWrapper","getSdkLoadCount","__oneSignalSdkLoadCount","incrementSdkLoadCount","getDomElementOrStub","foundElement","deepCopy","__rest","p","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdD","n","getter","__esModule","d","globalThis","Function","prop","ReplayCallsOnOneSignal","onesignalDeferred","existingOneSignalDeferred","processOneSignalDeferredArray","onesignalSdkInit"],"sourceRoot":""}