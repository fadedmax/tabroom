<%args>
	$chapter_id  => undef
	$district_id => undef
</%args>
<%init>

	my $limit;

	if ($district_id && $district_id eq int($district_id)) {
		$limit .= " and district.id = ".int($district_id);
	}

	if ($chapter_id && $chapter_id eq int($chapter_id)) {
		$limit .= " and chapter.id = ".int($chapter_id);
	}

	my $dbh = Tab::DBI->db_Main();

	unless ($chapter_id) {

		my $find_districts = $dbh->prepare("
			select district.id
			from district $limit
			order by district.code
		");

		my $change_sth = $dbh->prepare("
			update chapter
			set district = ?
			where nsda = ?
		");

		my $undo_sth = $dbh->prepare("
			update chapter
			set district = 0
			where district = ?
		");

		$find_districts->execute();

		while (my ($district_id) = $find_districts->fetchrow_array()) {

			my ($members_array, $junque) = $m->comp(
				"/funclib/nsda/api_client.mas",
				path => "/districts/".$district_id."/schools"
			);

			if ($members_array) {
				$undo_sth->execute($district_id);
				foreach my $member_ref (@{$members_array}) {
					$change_sth->execute($district_id, $member_ref->{'school_id'});
				}
			}
        }
    }

	my $sth = $dbh->prepare("

		select chapter.id, chapter.name, chapter.nsda,
			district.id,
			nsda_strength.value,
			nsda_charter.value,
			nsda_paid.value
		from (chapter, district)

			left join chapter_setting nsda_strength
				on nsda_strength.tag = 'nsda_strength'
				and nsda_strength.chapter = chapter.id

			left join chapter_setting nsda_charter
				on nsda_charter.tag = 'nsda_charter'
				and nsda_charter.chapter = chapter.id

			left join chapter_setting nsda_paid
				on nsda_paid.tag = 'nsda_paid'
				and nsda_paid.chapter = chapter.id

			where 1=1
			and chapter.nsda > 0
			and chapter.district = district.id
			$limit
		order by chapter.district
	");

	my %members;

	my $clean_sth = $dbh->prepare("
		delete from chapter_setting
			where chapter = ?
			and tag in ('nsda_paid', 'nsda_strength', 'nsda_charter')
	");

	my $sync_sth = $dbh->prepare("
		insert into chapter_setting (chapter, tag, value) values (?, ?, ?)
	");

	$sth->execute();

	$m->clear_buffer();

	while (
		my (
			$chapter_id, $chapter_name, $nsda, $district, $strength, $charter, $paid
		) = $sth->fetchrow_array()
	) {

		unless ($members{$district}) {

			my ($array, $junque) = $m->comp(
				"/funclib/nsda/api_client.mas",
				path => "/districts/".$district."/schools"
			);

			%{$members{$district}} = map {$_->{school_id} => $_} @{$array} if $array;
		}

		if ($members{$district}{$nsda}) {

			unless (
				$members{$district}{$nsda}{"strength"} == $strength
				&& $members{$district}{$nsda}{"paid"} == $paid
				&& $members{$district}{$nsda}{"charter"} == $charter
			) {

				unless ($ARGS{"return"}) {
					$m->print("<p>Updating $chapter_name $nsda</p>");
					$m->flush_buffer();
				}

				$clean_sth->execute($chapter_id);

				$sync_sth->execute($chapter_id, "nsda_strength", $members{$district}{$nsda}{"strength"})
					if $members{$district}{$nsda}{"strength"};

				$sync_sth->execute($chapter_id, "nsda_paid", $members{$district}{$nsda}{"paid"})
					if $members{$district}{$nsda}{"paid"};

				$sync_sth->execute($chapter_id, "nsda_charter", $members{$district}{$nsda}{"charter"})
					if $members{$district}{$nsda}{"charter"};
			}
		}
	}

	return "Chapters updated" if $ARGS{"return"};

</%init>
