<%args>
	$jpool_id    => undef
	$round_id    => undef
	$timeslot_id => undef
	$exclude_id  => undef
	$include_id  => undef
	$active      => undef
	$chair       => undef
</%args>
<%init>

	if ($active) {

		if ($timeslot_id) {

			my $timeslot = Tab::Timeslot->retrieve($timeslot_id);
			my $jpool = Tab::JPool->retrieve($jpool_id);
			my $category_id = $jpool->category->id;

			Tab::Judge->set_sql( by_ts => "
				select judge.*
					from judge, ballot, panel, round
				where  judge.category = ?
					and judge.id = ballot.judge
					and ballot.panel = panel.id
					and panel.round = round.id
					and round.timeslot = ?
			");

			my @judges = Tab::Judge->search_by_ts($category_id, $timeslot->id);

			foreach my $judge (@judges) {

				next if $chair == 1 && $judge->chair;
				next if $chair == 2 && $judge->chair < 1;

				next if Tab::JPoolJudge->search(
					judge => $judge->id,
					jpool => $jpool_id
				)->first;

				Tab::JPoolJudge->create({
					judge => $judge->id,
					jpool  => $jpool_id
				});
			}

			my $msg = "All judges judging in ".$timeslot->name." have been added to pool";
			$m->redirect("jpool.mhtml?jpool_id=$jpool_id&category_id=".$ARGS{category_id}."&msg=$msg");

		} else {

			my $round = Tab::Round->retrieve($round_id);
			my $category_id = $round->event->category->id;

			my @judges = $m->comp(
				"/funclib/round_judges.mas",
				round => $round
			);

			foreach my $judge (@judges) {

				next if $chair == 1 && $judge->chair;
				next if $chair == 2 && $judge->chair < 1;

				next if Tab::JPoolJudge->search(
					judge => $judge->id,
					jpool => $jpool_id
				)->first;

				Tab::JPoolJudge->create({
					judge => $judge->id,
					jpool  => $jpool_id
				});
			}

			my $msg = "All judges judging in ".$round->realname." have been added to pool";
			$m->redirect("jpool.mhtml?jpool_id=$jpool_id&category_id=$category_id&msg=$msg");

		}

	} elsif ($exclude_id) {

		my $jpool = Tab::JPool->retrieve($jpool_id);
		my $exclude = Tab::JPool->retrieve($exclude_id);

		$exclude_id = int($exclude_id);

		if ($exclude_id) {

			Tab::JPoolJudge->set_sql(delete_crossover => "
				delete jpool_judge.*
				from jpool_judge, jpool_judge jpool2
				where jpool_judge.jpool = ?
				and jpool2.jpool = ?
				and jpool2.judge = jpool_judge.judge
			");

			Tab::JPoolJudge->sql_delete_crossover->execute($jpool->id, $exclude->id);

		}

		my $msg = "Judges in ".$exclude->name." have been pulled from this pool";
		$m->redirect("jpool.mhtml?jpool_id=".$jpool->id."&category_id=".$jpool->category->id."&msg=$msg");

	} elsif ($include_id) {

		my $jpool = Tab::JPool->retrieve($jpool_id);
		my $include = Tab::JPool->retrieve($include_id);

		$include_id = int($include_id);

		my %already = map {$_->id => 1} $jpool->judges;

		foreach my $judge ($include->judges) {

			next if $already{$judge->id};

			Tab::JPoolJudge->create({
				judge => $judge->id,
				jpool => $jpool->id
			});
		}

		my $msg = "Judges in ".$include->name." have been pulled into this pool";
		$m->redirect("jpool.mhtml?jpool_id=".$jpool->id."&category_id=".$jpool->category->id."&msg=$msg");

	} else {

		if ($timeslot_id) {

			my $timeslot = Tab::Timeslot->retrieve($timeslot_id);
			my $jpool = Tab::JPool->retrieve($jpool_id);

			if ($jpool) {

				my $category = $jpool->category;

				foreach my $round ($timeslot->rounds) {

					next unless $round->event->category == $category;
					my @schools = $m->comp("/funclib/round_schools.mas", round => $round);
					my %use_schools = map{$_->id => 1} @schools;
					my @judges = $category->judges( active => 1 );

					foreach my $judge (@judges) {

						next if $judge->school > 0 && not defined $use_schools{$judge->school->id};
						next if Tab::JPoolJudge->search( judge => $judge->id, jpool => $jpool_id )->first;

						Tab::JPoolJudge->create({
							judge => $judge->id,
							jpool => $jpool_id
						});
					}

				}

				my $msg = "All judges with schools in ".$timeslot->name." have been added to jpool";
				$m->redirect("jpool.mhtml?jpool_id=$jpool_id&category_id=".$category->id."&msg=$msg");

			} else {

				my $err = "No valid judge pool found with send ID ".$jpool_id;
				$m->redirect("jpool.mhtml?category_id=".$ARGS{"category_id"}."&err=$err");
			}

		} else {

			my $round = Tab::Round->retrieve($round_id);
			my $category_id = $round->event->category->id;

			my @schools = $m->comp("/funclib/round_schools.mas", round => $round);

			my %use_schools = map{$_->id => 1} @schools;

			my @judges = $round->event->category->judges( active => 1 );

			foreach my $judge (@judges) {

				next unless $judge > 0;
				next if $judge->school > 0 && not defined $use_schools{$judge->school->id};
				next if Tab::JPoolJudge->search( judge => $judge->id, jpool => $jpool_id )->first;

				eval {
					Tab::JPoolJudge->create({
						judge => $judge->id,
						jpool => $jpool_id
					});
				};
			}

			my $msg = "All judges with schools in ".$round->realname." have been added to jpool";

			$m->redirect("jpool.mhtml?jpool_id=$jpool_id&category_id=$category_id&msg=$msg");
		}

	}

</%init>

