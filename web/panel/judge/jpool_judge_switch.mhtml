<%args>
	$tourn
	$tourn_settings
	$person
	$judge_id => undef
	$jpool_id => undef
	$value    => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($judge_id) {
		$m->print('{ "error": true, "message": "No judge ID sent"}');
		$m->abort();
	}

	unless ($jpool_id) {
		$m->print('{ "error": true, "message": "No judge pool ID sent"}');
		$m->abort();
	}

	my $dbh = Tab::DBI->db_Main();
	my $message;
	my $err;

	if ($value == 1) {

		my $sth = $dbh->prepare("
			insert into jpool_judge (judge, jpool) values (?, ?)
		");

		eval {
			$sth->execute($judge_id, $jpool_id);
		};

		$message = "Judge added to pool";

		if ($@) {
			my $jpool = Tab::JPool->retrieve($jpool_id);
			my $judge = Tab::Judge->retrieve($judge_id);

			if (not defined $jpool) {
				$err = "Judge not added to pool because the pool no longer exists!  Please refresh and try again";
			}

			if (not defined $judge) {
				$err = "Judge not added to judge because the judge no longer exists!  Please refresh and try again";
			}

			unless ($err) {
				$err = "Error hit: $@";
			}

			undef $message;
		}

	} else {

		my $sth = $dbh->prepare("
			delete from jpool_judge where judge = ? and jpool = ?
		");

		$sth->execute($judge_id, $jpool_id);
		$message = "Judge removed from pool";

	}

	if ($err) {
		$m->print('{ "error": true, "message": "'.$err.'"}');
	} else {
		$m->print('{ "error": false, "message": "'.$message.'"}');
	}

	$m->abort();

</%init>
