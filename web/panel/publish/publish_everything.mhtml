<%args>
	$tourn
	$person
	$perms
</%args>
<%init>

	my $scope = substr($ARGS{"scope"}, 0, 3);

	my %events = $m->comp("/funclib/perms/events.mas",
		tourn   => $tourn,
		perms   => $perms,
		limited => 1
	);

	if ($scope eq "cat") {

		my @oe = keys %events;

		my $cat_id = $ARGS{"scope"};
		$cat_id =~ s/[\D_]//g;

		foreach my $event (keys %events) {
			unless ($events{$event}{"category"} eq $cat_id) {
				delete $events{$event};
			}
		}

	} elsif ($ARGS{"scope"} eq "all") {

	} elsif ($ARGS{"scope"}) {

		my $type = $ARGS{"scope"};
		$type =~ s/typ_//g;

		foreach my $event (keys %events) {
			if ($events{$event}{"type"} ne $type) {
				delete $events{$event};
			}
		}
	}

	my $msg;
	my $last_event;

	foreach my $event_id (keys %events) {

		my $event = Tab::Event->retrieve($event_id);
		$msg .= ", " if $msg;
		$msg .= $event->abbr;

		my $levels;

		foreach my $tag ("schematics", "primary", "secondary", "feedback") {
			$levels .= "$tag value is ".$ARGS{$tag};
		}

		$m->comp("/funclib/log.mas",
			type        => 'tabbing',
			event       => $event_id,
			tourn       => $tourn->id,
			person      => $person,
			description => "Publish everything invoked with levels $levels",
		);

		my @rounds = $event->rounds;

		foreach my $round (@rounds) {
			next unless $round->panels;
			$round->published($ARGS{"schematics"});
			$round->post_primary($ARGS{"primary"});
			$round->post_secondary($ARGS{"secondary"});
			$round->post_feedback($ARGS{"feedback"});
			$round->update();
		}

		if (@rounds) {
			$last_event = $event;
		}
	}

	$msg = "Rounds in ".$msg." have been mass published";

	$m->redirect("index.mhtml?event_id=".$last_event."&msg=$msg");

</%init>
