<%args>
	$round_id    => undef
	$entry_id    => undef
	$opponent_id => undef
	$room_id     => undef
	$panel_id    => undef
	$save        => undef
	$keep_sides  => undef
	$flight      => 1
	$mode        => "picksides_constrain"
	$tourn
</%args>
<%init>

	unless ($round_id) {
		$m->print("I don't know what round you mean.  Something is odd.  Hit back and try again");
		$m->abort;
	}

	my $dbh = Tab::DBI->db_Main();

	my $round = Tab::Round->retrieve($round_id);
	my $event = $round->event;

	my %event_settings = $event->all_settings();

	my $side_mode = "auto" if index($mode, "autosides") != -1;
	$side_mode = "pick" if index($mode, "picksides") != -1;

	my $constrain_mode = "no" if index($mode, "noconstrain") != -1;
	$constrain_mode = "yes" if index($mode, "noconstrain") == -1;

	my $flighted = $round->flighted;
	undef $flighted if $flighted <= 1;
	undef $flight if $flighted <= 1;

	my $num_judges = $round->setting('num_judges');
	$num_judges = 1 unless $num_judges;

	my $aff_string = $event_settings{"aff_label"};
	my $neg_string = $event_settings{"neg_label"};
	$aff_string    = "Aff" unless $aff_string;
	$neg_string    = "Neg" unless $neg_string;

	my $panel = Tab::Panel->retrieve($panel_id) if $panel_id;
	my $room = Tab::Room->retrieve($room_id) if $room_id;

	my $type = $round->type;
	my %seeds;

	if ($type eq "prelim") {
		%seeds =
			map {$_->entry->id => $_->value}
			$m->comp( "/funclib/event_entry_settings.mas",
			event => $event,
			tag   => "pairing_seed"
		);
	}

	$room_id = 0 unless $room_id;

	my $bye_me = 0;
	$bye_me = 1 if $opponent_id eq "bye";

	if ($save eq "Save Round" && $entry_id && ($bye_me || $opponent_id)) {

		Tab::Panel->set_sql( highest_letter => "
			select max(cast(panel.letter as signed))
			from panel
			where round = ?
		");

		my $letter = Tab::Panel->sql_highest_letter->select_val($round->id);
		$letter++;

		my $tmp_flight = $flight;
		$tmp_flight = 1 unless $tmp_flight;

		$panel = Tab::Panel->create({
			round  => $round_id,
			bye    => $bye_me,
			flight => $tmp_flight,
			letter => $letter,
			room   => $room_id
		});

		my $aff;
		my $neg;

		if ($bye_me) {

			Tab::Ballot->create({
				panel => $panel->id,
				entry => $entry_id,
				bye   => 1,
				side  => 1,
				audit => 1
			});

		} else {

			my $side;

			if ($side_mode eq "auto") {
				my $rand = rand(1);
				$side = ($rand < 0.5 ) ?  1 : 2;
			} else {
				$side = 1;
			}

			my $did_it;

			TICK:
			foreach my $tick (1 .. $num_judges) {

				my $judge_id = $ARGS{"judge_".$tick};

				$aff = eval {

					my $ballot = {
						panel => $panel->id,
						entry => $entry_id,
						side  => $side,
						bye   => 0,
					};

					if ($judge_id) {
						$ballot->{judge} = $judge_id;
					}
					return Tab::Ballot->create($ballot);

				};

				unless ($aff) {
					$m->comp("/funclib/abort.mas",
						message => "Creation of ballot for the aff failed.  Possible double-attempt. Refresh the swap page before trying again"
					);
				}

				$side++;
				$side = 1 if $side == 3;

				$neg = eval {

					my $ballot = {
						panel => $panel->id,
						entry => $opponent_id,
						side  => $side,
						bye   => 0,
					};

					if ($judge_id) {
						$ballot->{judge} = $judge_id;
					}

					return Tab::Ballot->create($ballot);
				};

				unless ($neg) {
					$m->comp("/funclib/abort.mas",
						message => "Creation of ballot for the neg failed.  Possible double-attempt. Refresh the swap page before trying again"
					);
				}
			}
		}

		$m->redirect("manual_debate.mhtml?round_id=$round_id&panel_id=".$panel->id."&mode=$mode&flight=$flight");

	}

	my $entry = Tab::Entry->retrieve($entry_id) if $entry_id;
	my $opponent = Tab::Entry->retrieve($opponent_id) if $opponent_id;

	Tab::Entry->set_sql( unpaired => "
		select distinct entry.*
		from entry
		where entry.event = ?
		and entry.active = 1
		and not exists (
			select distinct ballot.id
			from ballot,panel
			where panel.round = ?
			and panel.id = ballot.panel
			and ballot.entry = entry.id
		)
		order by entry.code
	");

	my @entry_candidates = Tab::Entry->search_unpaired($event->id, $round->id);

	push @entry_candidates, $entry if $entry;

	my @opponent_candidates;

	if ($entry && ($constrain_mode eq "no")) {

		Tab::Entry->set_sql( opponents => "
			select distinct entry.*
			from entry
			where entry.event = ?
			and entry.active = 1
			and entry.id != ?
			and not exists (
				select distinct ballot.id
				from ballot,panel
				where panel.round = ?
				and panel.id = ballot.panel
				and ballot.entry = entry.id
			)
			order by entry.code
		");

		@opponent_candidates = Tab::Entry->search_opponents(
			$event->id,
			$entry->id,
			$round->id
		);

	} elsif ($entry) {

		my $school_exclude = "and opp.school != entry.school"
			unless $event_settings{"school_debates_self"};

		Tab::Entry->set_sql( opponents => "
			select distinct entry.*
			from entry, entry opp
			where entry.event = ?
			and opp.id = ?
			and entry.active = 1
			and opp.id != entry.id
			$school_exclude
			and not exists (
				select distinct ballot.id
				from ballot,panel
				where panel.round = ?
				and panel.id = ballot.panel
				and ballot.entry = entry.id
			)
			and not exists (
				select distinct ballot.id
				from ballot, ballot b2
				where ballot.panel = b2.panel
				and ballot.id != b2.id
				and ballot.entry = entry.id
				and b2.entry = opp.id
			)
			order by entry.code
		");

		@opponent_candidates = Tab::Entry->search_opponents( $event->id, $entry->id, $round->id);
	}

	push @opponent_candidates, $opponent if $opponent;

	my %wins;
	my %losses;

	unless ($type eq "prelim") {
		%wins = $m->comp(
		"/funclib/entry_wins.mas",
			event => $event,
			round => $round
		);

		%losses = $m->comp(
		"/funclib/entry_losses.mas",
			event => $event,
			round => $round
		);
	}

	my %timeslot_judges  = map {$_->id => 1} $m->comp(
		"/funclib/timeslot_judges.mas",
			timeslot => $round->timeslot,
			flight   => $flight
	);

	my @clean_judges;
	my @clean_rooms;

	if ($entry && $opponent) {

		my @entry_judges = $m->comp(
			"/funclib/clean_to_see.mas",
			entry => $entry
		);

		my @opponent_judges = $m->comp(
			"/funclib/clean_to_see.mas",
			entry => $opponent
		);

		my %opponent_clean =
			map {$_->id => 1}
			@opponent_judges;

		my %in_pool;
		my $no_pool;

		if ($round->jpools) {

			my $sth = $dbh->prepare("
				select
					distinct jpj.judge id
				from jpool_judge jpj, jpool_round jpr
					where jpr.round = ?
					and jpr.jpool = jpj.jpool
			");

			$sth->execute($round->id);
			my $results = $sth->fetchall_hash();
			my %in_pool = map {$_->{id} => 1} @{$results};

		} else {
			$no_pool++;
		}

		foreach my $judge (@entry_judges) {
			push @clean_judges, $judge
				if $opponent_clean{$judge->id}
				&& not defined $timeslot_judges{$judge->id}
				&& ($no_pool || $in_pool{$judge->id})
		}

		@clean_rooms = $m->comp(
			"/funclib/clean_rooms.mas",
				round  => $round,
				flight => $flight
		);
	}

</%init>

	<div class="main">

		<div class="row padvertmore">

			<span class="half nospace">
				<h6 class="redtext semibold marleftmore">
					<% $round->realname %> of <% $event->abbr %>
				</h6>
			</span>

			<span class="half nospace padright rightalign">

				<span class="fifth rightalign">
					<h6 class="nospace semibold bluetext nospace">
						Mode:
					</h6>
				</span>

				<span class="threefifths padtop leftalign">

					<form
						action = "manual_debate.mhtml"
						method = "post"
					>

					<input
						type  = "hidden"
						name  = "round_id"
						value = "<% $round_id %>"
					>

					<input
						type  = "hidden"
						name  = "entry_id"
						value = "<% $entry_id %>"
					>

					<input
						type  = "hidden"
						name  = "flight"
						value = "<% $flight %>"
					>

					<select
						name     = "mode"
						class    = "fixedmost"
						onchange = "this.form.submit();"
					>

						<option
							value="autosides_constrain"
							<% $mode eq "autosides_constrain" ? 'selected="selected"' : "" %>
						>Auto-flip sides, obey constraints</option>

						<option
							value="autosides_noconstrain"
							<% $mode eq "autosides_noconstrain" ? 'selected="selected"' : "" %>
						>Auto-flip sides, no constraints</option>

						<option
							value="picksides_constrain"
							<% $mode eq "picksides_constrain" ? 'selected="selected"' : "" %>
						>Choose sides, obey constraints</option>

						<option
							value="picksides_noconstrain"
							<% $mode eq "picksides_noconstrain" ? 'selected="selected"' : "" %>
						>Choose sides, no constraints</option>

					</select>

					<noscript>
						<input
							type  = "submit"
							value = "Go"
							class = "thin"
						>
					</noscript>

					</form>

				</span>

			</span>

		</div>

		<form
			action = "manual_debate.mhtml"
			method = "post"
		>

		<input
			type="hidden"
			name="round_id"
			value="<% $round_id %>"
		>

		<input
			type  = "hidden"
			name  = "mode"
			value = "<% $mode %>"
		>

		<div class="row martopmore">

			<span class="third">
				<%
					$side_mode eq "auto"
					? "First"
					: $aff_string
				%> entry
			</span>

			<span class="twothird">

				<select
					name             = "entry_id"
					class            = "fixed chosen"
					onchange         = 'this.form.submit()'
					data-placeholder = "Select first entry"
				>

					<option value=""></option>

%					my $done;

%					foreach my $entry (
%						sort {$losses{$a->id} <=> $losses{$b->id}}
%						@entry_candidates
%					) {

						<option
							value = "<% $entry->id %>"
							<% $entry->id == $entry_id ? 'selected="selected"' : "" %>
						><%
							$entry->code." ".$entry->name
						%> - <% $type eq "prelim" ?
							$seeds{$entry->id} : ""
						%><% $type ne "prelim" ?
							$wins{$entry->id} ? $wins{$entry->id}." - ": "0 -"  : ""
						%><% $type ne "prelim" ?
							$losses{$entry->id} ? $losses{$entry->id} : 0  : ""
						%></option>
%						$done++ if $entry->id == $entry_id;
%					}

				</select>

			</span>
		</div>

%		if ($entry) {

			<div class="row">

				<span class="third">
					<% $side_mode eq "auto" ? "Second Entry" : $neg_string %> entry:
				</span>

				<span class="twothird">

					<select
						name             = "opponent_id"
						class            = "fixed chosen"
						onchange         = 'this.form.submit()'
						data-placeholder = "Select opponent"
					>

						<option value=""></option>

<%perl>

						foreach my $entry (
							sort {$losses{$a->id} <=> $losses{$b->id}}
							@opponent_candidates
						) {

							next if $entry->id == $entry_id;

</%perl>
							<option
								value="<% $entry->id %>"
								<% $entry->id == $opponent_id ? 'selected="selected"' : "" %>
							><% $type eq "prelim" ?
								$seeds{$entry->id} : ""
							%><% $type ne "prelim" ?
								$wins{$entry->id} ? $wins{$entry->id}." - ": "0 -"  : ""
							%><% $type ne "prelim" ?
								$losses{$entry->id} ? $losses{$entry->id} : 0  : ""
							%> <% $entry->code." ".$entry->name %> </option>
%						}

						<option
							value="bye"
							<% $bye_me ? 'selected="selected"' : "" %>
						>Give Entry a Bye</option>

					</select>
				</span>
			</div>
%		}

%		if ($opponent && $flighted) {

			<div class="row">

				<span class="third">
					Flight:
				</span>

				<span class="twothird">

%					foreach my $flights (1 .. $flighted) {
						<label for="<% $flights %>">
							<span class="third hover">
								<input
									type     = "radio"
									name     = "flight"
									id       = "<% $flights %>"
									value    = "<% $flights %>"
									onchange = 'this.form.submit()'
									<% $flights == $flight ? 'checked="checked"' : "" %>
								>
									Flight <% $flights %>
							</span>
						</label>
%					}

				</span>
			</div>

%		} elsif ($flighted) {

			<input
				type  = "hidden"
				name  = "flight"
				value = "<% $flight %>"
			>
%		}

%		if ($opponent && $entry && $bye_me < 1) {

%			foreach my $tick (1 .. $num_judges) {

				<div class="row">
					<span class="third">
						<% scalar @clean_judges %> Judge <% $tick %>:
					</span>

					<span class="twothird">

						<select
							name             = "judge_<% $tick %>"
							class            = "fixed chosen"
							data-placeholder = "Select judge"
						>

							<option value="">No Judge</option>
<%perl>
							JUDGE:
							foreach my $judge (@clean_judges) {
</%perl>
								<option
									value="<% $judge->id %>"
									<% $judge->id == $ARGS{judge_id} ? "selected" : "" %>
								> <% $judge->tab_rating %> - <% $judge->first." ".$judge->last %>, <% $judge->school ? $judge->school->short_name : "Hired" %> </option>
%							}

							<option value="">No Judge</option>
						</select>
					</span>
				</div>
<%perl>
			}

			unless (
				$event_settings{"online_mode"}
				&& ($event_settings{"online_mode"} ne "sync")
				&& (not defined $event_settings{"online_hybrid"})
			) {
</%perl>
				<div class="row">
					<span class="third">
						Room:
					</span>
					<span class="twothird">
						<select
							name  = "room_id"
							class = "fixed"
						>

							<option value="">No Room</option>

%							foreach my $clean_room (@clean_rooms) {
								<option value="<% $clean_room->id %>"
									<% $clean_room->id == $room_id ? "selected" : "" %>
								> <% $clean_room->quality %> - <% $clean_room->name %></option>
%							}
							<option value="">No Room</option>
						</select>
					</span>
				</div>
%			}
%		}

%		if ($entry && ($opponent || $bye_me)) {
			<div class="liblrow rightalign marno padvertmore">
				<span class='third centeralign'>
					<input
						type  = "submit"
						name  = "save"
						value = "Save Round"
					>
				</span>
			</div>
%		}

		</form>

%		if ($panel) {

			<div class="marvertmore"></div>

<%perl>
			my $aff;
			my $neg;

			foreach my $entry (
				$m->comp("/funclib/panel_entries.mas", panel => $panel)
			) {

				$aff = $entry if $entry->side == 1;
				$neg = $entry if $entry->side == 2;
			}

			my @judges = $m->comp("/funclib/panel_judges.mas", panel => $panel);

</%perl>
			<h4 class="martopmore">
				Last Debate
			</h4>

%			if ($panel->bye && $aff > 0) {

				<div class="row">
					<span class="sixth">
						BYE for
					</span>

					<span class="third">
						<% $aff->code %>
					</span>
				</div>

%			} else {

				<div class="row padvert">
					<span class="sixth semibold bluetext padmuchmore">
						<% $aff_string %>
					</span>

					<span class="third nospace">
						<% $aff ? $aff->code : "No Aff" %>
					</span>

					<span class="sixth semibold bluetext padmuchmore">
						<% $neg_string %>
					</span>

					<span class="third nospace">
						<% $neg ? $neg->code : "No Neg" %>
					</span>
				</div>

				<div class="row padvert">
<%perl>
					unless (
						$event_settings{"online_mode"}
						&& $event_settings{"online_mode"} ne "sync"
						&& (not defined $event_settings{"online_hybrid"})
					) {
</%perl>
						<span class="sixth semibold bluetext padmuchmore">
							Room
						</span>

						<span class="third nospace">
							<% $panel->room ? $panel->room->name : "" %>
						</span>
%					}

					<span class="sixth semibold bluetext padmuchmore">
						Judge
					</span>

					<span class="third nospace">
%						foreach my $judge (@judges) {
							<% $judge->last,", ".$judge->first %>
%						}
					</span>
				</div>
%			}

			<div class="row martopmuchmore">

				<span class="third centeralign">
					<a
						target = "_blank"
						class  = "bluetext buttonwhite"
						href   = "/panel/report/print_ballots.mhtml?panel_id=<% $panel->id %>"
					>
						Print Ballot
					</a>
				</span>

				<span class="third centeralign">
					<a
						target = "_blank"
						class  = "bluetext buttonwhite"
						href="/panel/schemat/panel_view.mhtml?panel_id=<% $panel->id %>"
					>
						See/Edit Debate
					</a>
				</span>

<%perl>

				my $warn = "You just created this debate.  Are you sure you
				want its life to be so brief, so fleeting, so poignant?";

</%perl>

				<span class="third centeralign">

					<a
						class = "redtext buttonwhite"
						href="panel_rm.mhtml?panel_id=<% $panel->id %>"
						<& "/funclib/confirm.mas", warn => $warn &>
					>
						Delete Debate
					</a>
				</span>

			</div>

%		}

	</div>

	<div class="menu">

		<div class="sidenote">

			<h4>Reports</h4>

			<a
				target = "_blank"
				class  = "blue full"
				href   = "/panel/schemat/show.mhtml?round_id=<% $round_id %>&nowarn=1"
			>
				See Full Pairing
			</a>

			<a
				target = "_blank"
				class  = "blue full"
				href   = "/panel/report/schematic.mhtml?round_id=<% $round_id %>"
			>
				Print Pairing
			</a>

		</div>

	</div>

