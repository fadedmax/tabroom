<%args>
	$person
	$person_settings
	$dbh
	$chapter  => undef
	$err      => undef
	$msg      => undef
	$session  => undef
</%args>
<%init>

	# Update my own stuff
	my $result = $m->comp("/funclib/session_agent.mas",
		session => $session
	);

	if ($result->{updated}) {
		$m->comp("/funclib/session_location.mas",
			session => $session,
			update  => 1
		);
	}

		my $now = DateTime->now();
		my $then = $now->clone();
		$then->subtract( days => 14 );

	if ($person->nsda > 0) {
		if ($session->timestamp < $then) {
			$m->comp("/funclib/nsda/advisor_access.mas", person => $person);
		}
	}

	if ($person_settings->{paradigm}) {

		my $outdated_paradigm_sth = $dbh->prepare('
			select ps.id, cutoff.value_date

			from person_setting ps, person_setting ts,
				tabroom_setting start, tabroom_setting cutoff

			where ps.person = ?
				and ps.tag = "paradigm"
				and ts.person = ps.person
				and ts.tag = "paradigm_timestamp"

				and start.tag = "paradigm_review_start"
				and cutoff.tag = "paradigm_review_cutoff"
				and start.value_date > ts.value_date
		');

		$outdated_paradigm_sth->execute($person->id);
		my ($outdated, $deadline) = $outdated_paradigm_sth->fetch();

		if ($outdated) {
			$m->redirect("/user/judge/paradigm_approve.mhtml");
		}
	}

	my $panels_sth = $dbh->prepare("
		select panel.id
            from panel, round, ballot, event, event_setting, judge, tourn, entry
		where judge.person = ?
            and ballot.judge = judge.id
            and ballot.panel = panel.id
            and ballot.entry = entry.id
            and panel.round = round.id
            and round.event = event_setting.event
            and (
                round.published = 1
                or exists ( select balloted.id
                    from round_setting balloted
                    where balloted.round = round.id
                    and balloted.tag = 'judges_ballots_visible'
                    and balloted.value = 1
                )
            )
            and event_setting.tag   = 'online_ballots'
            and event_setting.value = 1
            and event_setting.event = event.id
            and event.tourn         = tourn.id
            and tourn.end > NOW()

            and (
                exists (
                    select weekend.id
                        from weekend, category_setting cws
                    where weekend.tourn = tourn.id
                        and cws.tag = 'weekend'
                        and cws.value = weekend.id
                        and cws.category = judge.category
                        and weekend.end > NOW()
                ) or not exists (
                    select weekend.id
                    from weekend
                    where weekend.tourn = tourn.id
                )
            )
			group by panel.id
			limit 1
	");

	$panels_sth->execute($person->id);

	if ($panels_sth->fetch()) {
		$m->redirect("/user/judge/panels.mhtml?err=$err&msg=$msg");
	}

	my $entries_sth = $dbh->prepare("
		select entry.id
		from (entry, entry_student, student, event, tourn)
		where student.person = ?
			and student.id          = entry_student.student
			and entry_student.entry = entry.id
			and entry.event         = event.id
			and event.tourn         = tourn.id
			and tourn.end > now()
			and tourn.start > now()
		group by entry.id
		limit 1
	");

	$entries_sth->execute($person->id);

	if ($entries_sth->fetch()) {
		$m->redirect("/user/student/index.mhtml?err=$err&msg=$msg");
	}

	my $chapter_sth = $dbh->prepare("
		select
			chapter.id
		from chapter, permission
			where permission.person = ?
			and permission.chapter = chapter.id
		limit 1
	");

	$chapter_sth->execute($person->id);

	if ($chapter_sth->fetch()) {
		$m->redirect("/user/chapter/index.mhtml?err=$err&msg=$msg");
	}

	my $judge_sth = $dbh->prepare("
		select
			judge.id
		from (judge, category, tourn)
		where judge.person = ?
			and judge.category = category.id
			and category.tourn = tourn.id
			and tourn.end > NOW()
		order by tourn.start
		limit 1;
	");

	$judge_sth->execute($person->id);

	if ($judge_sth->fetch()) {
		$m->redirect("/user/judge/index.mhtml?err=$err&msg=$msg");
	}

	my $students_sth = $dbh->prepare("
		select student.id from student where student.person = ? and student.retired != 1
	");

	$students_sth->execute($person->id);

	if ($students_sth->fetch()) {
		$m->redirect("/user/student/index.mhtml?err=$err&msg=$msg");
	}

	$m->redirect("/user/setup.mhtml?err=$err&msg=$msg");

</%init>
