<%args>
	$person
	$person_settings
	$district_id => undef
</%args>
<%init>

	my $district = Tab::District->retrieve($district_id) if $district_id;

	unless ($district) {
		$m->comp("/funclib/abort.mas",
		message => "No tournament found for district $district_id");
	}

	my $permission = Tab::Permission->search(
		district => $district->id,
		person   => $person->id
	)->first;

	$permission++ if $person->site_admin;
	$permission++ if $person_settings->{"nsda_admin"};

	unless ($permission) {
		$m->print('<div class="main"><h4 class="warning">');
		$m->print("You do not have access to District ".$district_id);
		$m->print('</h4></div>');
		$m->abort();
	}

	my @existing = $m->comp("/funclib/district_tourns.mas", district => $district);

	my $tourn = shift @existing if @existing;

	unless ($tourn) {
		$m->comp("/funclib/abort.mas",
			message => "No district tournament found for $district_id");
	}

	$m->abort() unless $tourn;

	my $tz = $tourn->tz;
	$tz = "America/Chicago" unless $tz;

	my ($keys, $event_ref) = $m->comp("/funclib/nsda/events.mas");
	my %events = %{$event_ref};

	my %categories = ();
	my @types = ("congress", "debate", "speech");

	my $not_helds;

	foreach my $key (keys %events) {
		$categories{$events{$key}{"type"}}{$ARGS{$key}}++;
		$not_helds++ if $ARGS{$key} eq "0" || $ARGS{$key} eq "nope";
	}

	my $method;
	my @weekends = $tourn->weekends();

	foreach my $type (@types) {

		my $code;
		my $category;

		foreach my $weekend (@weekends) {

			next unless $categories{$type}{$weekend->id};

			$code = "IE" if $type eq "speech";
			$code = "DEB" if $type eq "debate";
			$code = "CON" if $type eq "congress";

			$category = Tab::Category->search(
				name  => ucfirst($type)." (".$weekend->name.")",
				abbr  => $code,
				tourn => $tourn->id
			)->first;

			$category = Tab::Category->create({
				name  => ucfirst($type)." (".$weekend->name.")",
				abbr  => $code,
				tourn => $tourn->id
			}) unless $category;

			$categories{$type}{$weekend->id} = $category;
			$category->setting('weekend', $weekend->id);
		}

		if ($code eq "IE") {

			$category->setting("judge_per", "5");

			$m->comp("/funclib/log.mas",
				tourn       => $tourn->id,
				type        => "districts",
				person      => $person->id,
				description => "IE Rules set to ".$method
			);

			$tourn->setting("disclaimer",
				"text",
				'<p>I certify that we, the coach(es), student(s), administrator(s) directly affiliated with our NSDA chapter, have agreed that the student performance(s) reflect(s) our school standards in terms of subject matter, language, and use of gesture.</p>'
			);

		} elsif ($code eq "CON") {

			$category->setting("judge_per", "6");

		} elsif ($code eq "DEB") {

			$category->setting("judge_per", 2);
		}
	}

	$m->comp("/funclib/district_tiebreakers.mas",
		tourn  => $tourn,
		person => $person
	);

	if ($not_helds) {

		undef $not_helds;

		$not_helds = Tab::Category->search(
			name  => "No Qualifier",
			abbr  => "XX",
			tourn => $tourn->id
		)->first;

		$not_helds = Tab::Category->create({
			name  => "No Qualifier",
			abbr  => "XX",
			tourn => $tourn->id
		}) unless $not_helds;

	}

	my %weekend_events;

	foreach my $key (keys %events) {

		my $exists = Tab::Event->search(
			tourn => $tourn->id,
			abbr  => $events{$key}{"code"}
		)->first;

		if ($exists) {
			push @{$weekend_events{$exists->setting("weekend")}}, $exists->abbr;
			next;
		}

		my $category = $categories{$events{$key}{"type"}}{$ARGS{$key}};

		if ($ARGS{$key} eq "0" || $ARGS{$key} eq "nope") {
			$category = $not_helds;
		}

		my $code = $events{$key}{"code"};

		my $type = "debate" if $events{$key}{"type"} eq "debate";
		$type = "speech" if $events{$key}{"type"} eq "speech";
		$type = "congress" 	if $events{$key}{"type"} eq "congress";

		my $event =  Tab::Event->create({
			name     => $events{$key}{"name"},
			abbr     => $events{$key}{"code"},
			type     => $type,
			fee      => 0,
			tourn    => $tourn->id,
			category => $category->id
		});

		$event->setting("weekend", $ARGS{$event->abbr});
		$event->setting("nsda_event_category", $events{$key}{"nsda"});

		push @{$weekend_events{$ARGS{$event->abbr}}}, $event->abbr;

		if (
			$code eq "PF"
			|| $code eq "DUO"
			|| $code eq "CX"
		) {
			$event->setting("min_entry", 2);
			$event->setting("max_entry", 2);
		}

		if ($code eq "PF") {
			$event->setting("no_side_constraints", 1);
		}

		if (
			$code eq "DI"
			|| $code eq "DUO"
			|| $code eq "HI"
		) {
			$event->setting("ask_for_titles", 1);
			$event->setting("ask_for_authors", 1);
			$event->setting("ask_for_isbn", 1);
		}

		if ($code eq "POI") {
			$event->setting("ask_for_bibliography", 1);
		}

		if ($code eq "BQ") {
			#Sets up the BQ ballots
			$event->setting("big_questions", 1);
		}

		if ($code eq "OO" || $code eq "INF") {
			$event->setting("ask_for_titles", 1);
			$event->setting("ask_for_topic", 1);
		}

		if ($type eq "debate") {

			unless ($code eq "BQ") {
				$event->setting('school_cap', 4);
			}

			$event->setting("code_style", "numbers");
			$event->setting("code_start", $events{$key}{"startcode"});

		} elsif ($type eq "speech") {

			$event->setting('school_cap', 4);
			$event->setting('default_panel_size', 6);
			$event->setting('max_panel_size', 7);

			if ($method && $method eq "doubledown") {
				$event->setting('min_panel_size', 4);
			} else {
				$event->setting('min_panel_size', 5);
			}

			$event->setting("code_style", "numbers");
			$event->setting("code_start", $events{$key}{"startcode"});

		} elsif ($code eq "SEN") {

			$event->setting('school_cap', 2);
		}

		if ($type eq "congress") {
			$event->setting("code_style", "names");
			$event->setting("allow_rank_ties", 1);
			$event->setting("parli_ballot", 1);
			$event->setting("max_points", 8);
			$event->setting("min_points", 1);
			$event->setting("truncate_fill", 9);
		}

		$event->setting("nsda_event_category", $events{$key}{"points"});
	}

	my @committee = $district->permissions;

	foreach my $committee (@committee) {

		my $exists = Tab::Permission->search(
			tourn  => $tourn->id,
			person => $committee->person->id,
		)->first;

		next if $exists;

		if ($committee->tag eq "chair") {

			Tab::Permission->create({
				tag    => "owner",
				tourn  => $tourn->id,
				person => $committee->person->id,
			});

			Tab::Permission->create({
				tag    => "contact",
				tourn  => $tourn->id,
				person => $committee->person->id
			});

			my $office = Tab::Person->search( email => 'districtsupport@speechanddebate.org')->first;
			my @followers = ($committee->person->id, $office->id);
			$tourn->setting("backup_followers", "json", \@followers);

		} elsif ($committee->tag eq "member") {

			Tab::Permission->create({
				tag    => "tabber",
				tourn  => $tourn->id,
				person => $committee->person->id
			});
		}
	}

	$m->comp("district_sweepstakes_save.mhtml",
		tourn_id => $tourn->id,
		return   => "yesplz"
	);

	unless (Tab::TournCircuit->search(
			tourn    => $tourn->id,
			circuit  => 83,
			approved => 1
		)
	) {
		Tab::TournCircuit->create({
			tourn    => $tourn->id,
			circuit  => 83,
			approved => 1
		});
	}

	Tab::Site->set_sql( by_districts => "
		select site.*
			from site, tourn_site, tourn_setting ts, tourn
		where site.id = tourn_site.site
			and tourn_site.tourn  = ts.tourn
			and ts.tag = 'nsda_district'
			and ts.value = ?
			and ts.tourn = tourn.id
		order by tourn.start DESC, site.name
	");

	Tab::Site->set_sql( by_admin => "
		select site.*
			from site, tourn_site, permission
		where site.id = tourn_site.site
			and tourn_site.tourn = permission.tourn
			and permission.person = ?
		order by site.name
	");

	Tab::Site->set_sql( by_membership => "
		select site.*, circuit.id as circuit_id, circuit.name as circuitname
			from site, circuit, chapter_circuit, chapter
		where site.circuit = circuit.id
			and circuit.id = chapter_circuit.circuit
			and chapter_circuit.chapter = chapter.id
			and chapter.district = ?
			and circuit.id NOT IN (3, 6, 15, 83, 44)
			and exists (
				select tourn_site.id
				from tourn_site
				where tourn_site.site = site.id
				and tourn_site.timestamp > DATE_SUB(NOW(), INTERVAL 5 YEAR)
			)
		group by site.id
		order by circuit.name, site.name;
	");

	my @sites = Tab::Site->search_by_districts($district->id);
	push @sites, Tab::Site->search_by_admin($person->id);
	push @sites, Tab::Site->search_by_membership($district->id);

	my %seen;
	@sites = grep { ! $seen{$_->id} ++ } @sites;

	my $answers = $tourn->setting("nsda_district_questions");
	$tourn->setting("nsda_district", $district->id);

	if ($answers->{max_step} < 3) {
		$answers->{max_step} = 3;
		$tourn->setting("nsda_district_questions", "json", $answers);
	}

</%init>

	<div class="menu">

		<& "nsda_step.mas",
			step        => 3,
			district_id => $district->id,
			max_step    => $answers->{"max_step"}
		&>

		<div class="sidenote">
			<& "/setup/tourn/deadlines.mas" &>
		</div>

	</div>

	<div class="main">

		<h2>Locations, Dates &amp; Deadlines</h2>

		<form
			action = "district_tournament_save.mhtml"
			method = "post"
		>

		<input
			type  = "hidden"
			name  = "district_id"
			value = "<% $district->id %>"
		>

<%perl>

		foreach my $weekend (@weekends) {

			my $start           = $weekend->start->set_time_zone($tz);
			my $end             = $weekend->end->set_time_zone($tz);
			my $reg_start       = $weekend->reg_start->set_time_zone($tz);
			my $reg_end         = $weekend->reg_end->set_time_zone($tz);
			my $freeze_deadline = $weekend->freeze_deadline->set_time_zone($tz);
			my $drop_deadline   = $weekend->drop_deadline->set_time_zone($tz);
			my $judge_deadline  = $weekend->judge_deadline->set_time_zone($tz);
			my $fine_deadline   = $weekend->fine_deadline->set_time_zone($tz);

</%perl>
			<h5 class="bluetext bluebordertop padtop"><% $weekend->name %></h5>

				<div class="nospace full padleft padbottommore">

				<div class="row marleft marright">
					<span class="fifth">
						Label/name
					</span>

					<span class="threetenths">
						<input
							type  = "text"
							name  = "name_<% $weekend->id %>"
							size  = "24"
							value = "<% $weekend ? $weekend->name : ""%>"
						>
					</span>

					<span class="fifth">
						Events
					</span>

					<span class="threetenths">
%						if ($weekend_events{$weekend->id}) {
%							foreach my $event (@{$weekend_events{$weekend->id}}) {
								<% $event %>
%							}
%						}
					</span>
				</div>

%				if ($answers->{"nsda_tabbing_software"} eq "tabroom") {

					<div class="row marleft marright">
						<span class="fifth">
							Host Site
						</span>

						<span class="threetenths">
							<select
								name  = "site_<% $weekend->id %>"
								class = "fixedmed"
							>
								<option id=""></option>
%								foreach my $site (@sites) {
									<option
										value="<% $site->id %>"
										<% $site == $weekend->site ? "selected" : "" %>
									><% $site->name %></option>
%								}
							</select>
						</span>

						<span class="fifth">
							Or, New Site
						</span>

						<span class="threetenths">
							<input
								type        = "text"
								name        = "site_name_<% $weekend->id %>"
								size        = "24"
								placeholder = "School/site name"
							>
						</span>
					</div>
%				}

				<div class="row marleft marright">

					<span class="fifth">
						City/Location
					</span>

					<span class="threetenths">
						<input
						type  = "text"
							name  = "city_<% $weekend->id %>"
							size  = "24"
							value = "<% $weekend
								? $weekend->city
								: $answers->{"nsda_online_tournament"} eq "online" ? "Online" : "" %>"
						>
					</span>

					<span class="fifth">
						State
					</span>

%					my $weekend_state = $weekend->state if $weekend;
%					$weekend_state = $person->state unless $weekend_state;

					<span class="threetenths">

						<select
							name  = "state_<% $weekend->id %>"
							class = "fixedmed"
						>

							<&
								"/funclib/state_select.mas",
								state => $weekend_state,
							&>

						</select>

					</span>

				</div>

				<h6 class="semibold">
					Dates &amp; Deadlines
				</h6>

				<span class="pagehalf">

				<& "/funclib/datepicker.mas", id => "start_$weekend->id" &>

					<div class="row">

						<span class="half">
							Weekend start
						</span>

						<span class="quarter">
							<input
								type  = "text"
								id    = "start_<% $weekend->id %>"
								name  = "start_<% $weekend->id %>"
								size  = "8"
								value = "<% Tab::pickerdate($start) %>"
							>
						</span>
						<span class="quarter">
							<& "/funclib/timepicker.mas",
								id   => "starttime_".$weekend->id,
								name => "starttime_".$weekend->id,
								size => 6,
								time => $start
							&>
						</span>

					</div>

					<& "/funclib/datepicker.mas", id => "end_$weekend->id" &>

					<div class="row">

						<span class="half">
							Weekend end
						</span>

						<span class="quarter">
							<input
								type  = "text"
								id    = "end_<% $weekend->id %>"
								name  = "end_<% $weekend->id %>"
								size  = "8"
								value = "<% Tab::pickerdate($end) %>"
							>
						</span>
						<span class="quarter">
							<& "/funclib/timepicker.mas",
								id   => "endtime_".$weekend,
								name => "endtime_".$weekend,
								size => 6,
								time => $end
							&>
						</span>

					</div>

					<&
						"/funclib/datepicker.mas",
						id  => "reg_start_$weekend",
						max => $start
					&>

					<div class="row">

						<span class="half">
							Registration opens
						</span>

						<span class="quarter">
							<input
								type  = "text"
								name  = "reg_start_<% $weekend->id %>"
								id    = "reg_start_<% $weekend->id %>"
								size  = "8"
								value = "<% Tab::pickerdate($reg_start) %>"
							>
						</span>
						<span class="quarter">

							<& "/funclib/timepicker.mas",
								id   => "reg_starttime_".$weekend,
								name => "reg_starttime_".$weekend,
								size => 6,
								time => $reg_start
							&>
						</span>

					</div>

					<& "/funclib/datepicker.mas",
						id  => "reg_end_$weekend",
						max => $start
					&>

					<div class="row">

						<span class="half">
							New entries due
						</span>

						<span class="quarter">
							<input
								type  = "text"
								id    = "reg_end_<% $weekend->id %>"
								name  = "reg_end_<% $weekend->id %>"
								size  = "8"
								value = "<% Tab::pickerdate($reg_end) %>"
							>
						</span>
						<span class="quarter">
							<& "/funclib/timepicker.mas",
								id   => "reg_endtime_".$weekend,
								name => "reg_endtime_".$weekend,
								size => 6,
								time => $reg_end
							&>
						</span>

					</div>

				</span>

				<span class="pagehalf">

					<& "/funclib/datepicker.mas",
						id  => "freeze_deadline_$weekend",
						max => $start
					&>

					<div class="row">

						<span class="half">
							Fees &amp; Obligations freeze
						</span>

						<span class="quarter">
							<input
								type  = "text"
								id    = "freeze_deadline_<% $weekend->id %>"
								name  = "freeze_deadline_<% $weekend->id %>"
								size  = "8"
								value = "<% Tab::pickerdate($freeze_deadline) %>"
							>
						</span>
						<span class="quarter">
							<& "/funclib/timepicker.mas",
								id   => "freeze_deadlinetime_".$weekend,
								name => "freeze_deadlinetime_".$weekend,
								size => 6,
								time => $freeze_deadline
							&>
						</span>

					</div>

					<& "/funclib/datepicker.mas",
						id  => "judge_deadline_$weekend",
						max => $start
					&>

					<div class="row">
						<span class="half">
							Judge entries due
						</span>

						<span class="quarter">
							<input
								type  = "text"
								id    = "judge_deadline_<% $weekend->id %>"
								name  = "judge_deadline_<% $weekend->id %>"
								size  = "8"
								value = "<% Tab::pickerdate($judge_deadline) %>"
							>
						</span>
						<span class="quarter">
							<& "/funclib/timepicker.mas",
								id   => "judge_deadlinetime_".$weekend,
								name => "judge_deadlinetime_".$weekend,
								size => 6,
								time => $judge_deadline &>
						</span>
					</div>

					<& "/funclib/datepicker.mas",
						id  => "drop_deadline_$weekend",
						max => $start
					&>

					<div class="row">
						<span class="half">
							Drops &amp; name changes until
						</span>

						<span class="quarter">
							<input
								type  = "text"
								id    = "drop_deadline_<% $weekend->id %>"
								name  = "drop_deadline_<% $weekend->id %>"
								size  = "8"
								value = "<% Tab::pickerdate($drop_deadline) %>"
							>
						</span>
						<span class="quarter">
							<& "/funclib/timepicker.mas",
								id   => "drop_deadlinetime_".$weekend,
								name => "drop_deadlinetime_".$weekend,
								size => 6,
								time => $drop_deadline &>
						</span>
					</div>

					<& "/funclib/datepicker.mas",
						id  => "fine_deadline_$weekend",
						max => $start
					&>

					<div class="row">
						<span class="half">
							Nuisance fines apply after
						</span>

						<span class="quarter">
							<input
								type  = "text"
								id    = "fine_deadline_<% $weekend->id %>"
								name  = "fine_deadline_<% $weekend->id %>"
								size  = "8"
								value = "<% Tab::pickerdate($fine_deadline) %>"
							>
						</span>
						<span class="quarter">
							<&
								"/funclib/timepicker.mas",
								name => "fine_deadlinetime",
								size => 6,
								time => $fine_deadline
							&>
						</span>
					</div>
				</span>
			</div>
%		}

		<div class="liblrow rightalign martopmore">
			<span class="third centeralign">
				<input
					type  = "submit"
					value = "Go to Final Step"
				>
			</span>
		</div>
		</form>

	</div>
