<%args>
	$person
	$other_id       => undef
	$chapter_id     => undef
	$search_email   => undef
	$search_chapter => undef
	$search_last    => undef
	$search_first   => undef
	$judge_id       => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	if ($other_id) {

		my $other = Tab::Person->retrieve($other_id);

		if ($other) {

			my @already = Tab::Conflict->search(
				person     => $person->id,
				conflicted => $other_id
			);

			unless (@already) {

				eval {
					Tab::Conflict->create({
						person     => $person->id,
						conflicted => $other_id,
						added_by   => $person->id,
					});
				};
			}
		}
	}

	if ($chapter_id) {

		my $chapter = Tab::Chapter->retrieve($chapter_id);

		if ($chapter) {

			my @already = Tab::Conflict->search(
				person  => $person->id,
				chapter => $chapter_id
			);

			unless (@already) {

				Tab::Conflict->create({
					person   => $person->id,
					chapter  => $chapter_id,
					added_by => $person->id,
				});
			}
		}
	}

	my @chapters;
	my @persons;

	my $search_string;
	my @params;

	$search_email =~ s/[\W_@]//g;
	$search_first =~ s/[\W_@]//g;
	$search_last =~ s/[\W_@]//g;

	if ($search_email) {
		push @params, $search_email;
		$search_string .= " and person.email = ? ";
	}

	if ($search_last) {
		push @params, $search_last;
		$search_string .= " and person.last = ? ";
	}

	if ($search_first) {
		push @params, $search_first.'%';
		$search_string .= " and person.first like ? ";
	}

	if ($search_string) {

		my $person_sth = $dbh->prepare("
			select
				person.id, person.first, person.middle, person.last,
				CONVERT_TZ(person.last_access, '+00:00', person.tz) as last_access,
				GROUP_CONCAT(distinct(chapter.name) SEPARATOR'<br />') chapters
			from person
				left join judge on person.id = judge.person
				left join school on judge.school = school.id
				left join chapter on school.chapter = chapter.id
			where person.id > 0
				$search_string
			group by person.id
			order by person.last_access DESC, chapter.name, person.last
		");

		$person_sth->execute(@params);

		my $ref = $person_sth->fetchall_hash();

		@persons = eval {
			return @{$ref};
		};
	}


	if ($search_chapter) {
		@chapters = Tab::Chapter->search_where(
			name => { "like", $search_chapter."%" }
		);
	}

	my $sth = $dbh->prepare("
		select
			conflict.id,
			person.id as person, person.email, person.first, person.last,
			CONVERT_TZ(person.last_access, '+00:00', person.tz) as last_access,
			count(judge.id) as judge_count
		from (conflict, person)
			left join judge on person.id = judge.person
		where conflict.person = ?
			and conflict.conflicted = person.id
		group by person.id
		order by person.last_access DESC, person.last
	");

	$sth->execute($person->id);

	my @existings = eval {
		my $ref = $sth->fetchall_hash();
		return @{$ref};
	};

</%init>

	<& "/user/menu.mas",
		person => $person,
		whoami => "comp_conflicts"
	&>

	<div class="main">

		<h2>Standing Conflicts</h2>

		<p>
			These conflicts are meant to reflect a personal or professional
			relationship which means it is unfair for you to be judged the
			other person; such as a relative, or a former student/coach.
			Do NOT use conflicts against judges you simply do not like, or try
			to gain extra strikes; doing so is almost certainly in violation of
			tab policies of tournaments you attend.
		</p>

		<p>
			The conflicted judge must be linked to a Tabroom.com account for a
			standing conflict to work automatically, so be sure to check.
		</p>

		<h6 class="redtext semibold padtop">
			Conflicts entered on Tabroom.com are not confidential
		</h6>

		<p>
			Any information you enter onto Tabroom is potentially viewable by
			third parties, including the people you are conflicting.  If you
			have a conflict (or for that matter, any other information) you
			wish to keep confidential, you should contact tournament
			officials directly instead of entering it here.
		</p>

		<h4>Add Conflict</h4>

		<form action="conflicts.mhtml" method="post">

			<div class="full row">
				<span class="fourfifths">
					<div class="full nospace padvertless">
						<span class="half">
							<input
								type        = "text"
								name        = "search_last"
								size        = "32"
								placeholder = "Last name"
							>
						</span>
						<span class="half">
							<input
								type        = "text"
								name        = "search_first"
								size        = "32"
								placeholder = "First name"
							>
						</span>
					</div>

					<span class="ninetenths padvertless padleftless">
						<input
							type        = "email"
							name        = "search_email"
							size        = "60"
							placeholder = "Email Address"
						>
					</span>
				</span>

				<span class="fifth">
					<input
						type  = "submit"
						value = "Search"
					>
				</span>

			</div>
		</form>

%		if (@persons || @chapters) {

			<h5 class="italic graytext">Search Results</h5>

			<div class="full bluebordertop nospace"></div>

%			foreach my $other (@persons) {
				<div class="row">
					<span class="fifth">
						<% $other->{first} %> <% $other->{middle} %> <% $other->{last} %>
					</span>

					<span class="rightalign threetenths nospace padvert" style="line-height: 14pt;">
						<div class="semibold leftalign graytext full nospace padvertless">
							<% $other->{'chapters'} ? "Has judged for" : "" %>
						</div>
						<span class="ninetenths leftalign">
							<% $other->{'chapters'} %>
						</span>
					</span>

					<span class="threetenths nowrap">
						<span class="twofifths">
							Last login
						</span>
						<span class="threefifths">
							<& "/funclib/showdate.mas", string => $other->{last_access}, format => "shorter" &>
						</span>
					</span>

					<span class="sixth nowrap centeralign">
						<a class="buttonwhite invert bluetext thinner"
							href="conflicts.mhtml?other_id=<% $other->{id} %>"
						>Mark Conflict</a>
					</span>
				</div>
%			}
%		}

%		if (@existings) {
			<h4 class="martop">Existing Conflicts</h4>
%		}

%		foreach my $existing (@existings) {
			<div class="row full marno">
				<span class="fifth nowrap" title="Tabroom ID #<% $existing->{person} %>">
					<% $existing->{first}." ".$existing->{last} %>
				</span>

				<span class="threetenths nowrap">
					<% $existing->{judge_count}
						? "Judged ".$existing->{judge_count}." times"
						: "NOT REGISTERED TO JUDGE"
					%>

				</span>

				<span class="threetenths nowrap">
					<span class="twofifths">
						Last login
					</span>
					<span class="threefifths">
						<& "/funclib/showdate.mas", string => $existing->{last_access}, format => "shorter" &>
					</span>
				</span>

				<span class="fifth rightalign nospace">
					<a class="buttonwhite redtext invert fa fa-trash"
						href="conflict_rm.mhtml?conflict_id=<% $existing->{id} %>">
					</a>
				</span>
			</div>
%		}
	</div>
